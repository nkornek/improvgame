Shader "Brian/PhysicalBaseShader" {
	Properties {
		roughnessV("Glossiness", Range(0.01, 0.99)) = 0.075
		orenNayar("Roughness ", Range(0.0, 1)) = 0
		//_Mip ("Envirioment Blur", Range(0, 7)) = 0
		_Reflective("Reflectivety", Range(0.00, 1.0)) = 1
		freBias("Fresnel Bias", Range(0, 1)) = 0.2
		frePow("Fresnel Power", Range(0, 5)) = 5
		_Color("Color(RGB)", Color) = (1,1,1,1)
		_TeamColor("Team Color(RGB)", Color) = (1,1,1,1)
		cSpecular("Specular Color", Color) = (1,1,1,1)
		_MainTex ("Base (RGB)", 2D) = "white" {}
		_SpecularMap ("Specular Map", 2D) = "white" {}
		_BumpMap ("Bumpmap", 2D) = "bump" {}
		_Cube ("Cubemap", CUBE) = "black" {}
		//unity_Lightmaps("_LightmapTex", 2D) = "black" {}
		lightMapTerm("lightMapTerm", FLOAT) = 0
	}
SubShader {
		Tags { "Queue"="Geometry"
			   "IgnoreProjector"="True"
			   "RenderType"="Opaque"}
			   
		Cull Back
		ZWrite On
		ZTest LEqual
		ColorMask RGBA
		LOD 600
		
			
	Pass {
		Name "FORWARD"
		Tags { "LightMode" = "ForwardBase" }
Program "vp" {
// Vertex combos: 9
//   d3d9 - ALU: 39 to 101
//   d3d11 - ALU: 24 to 55, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 24 to 52, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "SHADOWS_ON" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 unity_SHC;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_3;
  tmpvar_3[0] = _Object2World[0].xyz;
  tmpvar_3[1] = _Object2World[1].xyz;
  tmpvar_3[2] = _Object2World[2].xyz;
  vec3 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * (gl_Vertex.xyz - ((_World2Object * tmpvar_2).xyz * unity_Scale.w)));
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_5 = TANGENT.xyz;
  tmpvar_6 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = gl_Normal.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = gl_Normal.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = gl_Normal.z;
  vec4 v_8;
  v_8.x = _Object2World[0].x;
  v_8.y = _Object2World[1].x;
  v_8.z = _Object2World[2].x;
  v_8.w = _Object2World[3].x;
  vec4 tmpvar_9;
  tmpvar_9.xyz = (tmpvar_7 * v_8.xyz);
  tmpvar_9.w = tmpvar_4.x;
  vec4 v_10;
  v_10.x = _Object2World[0].y;
  v_10.y = _Object2World[1].y;
  v_10.z = _Object2World[2].y;
  v_10.w = _Object2World[3].y;
  vec4 tmpvar_11;
  tmpvar_11.xyz = (tmpvar_7 * v_10.xyz);
  tmpvar_11.w = tmpvar_4.y;
  vec4 v_12;
  v_12.x = _Object2World[0].z;
  v_12.y = _Object2World[1].z;
  v_12.z = _Object2World[2].z;
  v_12.w = _Object2World[3].z;
  vec4 tmpvar_13;
  tmpvar_13.xyz = (tmpvar_7 * v_12.xyz);
  tmpvar_13.w = tmpvar_4.z;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (gl_Normal * unity_Scale.w));
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_15;
  vec3 x2_18;
  vec3 x1_19;
  x1_19.x = dot (unity_SHAr, tmpvar_17);
  x1_19.y = dot (unity_SHAg, tmpvar_17);
  x1_19.z = dot (unity_SHAb, tmpvar_17);
  vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x2_18.x = dot (unity_SHBr, tmpvar_20);
  x2_18.y = dot (unity_SHBg, tmpvar_20);
  x2_18.z = dot (unity_SHBb, tmpvar_20);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_7 * (((_World2Object * tmpvar_16).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_9 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_11 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_13 * unity_Scale.w);
  xlv_TEXCOORD5 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD6 = ((x1_19 + x2_18) + (unity_SHC.xyz * ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y))));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec3 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_6;
  tmpvar_6.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_6.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_6.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_7;
  tmpvar_7.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_6, tmpvar_2) * tmpvar_6)));
  tmpvar_7.w = (tmpvar_5.w * (roughnessV * 7.0));
  vec4 c_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(normal_3);
  vec3 tmpvar_10;
  tmpvar_10 = normalize(xlv_TEXCOORD5);
  vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  float tmpvar_12;
  tmpvar_12 = clamp (dot (tmpvar_9, tmpvar_10), 0.0, 1.0);
  float tmpvar_13;
  tmpvar_13 = clamp (dot (tmpvar_9, tmpvar_11), 0.0, 1.0);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, normalize((tmpvar_10 + tmpvar_11))), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = (roughnessV * roughnessV);
  float tmpvar_16;
  tmpvar_16 = (2.0 * tmpvar_12);
  float tmpvar_17;
  tmpvar_17 = (orenNayar * orenNayar);
  float x_18;
  x_18 = dot (tmpvar_11, tmpvar_9);
  float x_19;
  x_19 = dot (tmpvar_10, tmpvar_9);
  float x_20;
  x_20 = dot (tmpvar_11, tmpvar_9);
  float x_21;
  x_21 = dot (tmpvar_10, tmpvar_9);
  float tmpvar_22;
  tmpvar_22 = min ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))));
  c_8.xyz = (((((tmpvar_4 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_12))) * vec3(((1.0 - (0.5 * (tmpvar_17 / (tmpvar_17 + 0.57)))) + (((0.45 * (tmpvar_17 / (tmpvar_17 + 0.09))) * max (0.0, dot ((tmpvar_11 - (tmpvar_9 * dot (tmpvar_11, tmpvar_9))), (tmpvar_10 - (tmpvar_9 * dot (tmpvar_10, tmpvar_9)))))) * (sin(max ((1.5708 - (sign(x_18) * (1.5708 - (sqrt((1.0 - abs(x_18))) * (1.5708 + (abs(x_18) * (-0.214602 + (abs(x_18) * (0.0865667 + (abs(x_18) * -0.0310296)))))))))), (1.5708 - (sign(x_19) * (1.5708 - (sqrt((1.0 - abs(x_19))) * (1.5708 + (abs(x_19) * (-0.214602 + (abs(x_19) * (0.0865667 + (abs(x_19) * -0.0310296)))))))))))) * (sin(tmpvar_22) / cos(tmpvar_22))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_11, tmpvar_9), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_16 * tmpvar_13) / tmpvar_14), ((tmpvar_16 * tmpvar_12) / tmpvar_14)))) * (((1.0/(((4.0 * tmpvar_15) * pow (tmpvar_12, 4.0)))) * exp((((tmpvar_12 * tmpvar_12) - 1.0) / ((tmpvar_15 * tmpvar_12) * tmpvar_12)))) * tmpvar_5.w))) / (max (0.0, (tmpvar_13 * tmpvar_12)) + 0.09))) * tmpvar_5.x) * _LightColor0.xyz)) * 2.0);
  c_8.w = 1.0;
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (tmpvar_4 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_7.xyz, tmpvar_7.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_5) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_SHAr]
Vector 15 [unity_SHAg]
Vector 16 [unity_SHAb]
Vector 17 [unity_SHBr]
Vector 18 [unity_SHBg]
Vector 19 [unity_SHBb]
Vector 20 [unity_SHC]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 21 [unity_Scale]
Vector 22 [_MainTex_ST]
Vector 23 [_BumpMap_ST]
"vs_3_0
; 65 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c24, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c24.x
dp4 r1.z, r0, c10
dp4 r1.x, r0, c8
dp4 r1.y, r0, c9
mad r2.xyz, r1, c21.w, -v0
mul r1.xyz, v2, c21.w
dp3 r0.y, r2, r3
dp3 r0.x, r2, v1
dp3 r0.z, v2, r2
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o2.xyz, r0.w, r0
dp3 r2.w, r1, c5
mov r0.y, r2.w
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.w, c24.x
mul r1, r0.xyzz, r0.yzzx
dp4 r4.z, r0, c16
dp4 r4.y, r0, c15
dp4 r4.x, r0, c14
mul r2.w, r2, r2
dp4 r0.w, r1, c19
dp4 r0.z, r1, c18
dp4 r0.y, r1, c17
add r1.xyz, r4, r0.yzww
mad r0.x, r0, r0, -r2.w
mul r4.xyz, r0.x, c20
add o7.xyz, r1, r4
mov r0, c10
dp4 r4.z, c13, r0
mov r0, c9
dp4 r4.y, c13, r0
mov r1, c8
dp4 r4.x, c13, r1
dp3 r0.y, r3, c4
dp3 r0.w, -r2, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c21.w
dp3 r0.y, r3, c5
dp3 r0.w, -r2, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c21.w
dp3 r0.y, r3, c6
dp3 r0.w, -r2, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
dp3 o6.y, r3, r4
mul o5, r0, c21.w
dp3 o6.z, v2, r4
dp3 o6.x, v1, r4
mad o1.zw, v3.xyxy, c23.xyxy, c23
mad o1.xy, v3, c22, c22.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 22 [_BumpMap_ST]
Vector 21 [_MainTex_ST]
Matrix 13 [_Object2World] 3
Matrix 16 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 9 [glstate_matrix_mvp] 4
Vector 4 [unity_SHAb]
Vector 3 [unity_SHAg]
Vector 2 [unity_SHAr]
Vector 7 [unity_SHBb]
Vector 6 [unity_SHBg]
Vector 5 [unity_SHBr]
Vector 8 [unity_SHC]
Vector 20 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 80.00 (60 instructions), vertex: 32, texture: 0,
//   sequencer: 28,  13 GPRs, 12 threads,
// Performance (if enough threads): ~80 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacpmaaaaadgaaaaaaaaaaaaaaaceaaaaaaaaaaaaaciaaaaaaaaa
aaaaaaaaaaaaacfiaaaaaabmaaaaacelpppoadaaaaaaaaapaaaaaabmaaaaaaaa
aaaaaceeaaaaabeiaaacaabgaaabaaaaaaaaabfeaaaaaaaaaaaaabgeaaacaabf
aaabaaaaaaaaabfeaaaaaaaaaaaaabhaaaacaaanaaadaaaaaaaaabiaaaaaaaaa
aaaaabjaaaacaabaaaaeaaaaaaaaabiaaaaaaaaaaaaaabjoaaacaaaaaaabaaaa
aaaaableaaaaaaaaaaaaabmeaaacaaabaaabaaaaaaaaabfeaaaaaaaaaaaaabnj
aaacaaajaaaeaaaaaaaaabiaaaaaaaaaaaaaabomaaacaaaeaaabaaaaaaaaabfe
aaaaaaaaaaaaabphaaacaaadaaabaaaaaaaaabfeaaaaaaaaaaaaacacaaacaaac
aaabaaaaaaaaabfeaaaaaaaaaaaaacanaaacaaahaaabaaaaaaaaabfeaaaaaaaa
aaaaacbiaaacaaagaaabaaaaaaaaabfeaaaaaaaaaaaaaccdaaacaaafaaabaaaa
aaaaabfeaaaaaaaaaaaaaccoaaacaaaiaaabaaaaaaaaabfeaaaaaaaaaaaaacdi
aaacaabeaaabaaaaaaaaabfeaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgkgfgdhedc
fhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfhgphcgmgedcep
gcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdeiebgcaahf
gogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhcaahfgogjhehjfpfdeiecgcaa
hfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiechcaahfgogjhehjfpfdeiedaa
hfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaakl
aaaaaaaaaaaaadgaaagbaaamaaaaaaaaaaaaaaaaaaaageohaaaaaaabaaaaaaae
aaaaaaakaaaaacjaaabaaaahaaaagaaiaaaadaajaacafaakaaaapafaaaachbfb
aaadpcfcaaaepdfdaaafpefeaaaghfffaaajhgfgaaaaaadaaaaabadbaaaabaeg
aaaabadoaaaabadpaaaabaeaaaaaaacnaaaaaacoaaaabacpaaaabaecpaffeaah
aaaabcaamcaaaaaaaaaaeaalaaaabcaameaaaaaaaaaagaapgabfbcaabcaaaaaa
aaaagablgacbbcaabcaaaaaaaaaagachgacnbcaabcaaaaaaaaaagaddgadjbcaa
bcaaaaaaaaaagadpcaefbcaaccaaaaaaafpihaaaaaaaagiiaaaaaaaaafpimaaa
aaaaagiiaaaaaaaaafpibaaaaaaaadnaaaaaaaaaafpidaaaaaaaacdpaaaaaaaa
miapaaaaaabliiaakbahamaamiapaaaaaamgiiaaklahalaamiapaaaaaalbdeje
klahakaamiapiadoaagmaadeklahajaamiahaaajaamamgmaalbcaabdceicajag
aablgmgmkbamaoiabechaaaiaaleblblcbbdabamkibeagagaablgmebibamapan
kmbhacafaamgmnmdibamapaokmchacaaaalbgcedibamaoaokmehacaeaabngfid
mbabamaomiahaaaiaamamgleclbcabaimiahaaajaalelbleclbbaaajmiahaaaj
aamagmleclbaaaajmiahaaalaalelbleclbbabaimiahaaakabgdlomaolabamae
mialaaaeaagmgcleklabanacmialaaaiaagmgcmaklamanaabeahaaacaalbmagm
kbabapaiaebeaeaeaagmmgmgoaaeacafbeahaaaaaagdbllbkbabbeaiaebeafaf
aalblbgmoaaeacafbeahaaaiaalbleblkbaaapaiaebcagagaalololbpaagakaf
miahaaalaamagmleclbaabalmiahaaaiaagmlemaklaaaoaibealaaaaaamnblbl
obakamaemiahaaakabmablmaklajbeahaeeeagacaalobngmpaakabackiihacah
aemggcmdibakapapmiahaaajaamglemaklaaanaikiehaaaiaelbgcidibakaoap
kibbadacaalolomanaakamaokiccadacaagdloianaaaakaomiabiaafaaloloaa
paalamaamiaciaafaagdloaapaaaalaamiaeiaafaalobnaapaalabaamiadiaaa
aabklabkiladbfbfmiamiaaaaaagkmagiladbgbgmiahaaabaegmloleklakanai
aiipabaiaalehclbobajajacmiakaaafaalblglmklaaanadaibbaaadaadoangm
gpacajajaiccaaadaadoanmggpadajajgeieaaadaadoangbgpaeajaabeabaaaa
aakhkhlbkpaiafafaeciaeaeaagmgmbloaabahacbeacaaaaaakhkhblkpaiagaf
aeciafafaamglbmgoaabahaabeaeaaaaaakhkhlbkpaiahabaeihagabaablmamg
kbaaaiahmiapiaacaaaablaakbagbeaamiapiaadaaaablaakbafbeaamiapiaae
aaaablaakbaebeaaaiihaaaaaalelegmoaadaaacmiahiaagaalemaaaoaaaabaa
miabaaaaaablblaaoaaaabaamiabaaaaaamgmggmolacacaafibaaaaaaaaaaagm
ocaaaaiamiahiaabaamagmaaobacaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [unity_SHAr]
Vector 464 [unity_SHAg]
Vector 463 [unity_SHAb]
Vector 462 [unity_SHBr]
Vector 461 [unity_SHBg]
Vector 460 [unity_SHBb]
Vector 459 [unity_SHC]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 458 [unity_Scale]
Vector 457 [_MainTex_ST]
Vector 456 [_BumpMap_ST]
"sce_vp_rsx // 59 instructions using 9 registers
[Configuration]
8
0000003b41050900
[Microcode]
944
00019c6c005d200d8186c0836041fffc00029c6c00400e0c0106c0836041dffc
00021c6c005d300c0186c0836041dffc00031c6c009ca20c013fc0c36041dffc
401f9c6c011c8800810040d560607f9c401f9c6c011c9808010400d740619f9c
401f9c6c01d0300d8106c0c360403f80401f9c6c01d0200d8106c0c360405f80
401f9c6c01d0100d8106c0c360409f80401f9c6c01d0000d8106c0c360411f80
00001c6c01506e0c010600c360411ffc00001c6c0150620c010600c360405ffc
00009c6c01505e0c010600c360411ffc00009c6c0150520c010600c360405ffc
00011c6c01504e0c010600c360411ffc00011c6c0150420c010600c360405ffc
00039c6c01d0a00d8686c0c360405ffc00039c6c01d0900d8686c0c360409ffc
00039c6c01d0800d8686c0c360411ffc00019c6c0150400c0c8600c360411ffc
00019c6c0150600c0c8600c360405ffc00001c6c0150500c0c8600c360409ffc
00031c6c0190a00c0886c0c360405ffc00031c6c0190900c0886c0c360409ffc
00031c6c0190800c0886c0c360411ffc00021c6c00800243011845436041dffc
00021c6c01000230812185630221dffc00041c6c011ca00c0cbfc0e30041dffc
401f9c6c0140020c0106074360405fb0401f9c6c01400e0c0106074360411fb0
00009c6c0080002a8095404360409ffc00019c6c0040002a8086c08360409ffc
00031c6c00800e0c08bfc0836041dffc00001c6c0150608c108600c360403ffc
00009c6c0150508c108600c360403ffc00011c6c0150408c108600c360403ffc
00029c6c0140020c0106084360405ffc00029c6c01400e0c1086008360411ffc
00021c6c019cf00c0686c0c360405ffc00021c6c019d000c0686c0c360409ffc
00021c6c019d100c0686c0c360411ffc00021c6c010000000680036aa0a03ffc
00019c6c0080000d069a03436041fffc401f9c6c0140000c0c86074360409fb0
00029c6c0140000c1086064360409ffc00001c6c0150600c0c8600c360409ffc
00009c6c0150500c0c8600c360409ffc00011c6c0150400c0c8600c360409ffc
00031c6c01dcc00d8686c0c360405ffc00031c6c01dcd00d8686c0c360409ffc
00031c6c01dce00d8686c0c360411ffc00019c6c00c0000c0886c0830321dffc
00021c6c009cb07f888600c36041dffc401f9c6c00c0000c0886c08301a1dfb4
00019c6c0140000c0a86054360411ffc401f9c6c009ca00d84bfc0c36041ffa4
401f9c6c209ca00d82bfc0c001b1e128401f9c6c009ca00d80bfc0c36041ffac
401f9c6c00800000048605436041dfa1
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 160 // 160 used size, 14 vars
Vector 128 [_MainTex_ST] 4
Vector 144 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 70 instructions, 4 temp regs, 0 temp arrays:
// ALU 39 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefieceddkfanfhaeegfpllnlbdombihfeikndcpabaaaaaagaalaaaaadaaaaaa
cmaaaaaapeaaaaaanmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheooaaaaaaaaiaaaaaa
aiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaneaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaneaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaneaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
hmajaaaaeaaaabaafpacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaa
giaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaaiaaaaaa
ogikcaaaaaaaaaaaaiaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaajhcaabaaa
aaaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaaaaaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaah
ecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaadiaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgafbaiaebaaaaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaia
ebaaaaaaaaaaaaaaegaibaaaabaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaa
adaaaaaaaoaaaaaakgakbaiaebaaaaaaaaaaaaaaegambaaaaaaaaaaadgaaaaaf
icaabaaaabaaaaaaakaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaaakiacaaa
adaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaaakiacaaaadaaaaaaanaaaaaa
dgaaaaagecaabaaaadaaaaaaakiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaa
egbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaa
acaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaadgaaaaaficaabaaaabaaaaaabkaabaaaaaaaaaaa
dgaaaaagbcaabaaaadaaaaaabkiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaa
adaaaaaabkiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaabkiacaaa
adaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaa
adaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaai
pccabaaaaeaaaaaaegaobaaaabaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaag
bcaabaaaabaaaaaackiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaa
ckiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaackiacaaaadaaaaaa
aoaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
ecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipccabaaa
afaaaaaaegaobaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaajhcaabaaa
aaaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaa
egiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahcccabaaaagaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaah
bccabaaaagaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaaheccabaaa
agaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaa
abaaaaaaegiocaaaacaaaaaabcaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaa
abaaaaaaegiocaaaacaaaaaabdaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaa
abaaaaaaegiocaaaacaaaaaabeaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaa
acaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaa
egiocaaaacaaaaaabfaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaa
egiocaaaacaaaaaabgaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaa
egiocaaaacaaaaaabhaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaahaaaaaa
egiccaaaacaaaaaabiaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize((tmpvar_18 * (((_World2Object * tmpvar_30).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_33;
  mediump vec4 normal_34;
  normal_34 = tmpvar_32;
  highp float vC_35;
  mediump vec3 x3_36;
  mediump vec3 x2_37;
  mediump vec3 x1_38;
  highp float tmpvar_39;
  tmpvar_39 = dot (unity_SHAr, normal_34);
  x1_38.x = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAg, normal_34);
  x1_38.y = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAb, normal_34);
  x1_38.z = tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42 = (normal_34.xyzz * normal_34.yzzx);
  highp float tmpvar_43;
  tmpvar_43 = dot (unity_SHBr, tmpvar_42);
  x2_37.x = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBg, tmpvar_42);
  x2_37.y = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBb, tmpvar_42);
  x2_37.z = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y));
  vC_35 = tmpvar_46;
  highp vec3 tmpvar_47;
  tmpvar_47 = (unity_SHC.xyz * vC_35);
  x3_36 = tmpvar_47;
  tmpvar_33 = ((x1_38 + x2_37) + x3_36);
  shlight_3 = tmpvar_33;
  tmpvar_10 = shlight_3;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  mediump vec3 lightDir_33;
  lightDir_33 = xlv_TEXCOORD5;
  mediump vec3 viewDir_34;
  viewDir_34 = xlv_TEXCOORD1;
  mediump vec4 c_35;
  mediump float B_36;
  mediump float A_37;
  highp float rough_sq_38;
  mediump vec3 Rs_numerator_39;
  highp float roughness_c_40;
  highp float roughness_b_41;
  highp float roughness_a_42;
  mediump float roughness_43;
  highp float geo_denominator_44;
  highp float geo_numerator_45;
  mediump vec3 n_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = normalize(tmpvar_18);
  n_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = normalize(lightDir_33);
  mediump vec3 tmpvar_49;
  tmpvar_49 = normalize(viewDir_34);
  mediump float tmpvar_50;
  tmpvar_50 = clamp (dot (n_46, tmpvar_48), 0.0, 1.0);
  mediump float tmpvar_51;
  tmpvar_51 = clamp (dot (n_46, tmpvar_49), 0.0, 1.0);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (tmpvar_49, normalize((tmpvar_48 + tmpvar_49))), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = (roughnessV * roughnessV);
  mediump float tmpvar_54;
  tmpvar_54 = (2.0 * tmpvar_50);
  geo_numerator_45 = tmpvar_54;
  geo_denominator_44 = tmpvar_52;
  mediump float tmpvar_55;
  tmpvar_55 = (1.0/(((4.0 * tmpvar_53) * pow (tmpvar_50, 4.0))));
  roughness_a_42 = tmpvar_55;
  mediump float tmpvar_56;
  tmpvar_56 = ((tmpvar_50 * tmpvar_50) - 1.0);
  roughness_b_41 = tmpvar_56;
  mediump float tmpvar_57;
  tmpvar_57 = ((tmpvar_53 * tmpvar_50) * tmpvar_50);
  roughness_c_40 = tmpvar_57;
  highp float tmpvar_58;
  tmpvar_58 = ((roughness_a_42 * exp((roughness_b_41 / roughness_c_40))) * tmpvar_13);
  roughness_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_49, n_46), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_60;
  tmpvar_60 = vec3(((tmpvar_59 * min (1.0, min (((geo_numerator_45 * tmpvar_51) / geo_denominator_44), ((geo_numerator_45 * tmpvar_50) / geo_denominator_44)))) * roughness_43));
  Rs_numerator_39 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = (orenNayar * orenNayar);
  rough_sq_38 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = (1.0 - (0.5 * (rough_sq_38 / (rough_sq_38 + 0.57))));
  A_37 = tmpvar_62;
  highp float tmpvar_63;
  tmpvar_63 = (0.45 * (rough_sq_38 / (rough_sq_38 + 0.09)));
  B_36 = tmpvar_63;
  mediump float x_64;
  x_64 = dot (tmpvar_49, n_46);
  mediump float x_65;
  x_65 = dot (tmpvar_48, n_46);
  mediump float x_66;
  x_66 = dot (tmpvar_49, n_46);
  mediump float x_67;
  x_67 = dot (tmpvar_48, n_46);
  mediump float tmpvar_68;
  tmpvar_68 = min ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))));
  c_35.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_50))) * vec3((A_37 + ((B_36 * max (0.0, dot ((tmpvar_49 - (n_46 * dot (tmpvar_49, n_46))), (tmpvar_48 - (n_46 * dot (tmpvar_48, n_46)))))) * (sin(max ((1.5708 - (sign(x_64) * (1.5708 - (sqrt((1.0 - abs(x_64))) * (1.5708 + (abs(x_64) * (-0.214602 + (abs(x_64) * (0.0865667 + (abs(x_64) * -0.0310296)))))))))), (1.5708 - (sign(x_65) * (1.5708 - (sqrt((1.0 - abs(x_65))) * (1.5708 + (abs(x_65) * (-0.214602 + (abs(x_65) * (0.0865667 + (abs(x_65) * -0.0310296)))))))))))) * (sin(tmpvar_68) / cos(tmpvar_68))))))) + (((cSpecular.xyz * (Rs_numerator_39 / (max (0.0, (tmpvar_51 * tmpvar_50)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * 2.0);
  c_35.w = 1.0;
  c_1 = c_35;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize((tmpvar_18 * (((_World2Object * tmpvar_30).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_33;
  mediump vec4 normal_34;
  normal_34 = tmpvar_32;
  highp float vC_35;
  mediump vec3 x3_36;
  mediump vec3 x2_37;
  mediump vec3 x1_38;
  highp float tmpvar_39;
  tmpvar_39 = dot (unity_SHAr, normal_34);
  x1_38.x = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAg, normal_34);
  x1_38.y = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAb, normal_34);
  x1_38.z = tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42 = (normal_34.xyzz * normal_34.yzzx);
  highp float tmpvar_43;
  tmpvar_43 = dot (unity_SHBr, tmpvar_42);
  x2_37.x = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBg, tmpvar_42);
  x2_37.y = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBb, tmpvar_42);
  x2_37.z = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y));
  vC_35 = tmpvar_46;
  highp vec3 tmpvar_47;
  tmpvar_47 = (unity_SHC.xyz * vC_35);
  x3_36 = tmpvar_47;
  tmpvar_33 = ((x1_38 + x2_37) + x3_36);
  shlight_3 = tmpvar_33;
  tmpvar_10 = shlight_3;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  mediump vec3 lightDir_33;
  lightDir_33 = xlv_TEXCOORD5;
  mediump vec3 viewDir_34;
  viewDir_34 = xlv_TEXCOORD1;
  mediump vec4 c_35;
  mediump float B_36;
  mediump float A_37;
  highp float rough_sq_38;
  mediump vec3 Rs_numerator_39;
  highp float roughness_c_40;
  highp float roughness_b_41;
  highp float roughness_a_42;
  mediump float roughness_43;
  highp float geo_denominator_44;
  highp float geo_numerator_45;
  mediump vec3 n_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = normalize(normal_18);
  n_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = normalize(lightDir_33);
  mediump vec3 tmpvar_49;
  tmpvar_49 = normalize(viewDir_34);
  mediump float tmpvar_50;
  tmpvar_50 = clamp (dot (n_46, tmpvar_48), 0.0, 1.0);
  mediump float tmpvar_51;
  tmpvar_51 = clamp (dot (n_46, tmpvar_49), 0.0, 1.0);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (tmpvar_49, normalize((tmpvar_48 + tmpvar_49))), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = (roughnessV * roughnessV);
  mediump float tmpvar_54;
  tmpvar_54 = (2.0 * tmpvar_50);
  geo_numerator_45 = tmpvar_54;
  geo_denominator_44 = tmpvar_52;
  mediump float tmpvar_55;
  tmpvar_55 = (1.0/(((4.0 * tmpvar_53) * pow (tmpvar_50, 4.0))));
  roughness_a_42 = tmpvar_55;
  mediump float tmpvar_56;
  tmpvar_56 = ((tmpvar_50 * tmpvar_50) - 1.0);
  roughness_b_41 = tmpvar_56;
  mediump float tmpvar_57;
  tmpvar_57 = ((tmpvar_53 * tmpvar_50) * tmpvar_50);
  roughness_c_40 = tmpvar_57;
  highp float tmpvar_58;
  tmpvar_58 = ((roughness_a_42 * exp((roughness_b_41 / roughness_c_40))) * tmpvar_13);
  roughness_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_49, n_46), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_60;
  tmpvar_60 = vec3(((tmpvar_59 * min (1.0, min (((geo_numerator_45 * tmpvar_51) / geo_denominator_44), ((geo_numerator_45 * tmpvar_50) / geo_denominator_44)))) * roughness_43));
  Rs_numerator_39 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = (orenNayar * orenNayar);
  rough_sq_38 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = (1.0 - (0.5 * (rough_sq_38 / (rough_sq_38 + 0.57))));
  A_37 = tmpvar_62;
  highp float tmpvar_63;
  tmpvar_63 = (0.45 * (rough_sq_38 / (rough_sq_38 + 0.09)));
  B_36 = tmpvar_63;
  mediump float x_64;
  x_64 = dot (tmpvar_49, n_46);
  mediump float x_65;
  x_65 = dot (tmpvar_48, n_46);
  mediump float x_66;
  x_66 = dot (tmpvar_49, n_46);
  mediump float x_67;
  x_67 = dot (tmpvar_48, n_46);
  mediump float tmpvar_68;
  tmpvar_68 = min ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))));
  c_35.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_50))) * vec3((A_37 + ((B_36 * max (0.0, dot ((tmpvar_49 - (n_46 * dot (tmpvar_49, n_46))), (tmpvar_48 - (n_46 * dot (tmpvar_48, n_46)))))) * (sin(max ((1.5708 - (sign(x_64) * (1.5708 - (sqrt((1.0 - abs(x_64))) * (1.5708 + (abs(x_64) * (-0.214602 + (abs(x_64) * (0.0865667 + (abs(x_64) * -0.0310296)))))))))), (1.5708 - (sign(x_65) * (1.5708 - (sqrt((1.0 - abs(x_65))) * (1.5708 + (abs(x_65) * (-0.214602 + (abs(x_65) * (0.0865667 + (abs(x_65) * -0.0310296)))))))))))) * (sin(tmpvar_68) / cos(tmpvar_68))))))) + (((cSpecular.xyz * (Rs_numerator_39 / (max (0.0, (tmpvar_51 * tmpvar_50)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * 2.0);
  c_35.w = 1.0;
  c_1 = c_35;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 160 // 160 used size, 14 vars
Vector 128 [_MainTex_ST] 4
Vector 144 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 70 instructions, 4 temp regs, 0 temp arrays:
// ALU 39 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_3
eefiecedhellhinjoemkicilgicpndoafmelmnlkabaaaaaaoabaaaaaaeaaaaaa
daaaaaaakmafaaaadaapaaaapiapaaaaebgpgodjheafaaaaheafaaaaaaacpopp
piaeaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaiaa
acaaabaaaaaaaaaaabaaaeaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
acaabcaaahaaafaaaaaaaaaaadaaaaaaaeaaamaaaaaaaaaaadaaamaaadaabaaa
aaaaaaaaadaabaaaafaabdaaaaaaaaaaaaaaaaaaabacpoppfbaaaaafbiaaapka
aaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaahiaadaaoekaafaaaaadabaaahiaaaaaffia
beaaoekaaeaaaaaeaaaaaliabdaakekaaaaaaaiaabaakeiaaeaaaaaeaaaaahia
bfaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiabgaaoekaaeaaaaae
aaaaahiaaaaaoeiabhaappkaaaaaoejbafaaaaadabaaahiaaaaaffibbbaaoeka
aeaaaaaeabaaahiabaaaoekaaaaaaaibabaaoeiaaeaaaaaeabaaaliabcaakeka
aaaakkibabaakeiaabaaaaacacaaaiiaabaaaaiaabaaaaacadaaahiaacaaoeja
afaaaaadaeaaahiaadaanciaabaamjjaaeaaaaaeadaaahiaadaamjiaabaancja
aeaaoeibafaaaaadadaaahiaadaaoeiaabaappjaabaaaaacaeaaabiabaaaaaka
abaaaaacaeaaaciabbaaaakaabaaaaacaeaaaeiabcaaaakaaiaaaaadacaaacia
adaaoeiaaeaaoeiaaiaaaaadacaaabiaabaaoejaaeaaoeiaaiaaaaadacaaaeia
acaaoejaaeaaoeiaafaaaaadacaaapoaacaaoeiabhaappkaabaaaaacacaaaiia
abaaffiaabaaaaacaeaaabiabaaaffkaabaaaaacaeaaaciabbaaffkaabaaaaac
aeaaaeiabcaaffkaaiaaaaadacaaaciaadaaoeiaaeaaoeiaaiaaaaadacaaabia
abaaoejaaeaaoeiaaiaaaaadacaaaeiaacaaoejaaeaaoeiaafaaaaadadaaapoa
acaaoeiabhaappkaabaaaaacacaaabiabaaakkkaabaaaaacacaaaciabbaakkka
abaaaaacacaaaeiabcaakkkaaiaaaaadabaaaciaadaaoeiaacaaoeiaaiaaaaad
abaaabiaabaaoejaacaaoeiaaiaaaaadabaaaeiaacaaoejaacaaoeiaafaaaaad
aeaaapoaabaaoeiabhaappkaabaaaaacabaaapiaaeaaoekaafaaaaadacaaahia
abaaffiabeaaoekaaeaaaaaeacaaahiabdaaoekaabaaaaiaacaaoeiaaeaaaaae
abaaahiabfaaoekaabaakkiaacaaoeiaaeaaaaaeabaaahiabgaaoekaabaappia
abaaoeiaaiaaaaadafaaaboaabaaoejaabaaoeiaaiaaaaadafaaacoaadaaoeia
abaaoeiaaiaaaaadacaaaciaadaaoeiaaaaaoeiaaiaaaaadafaaaeoaacaaoeja
abaaoeiaaiaaaaadacaaabiaabaaoejaaaaaoeiaaiaaaaadacaaaeiaacaaoeja
aaaaoeiaaiaaaaadaaaaabiaacaaoeiaacaaoeiaahaaaaacaaaaabiaaaaaaaia
afaaaaadabaaahoaaaaaaaiaacaaoeiaafaaaaadaaaaahiaacaaoejabhaappka
afaaaaadabaaahiaaaaaffiabbaaoekaaeaaaaaeaaaaaliabaaakekaaaaaaaia
abaakeiaaeaaaaaeaaaaahiabcaaoekaaaaakkiaaaaapeiaabaaaaacaaaaaiia
biaaaakaajaaaaadabaaabiaafaaoekaaaaaoeiaajaaaaadabaaaciaagaaoeka
aaaaoeiaajaaaaadabaaaeiaahaaoekaaaaaoeiaafaaaaadacaaapiaaaaacjia
aaaakeiaajaaaaadadaaabiaaiaaoekaacaaoeiaajaaaaadadaaaciaajaaoeka
acaaoeiaajaaaaadadaaaeiaakaaoekaacaaoeiaacaaaaadabaaahiaabaaoeia
adaaoeiaafaaaaadaaaaaciaaaaaffiaaaaaffiaaeaaaaaeaaaaabiaaaaaaaia
aaaaaaiaaaaaffibaeaaaaaeagaaahoaalaaoekaaaaaaaiaabaaoeiaafaaaaad
aaaaapiaaaaaffjaanaaoekaaeaaaaaeaaaaapiaamaaoekaaaaaaajaaaaaoeia
aeaaaaaeaaaaapiaaoaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaapaaoeka
aaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiappppaaaafdeieefchmajaaaaeaaaabaafpacaaaafjaaaaae
egiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaabjaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaa
gfaaaaadpccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaadhccabaaa
agaaaaaagfaaaaadhccabaaaahaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaajaaaaaakgiocaaa
aaaaaaaaajaaaaaadiaaaaajhcaabaaaaaaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaa
aaaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
aaaaaaaaaaaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaa
abaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaa
egacbaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaacaaaaaadiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
pgbpbaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgafbaia
ebaaaaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaallcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaiaebaaaaaaaaaaaaaaegaibaaaabaaaaaa
dcaaaaallcaabaaaaaaaaaaaegiicaaaadaaaaaaaoaaaaaakgakbaiaebaaaaaa
aaaaaaaaegambaaaaaaaaaaadgaaaaaficaabaaaabaaaaaaakaabaaaaaaaaaaa
dgaaaaagbcaabaaaadaaaaaaakiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaa
adaaaaaaakiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaaakiacaaa
adaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaa
adaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaai
pccabaaaadaaaaaaegaobaaaabaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaaf
icaabaaaabaaaaaabkaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaabkiacaaa
adaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaabkiacaaaadaaaaaaanaaaaaa
dgaaaaagecaabaaaadaaaaaabkiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaa
egbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaa
acaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaaaeaaaaaaegaobaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaadgaaaaagbcaabaaaabaaaaaackiacaaaadaaaaaa
amaaaaaadgaaaaagccaabaaaabaaaaaackiacaaaadaaaaaaanaaaaaadgaaaaag
ecaabaaaabaaaaaackiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaaipccabaaaafaaaaaaegaobaaaaaaaaaaapgipcaaa
adaaaaaabeaaaaaadiaaaaajhcaabaaaaaaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaa
aaaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
aaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahcccabaaaagaaaaaaegacbaaa
acaaaaaaegacbaaaaaaaaaaabaaaaaahbccabaaaagaaaaaaegbcbaaaabaaaaaa
egacbaaaaaaaaaaabaaaaaaheccabaaaagaaaaaaegbcbaaaacaaaaaaegacbaaa
aaaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaaaaaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaabcaaaaaa
egaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaabdaaaaaa
egaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaabeaaaaaa
egaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaa
aaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaabfaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaabgaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaabhaaaaaaegaobaaa
acaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaiaebaaaaaa
aaaaaaaadcaaaaakhccabaaaahaaaaaaegiccaaaacaaaaaabiaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheooaaaaaaa
aiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
neaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaneaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapaaaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
neaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaneaaaaaaafaaaaaa
aaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaa
ahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_LightmapST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_3;
  tmpvar_3[0] = _Object2World[0].xyz;
  tmpvar_3[1] = _Object2World[1].xyz;
  tmpvar_3[2] = _Object2World[2].xyz;
  vec3 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * (gl_Vertex.xyz - ((_World2Object * tmpvar_2).xyz * unity_Scale.w)));
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_5 = TANGENT.xyz;
  tmpvar_6 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = gl_Normal.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = gl_Normal.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = gl_Normal.z;
  vec4 v_8;
  v_8.x = _Object2World[0].x;
  v_8.y = _Object2World[1].x;
  v_8.z = _Object2World[2].x;
  v_8.w = _Object2World[3].x;
  vec4 tmpvar_9;
  tmpvar_9.xyz = (tmpvar_7 * v_8.xyz);
  tmpvar_9.w = tmpvar_4.x;
  vec4 v_10;
  v_10.x = _Object2World[0].y;
  v_10.y = _Object2World[1].y;
  v_10.z = _Object2World[2].y;
  v_10.w = _Object2World[3].y;
  vec4 tmpvar_11;
  tmpvar_11.xyz = (tmpvar_7 * v_10.xyz);
  tmpvar_11.w = tmpvar_4.y;
  vec4 v_12;
  v_12.x = _Object2World[0].z;
  v_12.y = _Object2World[1].z;
  v_12.z = _Object2World[2].z;
  v_12.w = _Object2World[3].z;
  vec4 tmpvar_13;
  tmpvar_13.xyz = (tmpvar_7 * v_12.xyz);
  tmpvar_13.w = tmpvar_4.z;
  vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_7 * (((_World2Object * tmpvar_14).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_9 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_11 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_13 * unity_Scale.w);
  xlv_TEXCOORD5 = ((gl_MultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 _Color;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_5.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_5.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_6;
  tmpvar_6.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_5, tmpvar_2) * tmpvar_5)));
  tmpvar_6.w = (tmpvar_4.w * (roughnessV * 7.0));
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (unity_Lightmap, xlv_TEXCOORD5);
  c_1.xyz = ((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * ((8.0 * tmpvar_7.w) * tmpvar_7.xyz));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_6.xyz, tmpvar_6.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_4) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 13 [unity_Scale]
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_BumpMap_ST]
"vs_3_0
; 39 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
def c17, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c17.x
dp4 r1.z, r0, c10
dp4 r1.x, r0, c8
dp4 r1.y, r0, c9
mad r1.xyz, r1, c13.w, -v0
dp3 r0.y, r1, r2
dp3 r0.x, r1, v1
dp3 r0.z, v2, r1
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o2.xyz, r0.w, r0
dp3 r0.y, r2, c4
dp3 r0.w, -r1, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c13.w
dp3 r0.y, r2, c5
dp3 r0.w, -r1, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c13.w
dp3 r0.y, r2, c6
dp3 r0.w, -r1, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul o5, r0, c13.w
mad o1.zw, v3.xyxy, c16.xyxy, c16
mad o1.xy, v3, c15, c15.zwzw
mad o6.xy, v4, c14, c14.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 15 [_BumpMap_ST]
Vector 14 [_MainTex_ST]
Matrix 5 [_Object2World] 3
Matrix 8 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Matrix 1 [glstate_matrix_mvp] 4
Vector 13 [unity_LightmapST]
Vector 12 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 53.33 (40 instructions), vertex: 64, texture: 0,
//   sequencer: 20,  12 GPRs, 15 threads,
// Performance (if enough threads): ~64 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacbeaaaaacgeaaaaaaaaaaaaaaceaaaaaaaaaaaaabkeaaaaaaaa
aaaaaaaaaaaaabhmaaaaaabmaaaaabgppppoadaaaaaaaaaiaaaaaabmaaaaaaaa
aaaaabgiaaaaaalmaaacaaapaaabaaaaaaaaaamiaaaaaaaaaaaaaaniaaacaaao
aaabaaaaaaaaaamiaaaaaaaaaaaaaaoeaaacaaafaaadaaaaaaaaaapeaaaaaaaa
aaaaabaeaaacaaaiaaaeaaaaaaaaaapeaaaaaaaaaaaaabbcaaacaaaaaaabaaaa
aaaaabciaaaaaaaaaaaaabdiaaacaaabaaaeaaaaaaaaaapeaaaaaaaaaaaaabel
aaacaaanaaabaaaaaaaaaamiaaaaaaaaaaaaabfmaaacaaamaaabaaaaaaaaaami
aaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpengbgjgofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaaklklaaadaaad
aaaeaaaeaaabaaaaaaaaaaaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphcgmge
fdhagbgdgfedgbgngfhcgbfagphdaaklaaabaaadaaabaaadaaabaaaaaaaaaaaa
ghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpemgjghgihegngb
hafdfeaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaacgeaafbaaalaaaaaaaaaaaaaaaaaaaafemgaaaaaaab
aaaaaaafaaaaaaahaaaaacjaaabaaaafaaaagaagaaaadaahaaaafaaiaacbfaaj
aaaapafaaaachbfbaaadpcfcaaaepdfdaaafpefeaaagdfffaaaaaaceaaaabacf
aaaabadbaaaabacoaaaabacpaaaabadaaaaabacdpbfffaafaaaabcabmcaaaaaa
aaaaeaakaaaabcaameaaaaaaaaaagaaogabebcaabcaaaaaaaaaagabkgacabcaa
bcaaaaaaaaaagacggacmbcaaccaaaaaaafpihaaaaaaaagiiaaaaaaaaafpicaaa
aaaaagiiaaaaaaaaafpibaaaaaaaadnaaaaaaaaaafpidaaaaaaaadmhaaaaaaaa
afpieaaaaaaaadmhaaaaaaaamiapaaaaaabliiaakbahaeaamiapaaaaaamgiiaa
klahadaamiapaaaaaalbdejeklahacaamiapiadoaagmaadeklahabaamiahaaai
aamamgmaalakaaalbeccaaajaablgmblkbacagackibeajajaablgmebibacahaf
kmbhafakaamggcmdibacahagkmchafaaaalbgcedibacagagkmehafagaabngfid
mbabacagmiahaaaiaalelbleclajaaaimiahaaaiaamagmleclaiaaaimiahaaag
abgdlomaolabacagmiahaaafaagmgcleklabafafmiahaaalaagmloleklacafaa
beahaaaaaalbgcgmkbabahalaebeadadaagmgmgmoaafaaakbeaeaaaeaalblbmg
oaafaaalaebbaeafaalbmglboaalakakbeacaaafaalolomgpaajagafmiahaaai
abmablmaklaiamahaeelafaaaamnblmgobagacaakiebabacaalolomdnaaiacah
kichacagaemggcmaibaiahagkiehacahaelbgciaibaiagagmiadiaafaabjlabk
ilaeananmiadiaaaaabjlabkiladaoaomiamiaaaaadbkmagiladapapmiamaaac
aalbigpbklaaafacmiahaaahaegmloleklaiafahkieiaaadaagmgmidmaahagah
beacaaacaagdlomgpaaaaiacaeciadaeaamglbmgoaahagabbeaeaaacaalobnbl
paaiabacaecbaeaaaalolomgpaacacaafibiaaafaalbmggmoaahagiamiapiaac
aaaablaakbafamaamiapiaadaaaablaakbaeamaamiapiaaeaaaablaakbadamaa
miahiaabaamagmaaobacaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_WorldSpaceCameraPos]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 466 [unity_Scale]
Vector 465 [unity_LightmapST]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 6 registers
[Configuration]
8
0000002443050600
[Microcode]
576
00021c6c00400e0c0106c0836041dffc00029c6c005d300c0186c0836041dffc
401f9c6c011cf800810040d560607f9c401f9c6c011d0808010400d740619f9c
401f9c6c011d1908010400d740619fb0401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01506e0c010600c360411ffc
00001c6c0150620c010600c360405ffc00009c6c01505e0c010600c360411ffc
00009c6c0150520c010600c360405ffc00011c6c01504e0c010600c360411ffc
00011c6c0150420c010600c360405ffc00019c6c0190a00c0a86c0c360405ffc
00019c6c0190900c0a86c0c360409ffc00019c6c0190800c0a86c0c360411ffc
00029c6c00800243011844436041dffc00021c6c010002308121846302a1dffc
00029c6c011d200c06bfc0e30041dffc00021c6c00800e0c08bfc0836041dffc
00001c6c0150608c0a8600c360403ffc00009c6c0150508c0a8600c360403ffc
00011c6c0150408c0a8600c360403ffc00019c6c0140020c0106054360405ffc
00019c6c01400e0c0a86008360411ffc00019c6c0140000c0a86044360409ffc
00001c6c0150600c088600c360409ffc00009c6c0150500c088600c360409ffc
00011c6c0150400c088600c360409ffc00019c6c0140000c0686034360403ffc
401f9c6c009d200d84bfc0c36041ffa4401f9c6c209d200d82bfc0dfe1b1e128
401f9c6c009d200d80bfc0c36041ffac401f9c6c00800000048603436041dfa1
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 176 // 176 used size, 15 vars
Vector 128 [unity_LightmapST] 4
Vector 144 [_MainTex_ST] 4
Vector 160 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 48 instructions, 4 temp regs, 0 temp arrays:
// ALU 24 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedooalgickboabnfncclonchgmbkdpiimnabaaaaaagaaiaaaaadaaaaaa
cmaaaaaapeaaaaaameabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheomiaaaaaaahaaaaaa
aiaaaaaalaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaalmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaalmaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaalmaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcjeagaaaaeaaaabaakfabaaaafjaaaaaeegiocaaaaaaaaaaa
alaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
hccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaa
gfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaaagaaaaaagiaaaaacaeaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
acaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaaaaaaaaaa
ajaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
akaaaaaakgiocaaaaaaaaaaaakaaaaaadiaaaaajhcaabaaaaaaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaaaaaaaaa
egiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaa
dcaaaaalhcaabaaaaaaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaaaaaaaaaaaaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaaacaaaaaa
jgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaajgbebaaa
acaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaadiaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaa
acaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
hccabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgafbaiaebaaaaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaal
lcaabaaaaaaaaaaaegiicaaaacaaaaaaamaaaaaaagaabaiaebaaaaaaaaaaaaaa
egaibaaaabaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaaacaaaaaaaoaaaaaa
kgakbaiaebaaaaaaaaaaaaaaegambaaaaaaaaaaadgaaaaaficaabaaaabaaaaaa
akaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaaakiacaaaacaaaaaaamaaaaaa
dgaaaaagccaabaaaadaaaaaaakiacaaaacaaaaaaanaaaaaadgaaaaagecaabaaa
adaaaaaaakiacaaaacaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaa
acaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaa
egacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaa
adaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaabaaaaaapgipcaaaacaaaaaa
beaaaaaadgaaaaaficaabaaaabaaaaaabkaabaaaaaaaaaaadgaaaaagbcaabaaa
adaaaaaabkiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaabkiacaaa
acaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaabkiacaaaacaaaaaaaoaaaaaa
baaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaa
abaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaaaeaaaaaa
egaobaaaabaaaaaapgipcaaaacaaaaaabeaaaaaadgaaaaagbcaabaaaabaaaaaa
ckiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaackiacaaaacaaaaaa
anaaaaaadgaaaaagecaabaaaabaaaaaackiacaaaacaaaaaaaoaaaaaabaaaaaah
ccaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaa
aaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipccabaaaafaaaaaaegaobaaa
aaaaaaaapgipcaaaacaaaaaabeaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaa
aeaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_glesVertex.xyz - ((_World2Object * tmpvar_10).xyz * unity_Scale.w)));
  highp vec3 tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_13 = tmpvar_1.xyz;
  tmpvar_14 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_15;
  tmpvar_15[0].x = tmpvar_13.x;
  tmpvar_15[0].y = tmpvar_14.x;
  tmpvar_15[0].z = tmpvar_2.x;
  tmpvar_15[1].x = tmpvar_13.y;
  tmpvar_15[1].y = tmpvar_14.y;
  tmpvar_15[1].z = tmpvar_2.y;
  tmpvar_15[2].x = tmpvar_13.z;
  tmpvar_15[2].y = tmpvar_14.z;
  tmpvar_15[2].z = tmpvar_2.z;
  vec4 v_16;
  v_16.x = _Object2World[0].x;
  v_16.y = _Object2World[1].x;
  v_16.z = _Object2World[2].x;
  v_16.w = _Object2World[3].x;
  highp vec4 tmpvar_17;
  tmpvar_17.xyz = (tmpvar_15 * v_16.xyz);
  tmpvar_17.w = tmpvar_12.x;
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * unity_Scale.w);
  tmpvar_5 = tmpvar_18;
  vec4 v_19;
  v_19.x = _Object2World[0].y;
  v_19.y = _Object2World[1].y;
  v_19.z = _Object2World[2].y;
  v_19.w = _Object2World[3].y;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_15 * v_19.xyz);
  tmpvar_20.w = tmpvar_12.y;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].z;
  v_22.y = _Object2World[1].z;
  v_22.z = _Object2World[2].z;
  v_22.w = _Object2World[3].z;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_15 * v_22.xyz);
  tmpvar_23.w = tmpvar_12.z;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_26;
  tmpvar_26 = normalize((tmpvar_15 * (((_World2Object * tmpvar_25).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_4 = tmpvar_26;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  c_1.xyz = (tmpvar_11 * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD5).xyz));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_glesVertex.xyz - ((_World2Object * tmpvar_10).xyz * unity_Scale.w)));
  highp vec3 tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_13 = tmpvar_1.xyz;
  tmpvar_14 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_15;
  tmpvar_15[0].x = tmpvar_13.x;
  tmpvar_15[0].y = tmpvar_14.x;
  tmpvar_15[0].z = tmpvar_2.x;
  tmpvar_15[1].x = tmpvar_13.y;
  tmpvar_15[1].y = tmpvar_14.y;
  tmpvar_15[1].z = tmpvar_2.y;
  tmpvar_15[2].x = tmpvar_13.z;
  tmpvar_15[2].y = tmpvar_14.z;
  tmpvar_15[2].z = tmpvar_2.z;
  vec4 v_16;
  v_16.x = _Object2World[0].x;
  v_16.y = _Object2World[1].x;
  v_16.z = _Object2World[2].x;
  v_16.w = _Object2World[3].x;
  highp vec4 tmpvar_17;
  tmpvar_17.xyz = (tmpvar_15 * v_16.xyz);
  tmpvar_17.w = tmpvar_12.x;
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * unity_Scale.w);
  tmpvar_5 = tmpvar_18;
  vec4 v_19;
  v_19.x = _Object2World[0].y;
  v_19.y = _Object2World[1].y;
  v_19.z = _Object2World[2].y;
  v_19.w = _Object2World[3].y;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_15 * v_19.xyz);
  tmpvar_20.w = tmpvar_12.y;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].z;
  v_22.y = _Object2World[1].z;
  v_22.z = _Object2World[2].z;
  v_22.w = _Object2World[3].z;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_15 * v_22.xyz);
  tmpvar_23.w = tmpvar_12.z;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_26;
  tmpvar_26 = normalize((tmpvar_15 * (((_World2Object * tmpvar_25).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_4 = tmpvar_26;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_Lightmap, xlv_TEXCOORD5);
  c_1.xyz = (tmpvar_11 * ((8.0 * tmpvar_33.w) * tmpvar_33.xyz));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 176 // 176 used size, 15 vars
Vector 128 [unity_LightmapST] 4
Vector 144 [_MainTex_ST] 4
Vector 160 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 48 instructions, 4 temp regs, 0 temp arrays:
// ALU 24 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_3
eefiecedgmcajdhhmkjibfplbhokhlmecjehfoopabaaaaaadmamaaaaaeaaaaaa
daaaaaaaaiaeaaaakeakaaaagmalaaaaebgpgodjnaadaaaanaadaaaaaaacpopp
gmadaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaaiaa
adaaabaaaaaaaaaaabaaaeaaabaaaeaaaaaaaaaaacaaaaaaaeaaafaaaaaaaaaa
acaaamaaadaaajaaaaaaaaaaacaabaaaafaaamaaaaaaaaaaaaaaaaaaabacpopp
bpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabiaabaaapjabpaaaaacafaaacia
acaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaae
aaaaadoaadaaoejaacaaoekaacaaookaaeaaaaaeaaaaamoaadaaeejaadaaeeka
adaaoekaabaaaaacaaaaahiaaeaaoekaafaaaaadabaaahiaaaaaffiaanaaoeka
aeaaaaaeaaaaaliaamaakekaaaaaaaiaabaakeiaaeaaaaaeaaaaahiaaoaaoeka
aaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiaapaaoekaaeaaaaaeaaaaahia
aaaaoeiabaaappkaaaaaoejbafaaaaadabaaahiaaaaaffibakaaoekaaeaaaaae
abaaahiaajaaoekaaaaaaaibabaaoeiaaeaaaaaeabaaaliaalaakekaaaaakkib
abaakeiaabaaaaacacaaaiiaabaaaaiaabaaaaacadaaahiaabaaoejaafaaaaad
aeaaahiaadaamjiaacaancjaaeaaaaaeadaaahiaacaamjjaadaanciaaeaaoeib
afaaaaadadaaahiaadaaoeiaabaappjaabaaaaacaeaaabiaajaaaakaabaaaaac
aeaaaciaakaaaakaabaaaaacaeaaaeiaalaaaakaaiaaaaadacaaaciaadaaoeia
aeaaoeiaaiaaaaadacaaabiaabaaoejaaeaaoeiaaiaaaaadacaaaeiaacaaoeja
aeaaoeiaafaaaaadacaaapoaacaaoeiabaaappkaabaaaaacacaaaiiaabaaffia
abaaaaacaeaaabiaajaaffkaabaaaaacaeaaaciaakaaffkaabaaaaacaeaaaeia
alaaffkaaiaaaaadacaaaciaadaaoeiaaeaaoeiaaiaaaaadacaaabiaabaaoeja
aeaaoeiaaiaaaaadacaaaeiaacaaoejaaeaaoeiaafaaaaadadaaapoaacaaoeia
baaappkaabaaaaacacaaabiaajaakkkaabaaaaacacaaaciaakaakkkaabaaaaac
acaaaeiaalaakkkaaiaaaaadabaaaciaadaaoeiaacaaoeiaaiaaaaadadaaacia
adaaoeiaaaaaoeiaaiaaaaadabaaabiaabaaoejaacaaoeiaaiaaaaadabaaaeia
acaaoejaacaaoeiaafaaaaadaeaaapoaabaaoeiabaaappkaaeaaaaaeafaaadoa
aeaaoejaabaaoekaabaaookaaiaaaaadadaaabiaabaaoejaaaaaoeiaaiaaaaad
adaaaeiaacaaoejaaaaaoeiaaiaaaaadaaaaabiaadaaoeiaadaaoeiaahaaaaac
aaaaabiaaaaaaaiaafaaaaadabaaahoaaaaaaaiaadaaoeiaafaaaaadaaaaapia
aaaaffjaagaaoekaaeaaaaaeaaaaapiaafaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaahaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaappja
aaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaamma
aaaaoeiappppaaaafdeieefcjeagaaaaeaaaabaakfabaaaafjaaaaaeegiocaaa
aaaaaaaaalaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaa
fpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaa
aeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaa
gfaaaaadhccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaa
aeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaaddccabaaaagaaaaaagiaaaaac
aeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaal
dccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaajaaaaaaogikcaaa
aaaaaaaaajaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaa
aaaaaaaaakaaaaaakgiocaaaaaaaaaaaakaaaaaadiaaaaajhcaabaaaaaaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaa
aaaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
aaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaaaaaaaaaaaaaaaaihcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaadiaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaj
hcaabaaaabaaaaaafgafbaiaebaaaaaaaaaaaaaaegiccaaaacaaaaaaanaaaaaa
dcaaaaallcaabaaaaaaaaaaaegiicaaaacaaaaaaamaaaaaaagaabaiaebaaaaaa
aaaaaaaaegaibaaaabaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaaacaaaaaa
aoaaaaaakgakbaiaebaaaaaaaaaaaaaaegambaaaaaaaaaaadgaaaaaficaabaaa
abaaaaaaakaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaaakiacaaaacaaaaaa
amaaaaaadgaaaaagccaabaaaadaaaaaaakiacaaaacaaaaaaanaaaaaadgaaaaag
ecaabaaaadaaaaaaakiacaaaacaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaa
egacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaa
abaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaa
egacbaaaadaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaabaaaaaapgipcaaa
acaaaaaabeaaaaaadgaaaaaficaabaaaabaaaaaabkaabaaaaaaaaaaadgaaaaag
bcaabaaaadaaaaaabkiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaa
bkiacaaaacaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaabkiacaaaacaaaaaa
aoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaah
ecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaa
aeaaaaaaegaobaaaabaaaaaapgipcaaaacaaaaaabeaaaaaadgaaaaagbcaabaaa
abaaaaaackiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaackiacaaa
acaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaackiacaaaacaaaaaaaoaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipccabaaaafaaaaaa
egaobaaaaaaaaaaapgipcaaaacaaaaaabeaaaaaadcaaaaaldccabaaaagaaaaaa
egbabaaaaeaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaiaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapaaaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
adamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD7;
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 unity_SHC;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _ProjectionParams;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_4;
  tmpvar_4[0] = _Object2World[0].xyz;
  tmpvar_4[1] = _Object2World[1].xyz;
  tmpvar_4[2] = _Object2World[2].xyz;
  vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * (gl_Vertex.xyz - ((_World2Object * tmpvar_3).xyz * unity_Scale.w)));
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_6 = TANGENT.xyz;
  tmpvar_7 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = gl_Normal.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = gl_Normal.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = gl_Normal.z;
  vec4 v_9;
  v_9.x = _Object2World[0].x;
  v_9.y = _Object2World[1].x;
  v_9.z = _Object2World[2].x;
  v_9.w = _Object2World[3].x;
  vec4 tmpvar_10;
  tmpvar_10.xyz = (tmpvar_8 * v_9.xyz);
  tmpvar_10.w = tmpvar_5.x;
  vec4 v_11;
  v_11.x = _Object2World[0].y;
  v_11.y = _Object2World[1].y;
  v_11.z = _Object2World[2].y;
  v_11.w = _Object2World[3].y;
  vec4 tmpvar_12;
  tmpvar_12.xyz = (tmpvar_8 * v_11.xyz);
  tmpvar_12.w = tmpvar_5.y;
  vec4 v_13;
  v_13.x = _Object2World[0].z;
  v_13.y = _Object2World[1].z;
  v_13.z = _Object2World[2].z;
  v_13.w = _Object2World[3].z;
  vec4 tmpvar_14;
  tmpvar_14.xyz = (tmpvar_8 * v_13.xyz);
  tmpvar_14.w = tmpvar_5.z;
  mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * (gl_Normal * unity_Scale.w));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_16;
  vec3 x2_19;
  vec3 x1_20;
  x1_20.x = dot (unity_SHAr, tmpvar_18);
  x1_20.y = dot (unity_SHAg, tmpvar_18);
  x1_20.z = dot (unity_SHAb, tmpvar_18);
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x2_19.x = dot (unity_SHBr, tmpvar_21);
  x2_19.y = dot (unity_SHBg, tmpvar_21);
  x2_19.z = dot (unity_SHBb, tmpvar_21);
  vec4 o_22;
  vec4 tmpvar_23;
  tmpvar_23 = (tmpvar_2 * 0.5);
  vec2 tmpvar_24;
  tmpvar_24.x = tmpvar_23.x;
  tmpvar_24.y = (tmpvar_23.y * _ProjectionParams.x);
  o_22.xy = (tmpvar_24 + tmpvar_23.w);
  o_22.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_8 * (((_World2Object * tmpvar_17).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_10 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_12 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_14 * unity_Scale.w);
  xlv_TEXCOORD5 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD6 = ((x1_20 + x2_19) + (unity_SHC.xyz * ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y))));
  xlv_TEXCOORD7 = o_22;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD7;
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec3 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_6;
  tmpvar_6.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_6.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_6.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_7;
  tmpvar_7.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_6, tmpvar_2) * tmpvar_6)));
  tmpvar_7.w = (tmpvar_5.w * (roughnessV * 7.0));
  vec4 c_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(normal_3);
  vec3 tmpvar_10;
  tmpvar_10 = normalize(xlv_TEXCOORD5);
  vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  float tmpvar_12;
  tmpvar_12 = clamp (dot (tmpvar_9, tmpvar_10), 0.0, 1.0);
  float tmpvar_13;
  tmpvar_13 = clamp (dot (tmpvar_9, tmpvar_11), 0.0, 1.0);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, normalize((tmpvar_10 + tmpvar_11))), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = (roughnessV * roughnessV);
  float tmpvar_16;
  tmpvar_16 = (2.0 * tmpvar_12);
  float tmpvar_17;
  tmpvar_17 = (orenNayar * orenNayar);
  float x_18;
  x_18 = dot (tmpvar_11, tmpvar_9);
  float x_19;
  x_19 = dot (tmpvar_10, tmpvar_9);
  float x_20;
  x_20 = dot (tmpvar_11, tmpvar_9);
  float x_21;
  x_21 = dot (tmpvar_10, tmpvar_9);
  float tmpvar_22;
  tmpvar_22 = min ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))));
  c_8.xyz = (((((tmpvar_4 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_12))) * vec3(((1.0 - (0.5 * (tmpvar_17 / (tmpvar_17 + 0.57)))) + (((0.45 * (tmpvar_17 / (tmpvar_17 + 0.09))) * max (0.0, dot ((tmpvar_11 - (tmpvar_9 * dot (tmpvar_11, tmpvar_9))), (tmpvar_10 - (tmpvar_9 * dot (tmpvar_10, tmpvar_9)))))) * (sin(max ((1.5708 - (sign(x_18) * (1.5708 - (sqrt((1.0 - abs(x_18))) * (1.5708 + (abs(x_18) * (-0.214602 + (abs(x_18) * (0.0865667 + (abs(x_18) * -0.0310296)))))))))), (1.5708 - (sign(x_19) * (1.5708 - (sqrt((1.0 - abs(x_19))) * (1.5708 + (abs(x_19) * (-0.214602 + (abs(x_19) * (0.0865667 + (abs(x_19) * -0.0310296)))))))))))) * (sin(tmpvar_22) / cos(tmpvar_22))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_11, tmpvar_9), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_16 * tmpvar_13) / tmpvar_14), ((tmpvar_16 * tmpvar_12) / tmpvar_14)))) * (((1.0/(((4.0 * tmpvar_15) * pow (tmpvar_12, 4.0)))) * exp((((tmpvar_12 * tmpvar_12) - 1.0) / ((tmpvar_15 * tmpvar_12) * tmpvar_12)))) * tmpvar_5.w))) / (max (0.0, (tmpvar_13 * tmpvar_12)) + 0.09))) * tmpvar_5.x) * _LightColor0.xyz)) * (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x * 2.0));
  c_8.w = 1.0;
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (tmpvar_4 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_7.xyz, tmpvar_7.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_5) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_SHAr]
Vector 17 [unity_SHAg]
Vector 18 [unity_SHAb]
Vector 19 [unity_SHBr]
Vector 20 [unity_SHBg]
Vector 21 [unity_SHBb]
Vector 22 [unity_SHC]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 23 [unity_Scale]
Vector 24 [_MainTex_ST]
Vector 25 [_BumpMap_ST]
"vs_3_0
; 70 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
dcl_texcoord7 o8
def c26, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c26.x
dp4 r1.z, r0, c10
dp4 r1.x, r0, c8
dp4 r1.y, r0, c9
mad r2.xyz, r1, c23.w, -v0
mul r1.xyz, v2, c23.w
dp3 r0.y, r2, r3
dp3 r0.x, r2, v1
dp3 r0.z, v2, r2
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o2.xyz, r0.w, r0
dp3 r2.w, r1, c5
mov r0.y, r2.w
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.w, c26.x
mul r1, r0.xyzz, r0.yzzx
dp4 r4.z, r0, c18
dp4 r4.y, r0, c17
dp4 r4.x, r0, c16
mul r2.w, r2, r2
dp4 r0.w, r1, c21
dp4 r0.z, r1, c20
dp4 r0.y, r1, c19
add r1.xyz, r4, r0.yzww
mad r0.x, r0, r0, -r2.w
mul r4.xyz, r0.x, c22
add o7.xyz, r1, r4
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c9
dp4 r4.y, c15, r0
mov r1, c8
dp4 r4.x, c15, r1
dp3 r0.y, r3, c4
dp3 r0.w, -r2, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c23.w
dp3 r0.y, r3, c5
dp3 r0.w, -r2, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c23.w
dp3 r0.y, r3, c6
dp3 r0.w, -r2, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul o5, r0, c23.w
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c26.y
mul r1.y, r1, c13.x
dp3 o6.y, r3, r4
dp3 o6.z, v2, r4
dp3 o6.x, v1, r4
mad o8.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o8.zw, r0
mad o1.zw, v3.xyxy, c25.xyxy, c25
mad o1.xy, v3, c24, c24.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 24 [_BumpMap_ST]
Vector 23 [_MainTex_ST]
Matrix 15 [_Object2World] 3
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Matrix 18 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 3 [_WorldSpaceLightPos0]
Matrix 11 [glstate_matrix_mvp] 4
Vector 6 [unity_SHAb]
Vector 5 [unity_SHAg]
Vector 4 [unity_SHAr]
Vector 9 [unity_SHBb]
Vector 8 [unity_SHBg]
Vector 7 [unity_SHBr]
Vector 10 [unity_SHC]
Vector 22 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 85.33 (64 instructions), vertex: 32, texture: 0,
//   sequencer: 28,  15 GPRs, 12 threads,
// Performance (if enough threads): ~85 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadhiaaaaadnaaaaaaaaaaaaaaaceaaaaacmiaaaaacpaaaaaaaaa
aaaaaaaaaaaaackaaaaaaabmaaaaacjdpppoadaaaaaaaabbaaaaaabmaaaaaaaa
aaaaacimaaaaabhaaaacaabiaaabaaaaaaaaabhmaaaaaaaaaaaaabimaaacaabh
aaabaaaaaaaaabhmaaaaaaaaaaaaabjiaaacaaapaaadaaaaaaaaabkiaaaaaaaa
aaaaabliaaacaaabaaabaaaaaaaaabhmaaaaaaaaaaaaabmkaaacaaacaaabaaaa
aaaaabhmaaaaaaaaaaaaabniaaacaabcaaaeaaaaaaaaabkiaaaaaaaaaaaaabog
aaacaaaaaaabaaaaaaaaabpmaaaaaaaaaaaaacamaaacaaadaaabaaaaaaaaabhm
aaaaaaaaaaaaaccbaaacaaalaaaeaaaaaaaaabkiaaaaaaaaaaaaacdeaaacaaag
aaabaaaaaaaaabhmaaaaaaaaaaaaacdpaaacaaafaaabaaaaaaaaabhmaaaaaaaa
aaaaacekaaacaaaeaaabaaaaaaaaabhmaaaaaaaaaaaaacffaaacaaajaaabaaaa
aaaaabhmaaaaaaaaaaaaacgaaaacaaaiaaabaaaaaaaaabhmaaaaaaaaaaaaacgl
aaacaaahaaabaaaaaaaaabhmaaaaaaaaaaaaachgaaacaaakaaabaaaaaaaaabhm
aaaaaaaaaaaaaciaaaacaabgaaabaaaaaaaaabhmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpepgcgkgfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaa
fpfahcgpgkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaa
fpfhgphcgmgedcepgcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfa
gphdaaklaaabaaadaaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfem
gjghgihefagphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhe
hjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfpfdeiebhcaahfgogj
hehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahfgogjhehjfpfdeiechcaahfgo
gjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodc
dadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabeaapmaaba
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaadjaaahbaaaoaaaaaaaa
aaaaaaaaaaaahfaiaaaaaaabaaaaaaaeaaaaaaamaaaaacjaaabaaaahaaaagaai
aaaadaajaacafaakaaaapafaaaachbfbaaadpcfcaaaepdfdaaafpefeaaaghfff
aaajhgfgaaakphfhaaaaaadgaaaabadhaaaabaekaaaabaecaaaabaedaaaabaee
aaaaaaddaaaaaadeaaaabadfaaaabaegaaaaaadcaaaabaebaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaaaaaaaapaffeaahaaaabcaa
mcaaaaaaaaaafaalaaaabcaameaaaaaaaaaagabagabgbcaabcaaaaaaaaaagabm
gaccbcaabcaaaaaaaaaagacigacobcaabcaaaaaaaaaagadegadkbcaabcaaaaaa
aaaagaeafaegbcaaccaaaaaaafpidaaaaaaaagiiaaaaaaaaafpinaaaaaaaagii
aaaaaaaaafpibaaaaaaaadnaaaaaaaaaafpilaaaaaaaapmiaaaaaaaamiapaaaa
aabliiaakbadaoaamiapaaaaaamgnapikladanaamiapaaaaaalbdepikladamaa
miapaaaoaagmnajekladalaamiapiadoaananaaaocaoaoaamiahaaaeaamamgma
albeaabfceicakahaablgmgmkbanbaiabechaaaiaaleblblcbbfadankibeahah
aablgmebibanbbapkmbhacagaamgmnmdibanbbbakmchacaaaalbgcedibanbaba
kmehacafaabngfidmbabanbamiahaaaiaamamgleclbeadaimiahaaaeaalelble
clbdaaaemiahaaaeaamagmleclbcaaaemiahaaakaalelbleclbdadaimiahaaai
abgdlomaolabanafmialaaafaagmgcleklabapacmialaaajaagmgcmaklanapaa
bealaaacaalbgcgmkbabbbajaebeafafaagmgmmgoaafacagbeahaaaaaagdbllb
kbabbgajaebeagagaalblbgmoaafacagbeahaaajaalbleblkbaabbajaebcahah
aalololbpaahaiagmiahaaamaamagmleclbcadakmiahaaacaagmlemaklaabaaj
bealaaaaaamnblblobaianafmiahaaajabmablmaklaebgadaeeeahadaalobnbl
paajabackiihadaiaemggcmdibajbbbbmiahaaakaamglemaklaaapackiehaaae
aelbgcidibajbabbkibbacadaalolomanaajanbakiccacadaagdloianaaaajba
miahaaaeaegmloleklajapaeaiipaeajaalehclbobakakadmiakaaagaalblglm
klaaapacaichafacaamagmgmkbaoppakmiamiaahaanlnlaaocaoaoaamiabiaaf
aaloloaapaamanaamiaciaafaagdloaapaaaamaamiaeiaafaalobnaapaamabaa
miadiaaaaalalabkilalbhbhmiamiaaaaakmkmagilalbibiaiibafabaadoanmg
gpaeakakkiicacabaadoanebgpafakabgeieaaabaadoanllgpagakafbeabaaaa
aakhkhlbkpajahagaeciafafaagmgmbloaaeaiadbeacaaaaaakhkhblkpajaiag
aeciagagaamglbmgoaaeaiaabeaeaaaaaakhkhlbkpajajaeaeihahaeaablmamg
kbaaakaimiadiaahaamgbkbiklacacacmiapiaacaaaablaakbahbgaamiapiaad
aaaablaakbagbgaamiapiaaeaaaablaakbafbgaaaiihaaaaaalelegmoaabaaad
miahiaagaalemaaaoaaaaeaamiabaaaaaablblaaoaaaaeaamiabaaaaaamgmggm
oladadaafibaaaaaaaaaaagmocaaaaiamiahiaabaamagmaaobadaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_ProjectionParams]
Vector 465 [_WorldSpaceLightPos0]
Vector 464 [unity_SHAr]
Vector 463 [unity_SHAg]
Vector 462 [unity_SHAb]
Vector 461 [unity_SHBr]
Vector 460 [unity_SHBg]
Vector 459 [unity_SHBb]
Vector 458 [unity_SHC]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 457 [unity_Scale]
Vector 456 [_MainTex_ST]
Vector 455 [_BumpMap_ST]
"sce_vp_rsx // 64 instructions using 9 registers
[Configuration]
8
0000004041050900
[Defaults]
1
454 1
3f000000
[Microcode]
1024
00019c6c005d100d8186c0836041fffc00031c6c00400e0c0106c0836041dffc
00029c6c005d300c0186c0836041dffc00041c6c009c920c013fc0c36041dffc
401f9c6c011c7800810040d560607f9c401f9c6c011c8808010400d740619f9c
00001c6c01506e0c010600c360411ffc00001c6c0150620c010600c360405ffc
00009c6c01505e0c010600c360411ffc00009c6c0150520c010600c360405ffc
00011c6c01504e0c010600c360411ffc00011c6c0150420c010600c360405ffc
00021c6c01d0300d8106c0c360403ffc00021c6c01d0200d8106c0c360405ffc
00021c6c01d0100d8106c0c360409ffc00021c6c01d0000d8106c0c360411ffc
00039c6c01d0a00d8686c0c360405ffc00039c6c01d0900d8686c0c360409ffc
00039c6c01d0800d8686c0c360411ffc00019c6c0150400c108600c360411ffc
00019c6c0150600c108600c360405ffc00001c6c0150500c108600c360409ffc
00041c6c0190a00c0a86c0c360405ffc00041c6c0190900c0a86c0c360409ffc
00041c6c0190800c0a86c0c360411ffc00029c6c00800243011846436041dffc
00029c6c010002308121866302a1dffc401f9c6c0040000d8886c0836041ff80
401f9c6c004000558886c08360407fb800041c6c011c900c10bfc0e30041dffc
00021c6c009c600e088000c36041dffc401f9c6c0140020c0106074360405fb0
401f9c6c01400e0c0106074360411fb000021c6c009d202a888000c360409ffc
00009c6c0080002a8095404360409ffc00019c6c0040002a8086c08360409ffc
401f9c6c00c000080886c09542219fb800031c6c00800e0c0abfc0836041dffc
00001c6c0150608c108600c360403ffc00009c6c0150508c108600c360403ffc
00011c6c0150408c108600c360403ffc00029c6c0140020c0106084360405ffc
00029c6c01400e0c1086008360411ffc00021c6c019ce00c0686c0c360405ffc
00021c6c019cf00c0686c0c360409ffc00021c6c019d000c0686c0c360411ffc
00021c6c010000000680036aa0a03ffc00019c6c0080000d069a03436041fffc
401f9c6c0140000c0c86074360409fb000029c6c0140000c1086064360409ffc
00001c6c0150600c0c8600c360409ffc00009c6c0150500c0c8600c360409ffc
00011c6c0150400c0c8600c360409ffc00031c6c01dcb00d8686c0c360405ffc
00031c6c01dcc00d8686c0c360409ffc00031c6c01dcd00d8686c0c360411ffc
00019c6c00c0000c0886c0830321dffc00021c6c009ca07f888600c36041dffc
401f9c6c00c0000c0886c08301a1dfb400019c6c0140000c0a86054360411ffc
401f9c6c009c900d84bfc0c36041ffa4401f9c6c209c900d82bfc0c001b1e128
401f9c6c009c900d80bfc0c36041ffac401f9c6c00800000048605436041dfa1
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 75 instructions, 5 temp regs, 0 temp arrays:
// ALU 42 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedacbidpbniffjklffbmjkilenfmdodepkabaaaaaabaamaaaaadaaaaaa
cmaaaaaapeaaaaaapeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheopiaaaaaaajaaaaaa
aiaaaaaaoaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaomaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaomaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaomaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaomaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaomaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaomaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaahaiaaaaomaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaa
ahaiaaaaomaaaaaaahaaaaaaaaaaaaaaadaaaaaaaiaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcbeakaaaaeaaaabaa
ifacaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaa
gfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagfaaaaadpccabaaa
aiaaaaaagiaaaaacafaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahbcaabaaa
acaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaacaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaahhcaabaaaadaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaadaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaadaaaaaa
egacbaaaadaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaa
adaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadiaaaaajhcaabaaa
acaaaaaafgafbaiaebaaaaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaal
lcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaiaebaaaaaaabaaaaaa
egaibaaaacaaaaaadcaaaaallcaabaaaabaaaaaaegiicaaaadaaaaaaaoaaaaaa
kgakbaiaebaaaaaaabaaaaaaegambaaaabaaaaaadgaaaaaficaabaaaacaaaaaa
akaabaaaabaaaaaadgaaaaagbcaabaaaaeaaaaaaakiacaaaadaaaaaaamaaaaaa
dgaaaaagccaabaaaaeaaaaaaakiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaa
aeaaaaaaakiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaa
adaaaaaaegacbaaaaeaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaaeaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
aeaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadgaaaaaficaabaaaacaaaaaabkaabaaaabaaaaaadgaaaaagbcaabaaa
aeaaaaaabkiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaaeaaaaaabkiacaaa
adaaaaaaanaaaaaadgaaaaagecaabaaaaeaaaaaabkiacaaaadaaaaaaaoaaaaaa
baaaaaahccaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaabaaaaaah
bcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaahecaabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaaipccabaaaaeaaaaaa
egaobaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaagbcaabaaaacaaaaaa
ckiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaacaaaaaackiacaaaadaaaaaa
anaaaaaadgaaaaagecaabaaaacaaaaaackiacaaaadaaaaaaaoaaaaaabaaaaaah
ccaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaipccabaaaafaaaaaaegaobaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaa
agaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaagaaaaaa
egbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaagaaaaaaegbcbaaa
acaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaadgaaaaaf
icaabaaaabaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaa
acaaaaaabcaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaa
acaaaaaabdaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaa
acaaaaaabeaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaa
abaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaa
bfaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaa
bgaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaa
bhaaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
egacbaaaaeaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaabkaabaaa
abaaaaaadcaaaaakbcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaiaebaaaaaaabaaaaaadcaaaaakhccabaaaahaaaaaaegiccaaaacaaaaaa
biaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaaiaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaaiaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize((tmpvar_18 * (((_World2Object * tmpvar_30).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_33;
  mediump vec4 normal_34;
  normal_34 = tmpvar_32;
  highp float vC_35;
  mediump vec3 x3_36;
  mediump vec3 x2_37;
  mediump vec3 x1_38;
  highp float tmpvar_39;
  tmpvar_39 = dot (unity_SHAr, normal_34);
  x1_38.x = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAg, normal_34);
  x1_38.y = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAb, normal_34);
  x1_38.z = tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42 = (normal_34.xyzz * normal_34.yzzx);
  highp float tmpvar_43;
  tmpvar_43 = dot (unity_SHBr, tmpvar_42);
  x2_37.x = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBg, tmpvar_42);
  x2_37.y = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBb, tmpvar_42);
  x2_37.z = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y));
  vC_35 = tmpvar_46;
  highp vec3 tmpvar_47;
  tmpvar_47 = (unity_SHC.xyz * vC_35);
  x3_36 = tmpvar_47;
  tmpvar_33 = ((x1_38 + x2_37) + x3_36);
  shlight_3 = tmpvar_33;
  tmpvar_10 = shlight_3;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float tmpvar_33;
  mediump float lightShadowDataX_34;
  highp float dist_35;
  lowp float tmpvar_36;
  tmpvar_36 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_35 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = _LightShadowData.x;
  lightShadowDataX_34 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (float((dist_35 > (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w))), lightShadowDataX_34);
  tmpvar_33 = tmpvar_38;
  mediump vec3 lightDir_39;
  lightDir_39 = xlv_TEXCOORD5;
  mediump vec3 viewDir_40;
  viewDir_40 = xlv_TEXCOORD1;
  mediump float atten_41;
  atten_41 = tmpvar_33;
  mediump vec4 c_42;
  mediump float B_43;
  mediump float A_44;
  highp float rough_sq_45;
  mediump vec3 Rs_numerator_46;
  highp float roughness_c_47;
  highp float roughness_b_48;
  highp float roughness_a_49;
  mediump float roughness_50;
  highp float geo_denominator_51;
  highp float geo_numerator_52;
  mediump vec3 n_53;
  lowp vec3 tmpvar_54;
  tmpvar_54 = normalize(tmpvar_18);
  n_53 = tmpvar_54;
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(lightDir_39);
  mediump vec3 tmpvar_56;
  tmpvar_56 = normalize(viewDir_40);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_53, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (n_53, tmpvar_56), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = clamp (dot (tmpvar_56, normalize((tmpvar_55 + tmpvar_56))), 0.0, 1.0);
  mediump float tmpvar_60;
  tmpvar_60 = (roughnessV * roughnessV);
  mediump float tmpvar_61;
  tmpvar_61 = (2.0 * tmpvar_57);
  geo_numerator_52 = tmpvar_61;
  geo_denominator_51 = tmpvar_59;
  mediump float tmpvar_62;
  tmpvar_62 = (1.0/(((4.0 * tmpvar_60) * pow (tmpvar_57, 4.0))));
  roughness_a_49 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_57 * tmpvar_57) - 1.0);
  roughness_b_48 = tmpvar_63;
  mediump float tmpvar_64;
  tmpvar_64 = ((tmpvar_60 * tmpvar_57) * tmpvar_57);
  roughness_c_47 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = ((roughness_a_49 * exp((roughness_b_48 / roughness_c_47))) * tmpvar_13);
  roughness_50 = tmpvar_65;
  mediump float tmpvar_66;
  tmpvar_66 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_56, n_53), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_67;
  tmpvar_67 = vec3(((tmpvar_66 * min (1.0, min (((geo_numerator_52 * tmpvar_58) / geo_denominator_51), ((geo_numerator_52 * tmpvar_57) / geo_denominator_51)))) * roughness_50));
  Rs_numerator_46 = tmpvar_67;
  mediump float tmpvar_68;
  tmpvar_68 = (orenNayar * orenNayar);
  rough_sq_45 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (1.0 - (0.5 * (rough_sq_45 / (rough_sq_45 + 0.57))));
  A_44 = tmpvar_69;
  highp float tmpvar_70;
  tmpvar_70 = (0.45 * (rough_sq_45 / (rough_sq_45 + 0.09)));
  B_43 = tmpvar_70;
  mediump float x_71;
  x_71 = dot (tmpvar_56, n_53);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_53);
  mediump float x_73;
  x_73 = dot (tmpvar_56, n_53);
  mediump float x_74;
  x_74 = dot (tmpvar_55, n_53);
  mediump float tmpvar_75;
  tmpvar_75 = min ((1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))), (1.5708 - (sign(x_74) * (1.5708 - (sqrt((1.0 - abs(x_74))) * (1.5708 + (abs(x_74) * (-0.214602 + (abs(x_74) * (0.0865667 + (abs(x_74) * -0.0310296)))))))))));
  c_42.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_57))) * vec3((A_44 + ((B_43 * max (0.0, dot ((tmpvar_56 - (n_53 * dot (tmpvar_56, n_53))), (tmpvar_55 - (n_53 * dot (tmpvar_55, n_53)))))) * (sin(max ((1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))), (1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))))) * (sin(tmpvar_75) / cos(tmpvar_75))))))) + (((cSpecular.xyz * (Rs_numerator_46 / (max (0.0, (tmpvar_58 * tmpvar_57)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_41 * 2.0));
  c_42.w = 1.0;
  c_1 = c_42;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _ProjectionParams;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (gl_ModelViewProjectionMatrix * _glesVertex);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * (_glesVertex.xyz - ((_World2Object * tmpvar_14).xyz * unity_Scale.w)));
  highp vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_1.xyz;
  tmpvar_18 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_19;
  tmpvar_19[0].x = tmpvar_17.x;
  tmpvar_19[0].y = tmpvar_18.x;
  tmpvar_19[0].z = tmpvar_2.x;
  tmpvar_19[1].x = tmpvar_17.y;
  tmpvar_19[1].y = tmpvar_18.y;
  tmpvar_19[1].z = tmpvar_2.y;
  tmpvar_19[2].x = tmpvar_17.z;
  tmpvar_19[2].y = tmpvar_18.z;
  tmpvar_19[2].z = tmpvar_2.z;
  vec4 v_20;
  v_20.x = _Object2World[0].x;
  v_20.y = _Object2World[1].x;
  v_20.z = _Object2World[2].x;
  v_20.w = _Object2World[3].x;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = (tmpvar_19 * v_20.xyz);
  tmpvar_21.w = tmpvar_16.x;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * unity_Scale.w);
  tmpvar_6 = tmpvar_22;
  vec4 v_23;
  v_23.x = _Object2World[0].y;
  v_23.y = _Object2World[1].y;
  v_23.z = _Object2World[2].y;
  v_23.w = _Object2World[3].y;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = (tmpvar_19 * v_23.xyz);
  tmpvar_24.w = tmpvar_16.y;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * unity_Scale.w);
  tmpvar_7 = tmpvar_25;
  vec4 v_26;
  v_26.x = _Object2World[0].z;
  v_26.y = _Object2World[1].z;
  v_26.z = _Object2World[2].z;
  v_26.w = _Object2World[3].z;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = (tmpvar_19 * v_26.xyz);
  tmpvar_27.w = tmpvar_16.z;
  highp vec4 tmpvar_28;
  tmpvar_28 = (tmpvar_27 * unity_Scale.w);
  tmpvar_8 = tmpvar_28;
  mat3 tmpvar_29;
  tmpvar_29[0] = _Object2World[0].xyz;
  tmpvar_29[1] = _Object2World[1].xyz;
  tmpvar_29[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize((tmpvar_19 * (((_World2Object * tmpvar_31).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = (tmpvar_29 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_34;
  mediump vec4 normal_35;
  normal_35 = tmpvar_33;
  highp float vC_36;
  mediump vec3 x3_37;
  mediump vec3 x2_38;
  mediump vec3 x1_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAr, normal_35);
  x1_39.x = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAg, normal_35);
  x1_39.y = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAb, normal_35);
  x1_39.z = tmpvar_42;
  mediump vec4 tmpvar_43;
  tmpvar_43 = (normal_35.xyzz * normal_35.yzzx);
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBr, tmpvar_43);
  x2_38.x = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBg, tmpvar_43);
  x2_38.y = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBb, tmpvar_43);
  x2_38.z = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y));
  vC_36 = tmpvar_47;
  highp vec3 tmpvar_48;
  tmpvar_48 = (unity_SHC.xyz * vC_36);
  x3_37 = tmpvar_48;
  tmpvar_34 = ((x1_39 + x2_38) + x3_37);
  shlight_3 = tmpvar_34;
  tmpvar_10 = shlight_3;
  highp vec4 o_49;
  highp vec4 tmpvar_50;
  tmpvar_50 = (tmpvar_11 * 0.5);
  highp vec2 tmpvar_51;
  tmpvar_51.x = tmpvar_50.x;
  tmpvar_51.y = (tmpvar_50.y * _ProjectionParams.x);
  o_49.xy = (tmpvar_51 + tmpvar_50.w);
  o_49.zw = tmpvar_11.zw;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = o_49;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float tmpvar_33;
  tmpvar_33 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  mediump vec3 lightDir_34;
  lightDir_34 = xlv_TEXCOORD5;
  mediump vec3 viewDir_35;
  viewDir_35 = xlv_TEXCOORD1;
  mediump float atten_36;
  atten_36 = tmpvar_33;
  mediump vec4 c_37;
  mediump float B_38;
  mediump float A_39;
  highp float rough_sq_40;
  mediump vec3 Rs_numerator_41;
  highp float roughness_c_42;
  highp float roughness_b_43;
  highp float roughness_a_44;
  mediump float roughness_45;
  highp float geo_denominator_46;
  highp float geo_numerator_47;
  mediump vec3 n_48;
  lowp vec3 tmpvar_49;
  tmpvar_49 = normalize(normal_18);
  n_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = normalize(lightDir_34);
  mediump vec3 tmpvar_51;
  tmpvar_51 = normalize(viewDir_35);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (n_48, tmpvar_50), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = clamp (dot (n_48, tmpvar_51), 0.0, 1.0);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (tmpvar_51, normalize((tmpvar_50 + tmpvar_51))), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = (roughnessV * roughnessV);
  mediump float tmpvar_56;
  tmpvar_56 = (2.0 * tmpvar_52);
  geo_numerator_47 = tmpvar_56;
  geo_denominator_46 = tmpvar_54;
  mediump float tmpvar_57;
  tmpvar_57 = (1.0/(((4.0 * tmpvar_55) * pow (tmpvar_52, 4.0))));
  roughness_a_44 = tmpvar_57;
  mediump float tmpvar_58;
  tmpvar_58 = ((tmpvar_52 * tmpvar_52) - 1.0);
  roughness_b_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = ((tmpvar_55 * tmpvar_52) * tmpvar_52);
  roughness_c_42 = tmpvar_59;
  highp float tmpvar_60;
  tmpvar_60 = ((roughness_a_44 * exp((roughness_b_43 / roughness_c_42))) * tmpvar_13);
  roughness_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_51, n_48), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_62;
  tmpvar_62 = vec3(((tmpvar_61 * min (1.0, min (((geo_numerator_47 * tmpvar_53) / geo_denominator_46), ((geo_numerator_47 * tmpvar_52) / geo_denominator_46)))) * roughness_45));
  Rs_numerator_41 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = (orenNayar * orenNayar);
  rough_sq_40 = tmpvar_63;
  highp float tmpvar_64;
  tmpvar_64 = (1.0 - (0.5 * (rough_sq_40 / (rough_sq_40 + 0.57))));
  A_39 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = (0.45 * (rough_sq_40 / (rough_sq_40 + 0.09)));
  B_38 = tmpvar_65;
  mediump float x_66;
  x_66 = dot (tmpvar_51, n_48);
  mediump float x_67;
  x_67 = dot (tmpvar_50, n_48);
  mediump float x_68;
  x_68 = dot (tmpvar_51, n_48);
  mediump float x_69;
  x_69 = dot (tmpvar_50, n_48);
  mediump float tmpvar_70;
  tmpvar_70 = min ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))));
  c_37.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_52))) * vec3((A_39 + ((B_38 * max (0.0, dot ((tmpvar_51 - (n_48 * dot (tmpvar_51, n_48))), (tmpvar_50 - (n_48 * dot (tmpvar_50, n_48)))))) * (sin(max ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))))) * (sin(tmpvar_70) / cos(tmpvar_70))))))) + (((cSpecular.xyz * (Rs_numerator_41 / (max (0.0, (tmpvar_53 * tmpvar_52)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_36 * 2.0));
  c_37.w = 1.0;
  c_1 = c_37;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD6;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_LightmapST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _ProjectionParams;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_4;
  tmpvar_4[0] = _Object2World[0].xyz;
  tmpvar_4[1] = _Object2World[1].xyz;
  tmpvar_4[2] = _Object2World[2].xyz;
  vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * (gl_Vertex.xyz - ((_World2Object * tmpvar_3).xyz * unity_Scale.w)));
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_6 = TANGENT.xyz;
  tmpvar_7 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = gl_Normal.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = gl_Normal.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = gl_Normal.z;
  vec4 v_9;
  v_9.x = _Object2World[0].x;
  v_9.y = _Object2World[1].x;
  v_9.z = _Object2World[2].x;
  v_9.w = _Object2World[3].x;
  vec4 tmpvar_10;
  tmpvar_10.xyz = (tmpvar_8 * v_9.xyz);
  tmpvar_10.w = tmpvar_5.x;
  vec4 v_11;
  v_11.x = _Object2World[0].y;
  v_11.y = _Object2World[1].y;
  v_11.z = _Object2World[2].y;
  v_11.w = _Object2World[3].y;
  vec4 tmpvar_12;
  tmpvar_12.xyz = (tmpvar_8 * v_11.xyz);
  tmpvar_12.w = tmpvar_5.y;
  vec4 v_13;
  v_13.x = _Object2World[0].z;
  v_13.y = _Object2World[1].z;
  v_13.z = _Object2World[2].z;
  v_13.w = _Object2World[3].z;
  vec4 tmpvar_14;
  tmpvar_14.xyz = (tmpvar_8 * v_13.xyz);
  tmpvar_14.w = tmpvar_5.z;
  vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  vec4 o_16;
  vec4 tmpvar_17;
  tmpvar_17 = (tmpvar_2 * 0.5);
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_17.x;
  tmpvar_18.y = (tmpvar_17.y * _ProjectionParams.x);
  o_16.xy = (tmpvar_18 + tmpvar_17.w);
  o_16.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_8 * (((_World2Object * tmpvar_15).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_10 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_12 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_14 * unity_Scale.w);
  xlv_TEXCOORD5 = ((gl_MultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = o_16;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD6;
varying vec2 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_5.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_5.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_6;
  tmpvar_6.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_5, tmpvar_2) * tmpvar_5)));
  tmpvar_6.w = (tmpvar_4.w * (roughnessV * 7.0));
  vec4 tmpvar_7;
  tmpvar_7 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6);
  vec4 tmpvar_8;
  tmpvar_8 = texture2D (unity_Lightmap, xlv_TEXCOORD5);
  vec3 tmpvar_9;
  tmpvar_9 = ((8.0 * tmpvar_8.w) * tmpvar_8.xyz);
  c_1.xyz = ((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * max (min (tmpvar_9, ((tmpvar_7.x * 2.0) * tmpvar_8.xyz)), (tmpvar_9 * tmpvar_7.x)));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_6.xyz, tmpvar_6.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_4) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_BumpMap_ST]
"vs_3_0
; 45 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c19, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c19.x
dp4 r1.z, r0, c10
dp4 r1.x, r0, c8
dp4 r1.y, r0, c9
mad r1.xyz, r1, c15.w, -v0
dp3 r0.y, r1, r2
dp3 r0.x, r1, v1
dp3 r0.z, v2, r1
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul o2.xyz, r0.w, r0
dp3 r0.w, -r1, c4
dp3 r0.y, r2, c4
dp4 r1.w, v0, c3
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c15.w
dp3 r0.w, -r1, c5
dp3 r0.y, r2, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c15.w
dp3 r0.w, -r1, c6
dp4 r1.z, v0, c2
dp3 r0.y, r2, c6
dp4 r1.x, v0, c0
dp4 r1.y, v0, c1
mul r2.xyz, r1.xyww, c19.y
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul o5, r0, c15.w
mov r0.x, r2
mul r0.y, r2, c13.x
mad o7.xy, r2.z, c14.zwzw, r0
mov o0, r1
mov o7.zw, r1
mad o1.zw, v3.xyxy, c18.xyxy, c18
mad o1.xy, v3, c17, c17.zwzw
mad o6.xy, v4, c16, c16.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 17 [_BumpMap_ST]
Vector 16 [_MainTex_ST]
Matrix 7 [_Object2World] 3
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Matrix 10 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Matrix 3 [glstate_matrix_mvp] 4
Vector 15 [unity_LightmapST]
Vector 14 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 58.67 (44 instructions), vertex: 64, texture: 0,
//   sequencer: 22,  13 GPRs, 12 threads,
// Performance (if enough threads): ~64 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacjaaaaaacoaaaaaaaaaaaaaaaceaaaaabomaaaaacbeaaaaaaaa
aaaaaaaaaaaaabmeaaaaaabmaaaaablhpppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaablaaaaaaaoeaaacaabbaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaba
aaabaaaaaaaaaapaaaaaaaaaaaaaabamaaacaaahaaadaaaaaaaaabbmaaaaaaaa
aaaaabcmaaacaaabaaabaaaaaaaaaapaaaaaaaaaaaaaabdoaaacaaacaaabaaaa
aaaaaapaaaaaaaaaaaaaabemaaacaaakaaaeaaaaaaaaabbmaaaaaaaaaaaaabfk
aaacaaaaaaabaaaaaaaaabhaaaaaaaaaaaaaabiaaaacaaadaaaeaaaaaaaaabbm
aaaaaaaaaaaaabjdaaacaaapaaabaaaaaaaaaapaaaaaaaaaaaaaabkeaaacaaao
aaabaaaaaaaaaapaaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgm
geaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfahcgpgkgfgdhegjgpgofa
gbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfhgphcgmgedcepgcgkgfgd
heaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklaaabaaadaaabaaad
aaabaaaaaaaaaaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehj
fpemgjghgihegngbhafdfeaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
aapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaackaaagbaaam
aaaaaaaaaaaaaaaaaaaageohaaaaaaabaaaaaaafaaaaaaajaaaaacjaaabaaaag
aaaagaahaaaadaaiaaaafaajaacbfaakaaaapafaaaachbfbaaadpcfcaaaepdfd
aaafpefeaaagdfffaaahpgfgaaaaaackaaaabaclaaaabadgaaaabaddaaaabade
aaaabadfaaaabacjaaaaaaciaaaabadcaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
dpaaaaaaaaaaaaaaaaaaaaaaaaaaaaaapbfffaagaaaabcabmcaaaaaaaaaafaal
aaaabcaameaaaaaaaaaagabagabgbcaabcaaaaaaaaaagabmgaccbcaabcaaaaaa
aaaagacigacobcaabcaaaaaaaaaadadeaaaaccaaaaaaaaaaafpihaaaaaaaagii
aaaaaaaaafpicaaaaaaaagiiaaaaaaaaafpibaaaaaaaadnaaaaaaaaaafpieaaa
aaaaadmhaaaaaaaaafpifaaaaaaaadmhaaaaaaaamiapaaaaaabliiaakbahagaa
miapaaaaaamgnapiklahafaamiapaaaaaalbdepiklahaeaamiapaaakaagmnaje
klahadaamiapiadoaananaaaocakakaamiahaaaiaamamgmaalamaaanbeccaaaj
aablgmblkbacaiackibeajajaablgmebibacajahkmbhagalaamggcmdibacajai
kmchagaaaalbgcedibacaiaikmehagadaabngfidmbabacaimiahaaaiaalelble
clalaaaimiahaaaiaamagmleclakaaaimiahaaadabgdlomaolabacadmiahaaag
aagmgcleklabahagmiahaaamaagmloleklacahaabeahaaaaaalbgcgmkbabajam
aebeaeaeaagmgmgmoaagaaalbeaeaaafaalblbmgoaagaaamaebbafagaalbmglb
oaamalalbeacaaagaalolomgpaajadagmiahaaajabmablmaklaiaoahaeelagaa
aamnblmgobadacaakiebabadaalolomdnaajacajkichadahaemggcmaibajajai
kiehadacaelbgciaibajaiaimiamaaadaalbigpbklaaahadmiahaaaiaegmlole
klajahackiehaaacaamagmidibakppajmiamiaagaanlnlaaocakakaamiadiaaf
aabjlabkilafapapmiadiaaaaabjlabkilaebabamiamiaaaaadbkmagilaebbbb
kiiiacaeaagmgmeboaaiahabbeacaaadaagdlomgpaaaajadaeciaeafaamglbmg
oaaiahabbeaeaaadaalobnblpaajabadaecbafaaaalolomgpaadadaafibiaaag
aalbmggmoaaiahiamiadiaagaamgbkbiklacacacmiapiaacaaaablaakbagaoaa
miapiaadaaaablaakbafaoaamiapiaaeaaaablaakbaeaoaamiahiaabaamagmaa
obadaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_ProjectionParams]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 465 [unity_Scale]
Vector 464 [unity_LightmapST]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 41 instructions using 7 registers
[Configuration]
8
0000002943050700
[Defaults]
1
461 1
3f000000
[Microcode]
656
00029c6c00400e0c0106c0836041dffc00031c6c005d300c0186c0836041dffc
401f9c6c011ce800810040d560607f9c401f9c6c011cf808010400d740619f9c
401f9c6c011d0908010400d740619fb000001c6c01506e0c010600c360411ffc
00001c6c0150620c010600c360405ffc00009c6c01505e0c010600c360411ffc
00009c6c0150520c010600c360405ffc00011c6c01504e0c010600c360411ffc
00011c6c0150420c010600c360405ffc00019c6c01d0300d8106c0c360403ffc
00019c6c01d0200d8106c0c360405ffc00019c6c01d0100d8106c0c360409ffc
00019c6c01d0000d8106c0c360411ffc00021c6c0190a00c0c86c0c360405ffc
00021c6c0190900c0c86c0c360409ffc00021c6c0190800c0c86c0c360411ffc
00031c6c00800243011845436041dffc00031c6c01000230812185630321dffc
401f9c6c0040000d8686c0836041ff80401f9c6c004000558686c08360407fb4
00029c6c011d100c08bfc0e30041dffc00019c6c009cd00e068000c36041dffc
00019c6c009d202a868000c360409ffc401f9c6c00c000080686c09541a19fb4
00021c6c00800e0c0cbfc0836041dffc00001c6c0150608c0a8600c360403ffc
00009c6c0150508c0a8600c360403ffc00011c6c0150408c0a8600c360403ffc
00019c6c0140020c0106054360405ffc00019c6c01400e0c0a86008360411ffc
00019c6c0140000c0a86044360409ffc00001c6c0150600c088600c360409ffc
00009c6c0150500c088600c360409ffc00011c6c0150400c088600c360409ffc
00019c6c0140000c0686034360403ffc401f9c6c009d100d84bfc0c36041ffa4
401f9c6c209d100d82bfc0dfe1b1e128401f9c6c009d100d80bfc0c36041ffac
401f9c6c00800000048603436041dfa1
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "color" Color
ConstBuffer "$Globals" 240 // 240 used size, 16 vars
Vector 192 [unity_LightmapST] 4
Vector 208 [_MainTex_ST] 4
Vector 224 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityPerDraw" 2
// 53 instructions, 5 temp regs, 0 temp arrays:
// ALU 27 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedocbhdagnmkkkpmlfjoddiffbjllmfnbmabaaaaaabaajaaaaadaaaaaa
cmaaaaaapeaaaaaanmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheooaaaaaaaaiaaaaaa
aiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaneaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaneaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaneaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaadamaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
cmahaaaaeaaaabaamlabaaaafjaaaaaeegiocaaaaaaaaaaaapaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaadpccabaaa
afaaaaaagfaaaaaddccabaaaagaaaaaagfaaaaadpccabaaaahaaaaaagiaaaaac
afaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
pccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaanaaaaaaogikcaaaaaaaaaaaanaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaaoaaaaaakgiocaaa
aaaaaaaaaoaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaadiaaaaahhcaabaaaadaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaadaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaadaaaaaaegacbaaa
adaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaaadaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaacaaaaaa
pgapbaaaabaaaaaaegacbaaaacaaaaaadiaaaaajhcaabaaaacaaaaaafgafbaia
ebaaaaaaabaaaaaaegiccaaaacaaaaaaanaaaaaadcaaaaallcaabaaaabaaaaaa
egiicaaaacaaaaaaamaaaaaaagaabaiaebaaaaaaabaaaaaaegaibaaaacaaaaaa
dcaaaaallcaabaaaabaaaaaaegiicaaaacaaaaaaaoaaaaaakgakbaiaebaaaaaa
abaaaaaaegambaaaabaaaaaadgaaaaaficaabaaaacaaaaaaakaabaaaabaaaaaa
dgaaaaagbcaabaaaaeaaaaaaakiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaa
aeaaaaaaakiacaaaacaaaaaaanaaaaaadgaaaaagecaabaaaaeaaaaaaakiacaaa
acaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaa
aeaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaaeaaaaaa
baaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaai
pccabaaaadaaaaaaegaobaaaacaaaaaapgipcaaaacaaaaaabeaaaaaadgaaaaaf
icaabaaaacaaaaaabkaabaaaabaaaaaadgaaaaagbcaabaaaaeaaaaaabkiacaaa
acaaaaaaamaaaaaadgaaaaagccaabaaaaeaaaaaabkiacaaaacaaaaaaanaaaaaa
dgaaaaagecaabaaaaeaaaaaabkiacaaaacaaaaaaaoaaaaaabaaaaaahccaabaaa
acaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaabaaaaaahbcaabaaaacaaaaaa
egbcbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaa
acaaaaaaegacbaaaaeaaaaaadiaaaaaipccabaaaaeaaaaaaegaobaaaacaaaaaa
pgipcaaaacaaaaaabeaaaaaadgaaaaagbcaabaaaacaaaaaackiacaaaacaaaaaa
amaaaaaadgaaaaagccaabaaaacaaaaaackiacaaaacaaaaaaanaaaaaadgaaaaag
ecaabaaaacaaaaaackiacaaaacaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaa
egacbaaaacaaaaaadiaaaaaipccabaaaafaaaaaaegaobaaaabaaaaaapgipcaaa
acaaaaaabeaaaaaadcaaaaaldccabaaaagaaaaaaegbabaaaaeaaaaaaegiacaaa
aaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaahaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaahaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_glesVertex.xyz - ((_World2Object * tmpvar_10).xyz * unity_Scale.w)));
  highp vec3 tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_13 = tmpvar_1.xyz;
  tmpvar_14 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_15;
  tmpvar_15[0].x = tmpvar_13.x;
  tmpvar_15[0].y = tmpvar_14.x;
  tmpvar_15[0].z = tmpvar_2.x;
  tmpvar_15[1].x = tmpvar_13.y;
  tmpvar_15[1].y = tmpvar_14.y;
  tmpvar_15[1].z = tmpvar_2.y;
  tmpvar_15[2].x = tmpvar_13.z;
  tmpvar_15[2].y = tmpvar_14.z;
  tmpvar_15[2].z = tmpvar_2.z;
  vec4 v_16;
  v_16.x = _Object2World[0].x;
  v_16.y = _Object2World[1].x;
  v_16.z = _Object2World[2].x;
  v_16.w = _Object2World[3].x;
  highp vec4 tmpvar_17;
  tmpvar_17.xyz = (tmpvar_15 * v_16.xyz);
  tmpvar_17.w = tmpvar_12.x;
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * unity_Scale.w);
  tmpvar_5 = tmpvar_18;
  vec4 v_19;
  v_19.x = _Object2World[0].y;
  v_19.y = _Object2World[1].y;
  v_19.z = _Object2World[2].y;
  v_19.w = _Object2World[3].y;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_15 * v_19.xyz);
  tmpvar_20.w = tmpvar_12.y;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].z;
  v_22.y = _Object2World[1].z;
  v_22.z = _Object2World[2].z;
  v_22.w = _Object2World[3].z;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_15 * v_22.xyz);
  tmpvar_23.w = tmpvar_12.z;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_26;
  tmpvar_26 = normalize((tmpvar_15 * (((_World2Object * tmpvar_25).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_4 = tmpvar_26;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float tmpvar_33;
  mediump float lightShadowDataX_34;
  highp float dist_35;
  lowp float tmpvar_36;
  tmpvar_36 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_35 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = _LightShadowData.x;
  lightShadowDataX_34 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (float((dist_35 > (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w))), lightShadowDataX_34);
  tmpvar_33 = tmpvar_38;
  c_1.xyz = (tmpvar_11 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD5).xyz), vec3((tmpvar_33 * 2.0))));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _ProjectionParams;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (gl_ModelViewProjectionMatrix * _glesVertex);
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_9;
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * (_glesVertex.xyz - ((_World2Object * tmpvar_11).xyz * unity_Scale.w)));
  highp vec3 tmpvar_14;
  highp vec3 tmpvar_15;
  tmpvar_14 = tmpvar_1.xyz;
  tmpvar_15 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_16;
  tmpvar_16[0].x = tmpvar_14.x;
  tmpvar_16[0].y = tmpvar_15.x;
  tmpvar_16[0].z = tmpvar_2.x;
  tmpvar_16[1].x = tmpvar_14.y;
  tmpvar_16[1].y = tmpvar_15.y;
  tmpvar_16[1].z = tmpvar_2.y;
  tmpvar_16[2].x = tmpvar_14.z;
  tmpvar_16[2].y = tmpvar_15.z;
  tmpvar_16[2].z = tmpvar_2.z;
  vec4 v_17;
  v_17.x = _Object2World[0].x;
  v_17.y = _Object2World[1].x;
  v_17.z = _Object2World[2].x;
  v_17.w = _Object2World[3].x;
  highp vec4 tmpvar_18;
  tmpvar_18.xyz = (tmpvar_16 * v_17.xyz);
  tmpvar_18.w = tmpvar_13.x;
  highp vec4 tmpvar_19;
  tmpvar_19 = (tmpvar_18 * unity_Scale.w);
  tmpvar_5 = tmpvar_19;
  vec4 v_20;
  v_20.x = _Object2World[0].y;
  v_20.y = _Object2World[1].y;
  v_20.z = _Object2World[2].y;
  v_20.w = _Object2World[3].y;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = (tmpvar_16 * v_20.xyz);
  tmpvar_21.w = tmpvar_13.y;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * unity_Scale.w);
  tmpvar_6 = tmpvar_22;
  vec4 v_23;
  v_23.x = _Object2World[0].z;
  v_23.y = _Object2World[1].z;
  v_23.z = _Object2World[2].z;
  v_23.w = _Object2World[3].z;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = (tmpvar_16 * v_23.xyz);
  tmpvar_24.w = tmpvar_13.z;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * unity_Scale.w);
  tmpvar_7 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_27;
  tmpvar_27 = normalize((tmpvar_16 * (((_World2Object * tmpvar_26).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_4 = tmpvar_27;
  highp vec4 o_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_8 * 0.5);
  highp vec2 tmpvar_30;
  tmpvar_30.x = tmpvar_29.x;
  tmpvar_30.y = (tmpvar_29.y * _ProjectionParams.x);
  o_28.xy = (tmpvar_30 + tmpvar_29.w);
  o_28.zw = tmpvar_8.zw;
  gl_Position = tmpvar_8;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = o_28;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_Lightmap, xlv_TEXCOORD5);
  lowp vec3 tmpvar_35;
  tmpvar_35 = ((8.0 * tmpvar_34.w) * tmpvar_34.xyz);
  c_1.xyz = (tmpvar_11 * max (min (tmpvar_35, ((tmpvar_33.x * 2.0) * tmpvar_34.xyz)), (tmpvar_35 * tmpvar_33.x)));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 unity_SHC;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_LightColor[4];
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosX0;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_3;
  tmpvar_3[0] = _Object2World[0].xyz;
  tmpvar_3[1] = _Object2World[1].xyz;
  tmpvar_3[2] = _Object2World[2].xyz;
  vec3 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * (gl_Vertex.xyz - ((_World2Object * tmpvar_2).xyz * unity_Scale.w)));
  vec3 tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_5 = TANGENT.xyz;
  tmpvar_6 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = gl_Normal.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = gl_Normal.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = gl_Normal.z;
  vec4 v_8;
  v_8.x = _Object2World[0].x;
  v_8.y = _Object2World[1].x;
  v_8.z = _Object2World[2].x;
  v_8.w = _Object2World[3].x;
  vec4 tmpvar_9;
  tmpvar_9.xyz = (tmpvar_7 * v_8.xyz);
  tmpvar_9.w = tmpvar_4.x;
  vec4 v_10;
  v_10.x = _Object2World[0].y;
  v_10.y = _Object2World[1].y;
  v_10.z = _Object2World[2].y;
  v_10.w = _Object2World[3].y;
  vec4 tmpvar_11;
  tmpvar_11.xyz = (tmpvar_7 * v_10.xyz);
  tmpvar_11.w = tmpvar_4.y;
  vec4 v_12;
  v_12.x = _Object2World[0].z;
  v_12.y = _Object2World[1].z;
  v_12.z = _Object2World[2].z;
  v_12.w = _Object2World[3].z;
  vec4 tmpvar_13;
  tmpvar_13.xyz = (tmpvar_7 * v_12.xyz);
  tmpvar_13.w = tmpvar_4.z;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (gl_Normal * unity_Scale.w));
  vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = tmpvar_15;
  vec3 x2_18;
  vec3 x1_19;
  x1_19.x = dot (unity_SHAr, tmpvar_17);
  x1_19.y = dot (unity_SHAg, tmpvar_17);
  x1_19.z = dot (unity_SHAb, tmpvar_17);
  vec4 tmpvar_20;
  tmpvar_20 = (tmpvar_15.xyzz * tmpvar_15.yzzx);
  x2_18.x = dot (unity_SHBr, tmpvar_20);
  x2_18.y = dot (unity_SHBg, tmpvar_20);
  x2_18.z = dot (unity_SHBb, tmpvar_20);
  vec3 tmpvar_21;
  tmpvar_21 = (_Object2World * gl_Vertex).xyz;
  vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - tmpvar_21.x);
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - tmpvar_21.y);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - tmpvar_21.z);
  vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z)) * inversesqrt(tmpvar_25))) * (1.0/((1.0 + (tmpvar_25 * unity_4LightAtten0)))));
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_7 * (((_World2Object * tmpvar_16).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_9 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_11 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_13 * unity_Scale.w);
  xlv_TEXCOORD5 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD6 = (((x1_19 + x2_18) + (unity_SHC.xyz * ((tmpvar_15.x * tmpvar_15.x) - (tmpvar_15.y * tmpvar_15.y)))) + ((((unity_LightColor[0].xyz * tmpvar_26.x) + (unity_LightColor[1].xyz * tmpvar_26.y)) + (unity_LightColor[2].xyz * tmpvar_26.z)) + (unity_LightColor[3].xyz * tmpvar_26.w)));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec3 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_6;
  tmpvar_6.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_6.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_6.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_7;
  tmpvar_7.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_6, tmpvar_2) * tmpvar_6)));
  tmpvar_7.w = (tmpvar_5.w * (roughnessV * 7.0));
  vec4 c_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(normal_3);
  vec3 tmpvar_10;
  tmpvar_10 = normalize(xlv_TEXCOORD5);
  vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  float tmpvar_12;
  tmpvar_12 = clamp (dot (tmpvar_9, tmpvar_10), 0.0, 1.0);
  float tmpvar_13;
  tmpvar_13 = clamp (dot (tmpvar_9, tmpvar_11), 0.0, 1.0);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, normalize((tmpvar_10 + tmpvar_11))), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = (roughnessV * roughnessV);
  float tmpvar_16;
  tmpvar_16 = (2.0 * tmpvar_12);
  float tmpvar_17;
  tmpvar_17 = (orenNayar * orenNayar);
  float x_18;
  x_18 = dot (tmpvar_11, tmpvar_9);
  float x_19;
  x_19 = dot (tmpvar_10, tmpvar_9);
  float x_20;
  x_20 = dot (tmpvar_11, tmpvar_9);
  float x_21;
  x_21 = dot (tmpvar_10, tmpvar_9);
  float tmpvar_22;
  tmpvar_22 = min ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))));
  c_8.xyz = (((((tmpvar_4 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_12))) * vec3(((1.0 - (0.5 * (tmpvar_17 / (tmpvar_17 + 0.57)))) + (((0.45 * (tmpvar_17 / (tmpvar_17 + 0.09))) * max (0.0, dot ((tmpvar_11 - (tmpvar_9 * dot (tmpvar_11, tmpvar_9))), (tmpvar_10 - (tmpvar_9 * dot (tmpvar_10, tmpvar_9)))))) * (sin(max ((1.5708 - (sign(x_18) * (1.5708 - (sqrt((1.0 - abs(x_18))) * (1.5708 + (abs(x_18) * (-0.214602 + (abs(x_18) * (0.0865667 + (abs(x_18) * -0.0310296)))))))))), (1.5708 - (sign(x_19) * (1.5708 - (sqrt((1.0 - abs(x_19))) * (1.5708 + (abs(x_19) * (-0.214602 + (abs(x_19) * (0.0865667 + (abs(x_19) * -0.0310296)))))))))))) * (sin(tmpvar_22) / cos(tmpvar_22))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_11, tmpvar_9), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_16 * tmpvar_13) / tmpvar_14), ((tmpvar_16 * tmpvar_12) / tmpvar_14)))) * (((1.0/(((4.0 * tmpvar_15) * pow (tmpvar_12, 4.0)))) * exp((((tmpvar_12 * tmpvar_12) - 1.0) / ((tmpvar_15 * tmpvar_12) * tmpvar_12)))) * tmpvar_5.w))) / (max (0.0, (tmpvar_13 * tmpvar_12)) + 0.09))) * tmpvar_5.x) * _LightColor0.xyz)) * 2.0);
  c_8.w = 1.0;
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (tmpvar_4 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_7.xyz, tmpvar_7.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_5) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_4LightPosX0]
Vector 15 [unity_4LightPosY0]
Vector 16 [unity_4LightPosZ0]
Vector 17 [unity_4LightAtten0]
Vector 18 [unity_LightColor0]
Vector 19 [unity_LightColor1]
Vector 20 [unity_LightColor2]
Vector 21 [unity_LightColor3]
Vector 22 [unity_SHAr]
Vector 23 [unity_SHAg]
Vector 24 [unity_SHAb]
Vector 25 [unity_SHBr]
Vector 26 [unity_SHBg]
Vector 27 [unity_SHBb]
Vector 28 [unity_SHC]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 29 [unity_Scale]
Vector 30 [_MainTex_ST]
Vector 31 [_BumpMap_ST]
"vs_3_0
; 96 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
def c32, 1.00000000, 0.00000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c29.w
dp4 r0.x, v0, c5
add r1, -r0.x, c15
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c14
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c32.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c16
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c17
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c32.x
dp4 r2.z, r4, c24
dp4 r2.y, r4, c23
dp4 r2.x, r4, c22
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c32.y
mul r0, r0, r1
mul r1.xyz, r0.y, c19
mad r1.xyz, r0.x, c18, r1
mad r0.xyz, r0.z, c20, r1
mul r1, r4.xyzz, r4.yzzx
mad r0.xyz, r0.w, c21, r0
mul r0.w, r3, r3
mad r0.w, r4.x, r4.x, -r0
dp4 r3.z, r1, c27
dp4 r3.y, r1, c26
dp4 r3.x, r1, c25
add r1.xyz, r2, r3
mov r2.xyz, v1
mul r3.xyz, v2.zxyw, r2.yzxw
mul r4.xyz, r0.w, c28
add r4.xyz, r1, r4
mov r2.xyz, v1
mad r2.xyz, v2.yzxw, r2.zxyw, -r3
mul r3.xyz, r2, v1.w
mov r1.xyz, c12
mov r1.w, c32.x
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c29.w, -v0
add o7.xyz, r4, r0
dp3 r1.y, r2, r3
dp3 r1.x, r2, v1
dp3 r1.z, v2, r2
dp3 r0.w, r1, r1
rsq r1.w, r0.w
mov r0, c10
dp4 r4.z, c13, r0
mov r0, c9
dp4 r4.y, c13, r0
mul o2.xyz, r1.w, r1
mov r1, c8
dp4 r4.x, c13, r1
dp3 r0.y, r3, c4
dp3 r0.w, -r2, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c29.w
dp3 r0.y, r3, c5
dp3 r0.w, -r2, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c29.w
dp3 r0.y, r3, c6
dp3 r0.w, -r2, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
dp3 o6.y, r3, r4
mul o5, r0, c29.w
dp3 o6.z, v2, r4
dp3 o6.x, v1, r4
mad o1.zw, v3.xyxy, c31.xyxy, c31
mad o1.xy, v3, c30, c30.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 31 [_BumpMap_ST]
Vector 30 [_MainTex_ST]
Matrix 21 [_Object2World] 4
Matrix 25 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 17 [glstate_matrix_mvp] 4
Vector 5 [unity_4LightAtten0]
Vector 2 [unity_4LightPosX0]
Vector 3 [unity_4LightPosY0]
Vector 4 [unity_4LightPosZ0]
Vector 6 [unity_LightColor0]
Vector 7 [unity_LightColor1]
Vector 8 [unity_LightColor2]
Vector 9 [unity_LightColor3]
Vector 12 [unity_SHAb]
Vector 11 [unity_SHAg]
Vector 10 [unity_SHAr]
Vector 15 [unity_SHBb]
Vector 14 [unity_SHBg]
Vector 13 [unity_SHBr]
Vector 16 [unity_SHC]
Vector 29 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 117.33 (88 instructions), vertex: 32, texture: 0,
//   sequencer: 36,  15 GPRs, 12 threads,
// Performance (if enough threads): ~117 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaadpeaaaaafaiaaaaaaaaaaaaaaceaaaaadfaaaaaadhiaaaaaaaa
aaaaaaaaaaaaadciaaaaaabmaaaaadblpppoadaaaaaaaabeaaaaaabmaaaaaaaa
aaaaadbeaaaaabkmaaacaabpaaabaaaaaaaaabliaaaaaaaaaaaaabmiaaacaabo
aaabaaaaaaaaabliaaaaaaaaaaaaabneaaacaabfaaaeaaaaaaaaaboeaaaaaaaa
aaaaabpeaaacaabjaaaeaaaaaaaaaboeaaaaaaaaaaaaacacaaacaaaaaaabaaaa
aaaaacbiaaaaaaaaaaaaacciaaacaaabaaabaaaaaaaaabliaaaaaaaaaaaaacdn
aaacaabbaaaeaaaaaaaaaboeaaaaaaaaaaaaacfaaaacaaafaaabaaaaaaaaabli
aaaaaaaaaaaaacgdaaacaaacaaabaaaaaaaaabliaaaaaaaaaaaaachfaaacaaad
aaabaaaaaaaaabliaaaaaaaaaaaaacihaaacaaaeaaabaaaaaaaaabliaaaaaaaa
aaaaacjjaaacaaagaaaeaaaaaaaaackmaaaaaaaaaaaaaclmaaacaaamaaabaaaa
aaaaabliaaaaaaaaaaaaacmhaaacaaalaaabaaaaaaaaabliaaaaaaaaaaaaacnc
aaacaaakaaabaaaaaaaaabliaaaaaaaaaaaaacnnaaacaaapaaabaaaaaaaaabli
aaaaaaaaaaaaacoiaaacaaaoaaabaaaaaaaaabliaaaaaaaaaaaaacpdaaacaaan
aaabaaaaaaaaabliaaaaaaaaaaaaacpoaaacaabaaaabaaaaaaaaabliaaaaaaaa
aaaaadaiaaacaabnaaabaaaaaaaaabliaaaaaaaafpechfgnhaengbhafpfdfeaa
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgk
gfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfhgphc
gmgedcepgcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaakl
aaabaaadaaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihe
fagphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpdeem
gjghgiheebhehegfgodaaahfgogjhehjfpdeemgjghgihefagphdfidaaahfgogj
hehjfpdeemgjghgihefagphdfjdaaahfgogjhehjfpdeemgjghgihefagphdfkda
aahfgogjhehjfpemgjghgiheedgpgmgphcaaklklaaabaaadaaabaaaeaaaeaaaa
aaaaaaaahfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeiebghaahfgogjhehjfp
fdeiebhcaahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdeiecghaahfgogjhehj
fpfdeiechcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgdgbgmgfaahghdfpdd
fpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaemi
aagbaaaoaaaaaaaaaaaaaaaaaaaageohaaaaaaabaaaaaaaeaaaaaaakaaaaacja
aabaaaajaaaagaakaaaadaalaacafaamaaaapafaaaachbfbaaadpcfcaaaepdfd
aaafpefeaaaghfffaaajhgfgaaaaaadfaaaabadgaaaabaemaaaabaejaaaabaek
aaaabaelaaaaaadcaaaaaaddaaaabadeaaaabageaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadpiaaaaaaaaaaaaaaaaaaaaaaaaaaaaapaffeaajaaaabcaamcaaaaaa
aaaaeaanaaaabcaameaaaaaaaaaagabbgabhbcaabcaaaaaaaaaagabngacdbcaa
bcaaaaaaaaaagacjgacpbcaabcaaaaaaaaaagadfgadlbcaabcaaaaaaaaaagaeb
gaehbcaabcaaaaaaaaaagaengafdbcaabcaaaaaaaaaagafjgafpbcaaccaaaaaa
afpicaaaaaaaagbbaaaaaaaaafpibaaaaaaaagiiaaaaaaaaafpifaaaaaaaaoii
aaaaaaaaafpidaaaaaaaadmhaaaaaaaakmepaoaaaabliiedibacbebhmiapaaaa
aalbiiaaklacbdaamiapaaaaaagmdejeklacbcaamiapiadoaamgaadeklacbbaa
miahaaahaamamgmaalblaabmceibagaoaablgmgmkbabbfiabechaaajaaleblbl
cbbmababkiclaoaeaagfblebibafbnbgbebhaaagaalblomgkbafbgabkiehadai
aalbgcmaibabbgbhkmihaaaaaalogficmbafabbhmiahaaajaamamgleclblabaj
kmbhadakaablleecibacbibhmiahaaahaalelbleclbkaaahmiahaaahaamagmle
clbjaaahmiahaaanaalbmaleklacbhakmiahaaamaalelbleclbkabajmianaaak
abefkopaolafabaamiahaaagaagmgcleklafbfagmialaaaiaagmloleklabbfai
beahaaaaaamggcgmkbafbhaiaebeaiaiaagmgmmgoaagaaadbeahaaalaalblebl
kbaebhaiaebeajajaalblbbloaagaaaabeacaaakaalomplbpaaoakaimiahaaam
aamagmleclbjabammiahaaanaagmleleklacbganmiahaaaeaagmlemaklaebgal
aeblakaaaaboblgmobakabadmialaaacabgfblmaklahbnacbeabaaahaagjlomg
paacabagaeecakahaagdgjmgpaaaacaakieeadahaagjlomdnaacafbhkiehaaal
aelbgcidibacbhbhmiahaaagaabllemaklaebfaekibhadaeaegmgcmaibacbgbg
miahaaacaamgmaleklacbfanmiabiaafaaloloaapaamabaamiaciaafaagdloaa
paaaamaamiaeiaafaaloloaapaamafaamiadiaaaaabjlabkiladbobomiamiaaa
aadbkmagiladbpbpkicpadafaegmaaiaiaacacbgmiahaaamaeblloleklacbfae
miadaaaaaalblclaklaabfadaibpadanaelbaagmkaacadagaibpaoacaemgaagg
kaacaeagaicbaoaeaadoanmbgpakagagaiecaoaeaadoanlbgpalagagaiieaoae
aadoanlmgpamagagaicbadabaakhkhmgkpaoanagbeacaaabaakhkhgmkpaoaoaa
aeciaiaiaagmgmmgoaamaladbeaeaaabaakhkhlbkpaoapaaaeciajabaalolomg
paahahaabeapaaaaaapipimgobacacamaeipajacaapilblbobacagalmiapaaaa
aajejepiolananaamiapaaacaajemgpiolanagacfiiiabakaalbmgbloaamalib
miapiaacaaaablaakbakbnaamiapiaadaaaablaakbajbnaamiapiaaeaaaablaa
kbaibnaamiahiaabaamablaaobahabaamiapaaacaajegmaaolafagacmiapaaaa
aaaaaapiolafafaageihababaalologboaaeabadmiahaaabaabllemnklabbaab
miapaaaeaaaaaagmilaaafppfibaaaaaaaaaaagmocaaaaiaficaaaaaaaaaaalb
ocaaaaiafieaaaaaaaaaaamgocaaaaiafiiaaaaaaaaaaablocaaaaiamiapaaaa
aapiaaaaobacaaaaemipaaadaapilblbkcaappaeemecacaaaamgblgmobadaaae
emciacacaagmmgmgobadacaeembbaaacaabllbblobadacaemiaeaaaaaalbgmaa
obadaaaakibhacaeaalmmaecibacaiajkiciacaeaamgblicmbaeadajkieoacaf
aabgpmmaibacagajbeahaaaaaabbmalbkbaaahafambiafaaaamgmggmobaaadad
beahaaaaaabebamgoaafaaacamihacaaaamabalboaaaaeadmiahaaaaaamabaaa
oaaaacaamiahiaagaalemaaaoaabaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [unity_4LightPosX0]
Vector 464 [unity_4LightPosY0]
Vector 463 [unity_4LightPosZ0]
Vector 462 [unity_4LightAtten0]
Vector 461 [unity_LightColor0]
Vector 460 [unity_LightColor1]
Vector 459 [unity_LightColor2]
Vector 458 [unity_LightColor3]
Vector 457 [unity_SHAr]
Vector 456 [unity_SHAg]
Vector 455 [unity_SHAb]
Vector 454 [unity_SHBr]
Vector 453 [unity_SHBg]
Vector 452 [unity_SHBb]
Vector 451 [unity_SHC]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 450 [unity_Scale]
Vector 449 [_MainTex_ST]
Vector 448 [_BumpMap_ST]
"sce_vp_rsx // 82 instructions using 12 registers
[Configuration]
8
0000005241050c00
[Defaults]
1
447 2
000000003f800000
[Microcode]
1312
00019c6c005d200d8186c0836041fffc00041c6c00400e0c0106c0836041dffc
00029c6c005d300c0186c0836041dffc00031c6c009c220c013fc0c36041dffc
401f9c6c011c0800810040d560607f9c401f9c6c011c1808010400d740619f9c
401f9c6c01d0300d8106c0c360403f80401f9c6c01d0200d8106c0c360405f80
401f9c6c01d0100d8106c0c360409f80401f9c6c01d0000d8106c0c360411f80
00001c6c01506e0c010600c360411ffc00001c6c0150620c010600c360405ffc
00009c6c01505e0c010600c360411ffc00009c6c0150520c010600c360405ffc
00011c6c01504e0c010600c360411ffc00011c6c0150420c010600c360405ffc
00009c6c01d0500d8106c0c360409ffc00009c6c01d0400d8106c0c360403ffc
00011c6c01d0600d8106c0c360409ffc00059c6c01d0a00d8686c0c360405ffc
00059c6c01d0900d8686c0c360409ffc00059c6c01d0800d8686c0c360411ffc
00021c6c0150400c0c8600c360411ffc00001c6c0150600c0c8600c360409ffc
00001c6c0150500c0c8600c360403ffc00019c6c0190a00c0a86c0c360405ffc
00019c6c0190900c0a86c0c360409ffc00019c6c0190800c0a86c0c360411ffc
00029c6c00dcf00d8186c0aaa121fffc00031c6c00dd100d8186c0bfe0a1fffc
00039c6c00dd000d8186c0aaa0a1fffc00049c6c00800243011848436041dffc
00041c6c010002308121886304a1dffc00049c6c011c200c06bfc0e30041dffc
401f9c6c0140020c01060b4360405fb0401f9c6c01400e0c01060b4360411fb0
00019c6c0080007f8086c7436041fffc00039c6c0080000d8e86c7436041fffc
00009c6c0080007f80bfc04360409ffc00021c6c0040007f8086c08360409ffc
00021c6c0040002a8086c08360405ffc00019c6c010000000886c64361a1fffc
00031c6c0100000d8c86c64363a1fffc00039c6c00800e0c10bfc0836041dffc
00001c6c0150608c128600c360403ffc00009c6c0150508c128600c360403ffc
00011c6c0150408c128600c360403ffc00051c6c0140020c0106094360405ffc
00051c6c01400e0c1286008360411ffc00041c6c019c700c0886c0c360405ffc
00041c6c019c800c0886c0c360409ffc00041c6c019c900c0886c0c360411ffc
00009c6c010000000880046aa0a09ffc00021c6c0080000d089a04436041fffc
401f9c6c0140000c0e860b4360409fb000019c6c0100002a8086c54361a1fffc
00029c6c0100000d8a86c5436321fffc00051c6c0140000c1286074360409ffc
00031c6c01dc400d8886c0c360405ffc00031c6c01dc500d8886c0c360409ffc
00031c6c01dc600d8886c0c360411ffc00001c6c0150600c0e8600c360409ffc
00021c6c00c0000c1086c0830321dffc00031c6c009c302a828600c36041dffc
00041c6c00c0000c0c86c0830221dffc00009c6c2150500c0e8600c002b0827c
00011c6c2150400c0e8600caa2a8827c00031c6c209ce00d8a86c0d542a5e27c
00039c6c2140000c14860a5fe2a3027c00029c6c00dbf02a8186c0836321fffc
401f9c6c209c200d84bfc0c003b1e324401f9c6c109c200d82bfc0c002b1e128
401f9c6c109c200d80bfc0caa2a9e12c00001c6c1080000d8686c45542a5e17c
00001c6c129bf00d808000dfe2a3e17c401f9c6c008000000c860a436041dfa0
00001c6c0080000d8086c2436041fffc00009c6c009cc02a808600c36041dffc
00009c6c011cd000008600c300a1dffc00001c6c011cb055008600c300a1dffc
00001c6c011ca07f808600c30021dffc401f9c6c00c0000c1086c0830021dfb5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 160 // 160 used size, 14 vars
Vector 128 [_MainTex_ST] 4
Vector 144 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 94 instructions, 6 temp regs, 0 temp arrays:
// ALU 52 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedjljeiofnodddheocnendebnegnhjfkjbabaaaaaalaaoaaaaadaaaaaa
cmaaaaaapeaaaaaanmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheooaaaaaaaaiaaaaaa
aiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaneaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaneaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaneaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
mmamaaaaeaaaabaaddadaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaa
giaaaaacagaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaaiaaaaaa
ogikcaaaaaaaaaaaaiaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaajaaaaaakgiocaaaaaaaaaaaajaaaaaadiaaaaajhcaabaaa
aaaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaaaaaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaah
ecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaahhcaabaaa
acaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaadiaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgafbaiaebaaaaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaia
ebaaaaaaaaaaaaaaegaibaaaabaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaa
adaaaaaaaoaaaaaakgakbaiaebaaaaaaaaaaaaaaegambaaaaaaaaaaadgaaaaaf
icaabaaaabaaaaaaakaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaaakiacaaa
adaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaaakiacaaaadaaaaaaanaaaaaa
dgaaaaagecaabaaaadaaaaaaakiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaa
egbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaa
acaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaadgaaaaaficaabaaaabaaaaaabkaabaaaaaaaaaaa
dgaaaaagbcaabaaaadaaaaaabkiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaa
adaaaaaabkiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaabkiacaaa
adaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaa
adaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaai
pccabaaaaeaaaaaaegaobaaaabaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaag
bcaabaaaabaaaaaackiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaa
ckiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaackiacaaaadaaaaaa
aoaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
ecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipccabaaa
afaaaaaaegaobaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaajhcaabaaa
aaaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaa
egiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahcccabaaaagaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaah
bccabaaaagaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaaheccabaaa
agaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaficaabaaaaaaaaaaa
abeaaaaaaaaaiadpdiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaa
adaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaa
adaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaa
agaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaabbaaaaaibcaabaaa
abaaaaaaegiocaaaacaaaaaabcaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaa
abaaaaaaegiocaaaacaaaaaabdaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaa
abaaaaaaegiocaaaacaaaaaabeaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaa
acaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaa
egiocaaaacaaaaaabfaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaa
egiocaaaacaaaaaabgaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaa
egiocaaaacaaaaaabhaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaabiaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaa
acaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegacbaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaa
fgafbaiaebaaaaaaacaaaaaaegiocaaaacaaaaaaadaaaaaadiaaaaahpcaabaaa
aeaaaaaafgafbaaaaaaaaaaaegaobaaaadaaaaaadiaaaaahpcaabaaaadaaaaaa
egaobaaaadaaaaaaegaobaaaadaaaaaaaaaaaaajpcaabaaaafaaaaaaagaabaia
ebaaaaaaacaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaacaaaaaa
kgakbaiaebaaaaaaacaaaaaaegiocaaaacaaaaaaaeaaaaaadcaaaaajpcaabaaa
aeaaaaaaegaobaaaafaaaaaaagaabaaaaaaaaaaaegaobaaaaeaaaaaadcaaaaaj
pcaabaaaaaaaaaaaegaobaaaacaaaaaakgakbaaaaaaaaaaaegaobaaaaeaaaaaa
dcaaaaajpcaabaaaadaaaaaaegaobaaaafaaaaaaegaobaaaafaaaaaaegaobaaa
adaaaaaadcaaaaajpcaabaaaacaaaaaaegaobaaaacaaaaaaegaobaaaacaaaaaa
egaobaaaadaaaaaaeeaaaaafpcaabaaaadaaaaaaegaobaaaacaaaaaadcaaaaan
pcaabaaaacaaaaaaegaobaaaacaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaaacaaaaaaaceaaaaa
aaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaaacaaaaaadiaaaaahpcaabaaa
aaaaaaaaegaobaaaaaaaaaaaegaobaaaadaaaaaadeaaaaakpcaabaaaaaaaaaaa
egaobaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaah
pcaabaaaaaaaaaaaegaobaaaacaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaa
acaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaaaaaaaaa
egacbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaajaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaahhccabaaaahaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize((tmpvar_18 * (((_World2Object * tmpvar_31).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = tmpvar_29;
  mediump vec3 tmpvar_34;
  mediump vec4 normal_35;
  normal_35 = tmpvar_33;
  highp float vC_36;
  mediump vec3 x3_37;
  mediump vec3 x2_38;
  mediump vec3 x1_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAr, normal_35);
  x1_39.x = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAg, normal_35);
  x1_39.y = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAb, normal_35);
  x1_39.z = tmpvar_42;
  mediump vec4 tmpvar_43;
  tmpvar_43 = (normal_35.xyzz * normal_35.yzzx);
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBr, tmpvar_43);
  x2_38.x = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBg, tmpvar_43);
  x2_38.y = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBb, tmpvar_43);
  x2_38.z = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y));
  vC_36 = tmpvar_47;
  highp vec3 tmpvar_48;
  tmpvar_48 = (unity_SHC.xyz * vC_36);
  x3_37 = tmpvar_48;
  tmpvar_34 = ((x1_39 + x2_38) + x3_37);
  shlight_3 = tmpvar_34;
  tmpvar_10 = shlight_3;
  highp vec3 tmpvar_49;
  tmpvar_49 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_50;
  tmpvar_50 = (unity_4LightPosX0 - tmpvar_49.x);
  highp vec4 tmpvar_51;
  tmpvar_51 = (unity_4LightPosY0 - tmpvar_49.y);
  highp vec4 tmpvar_52;
  tmpvar_52 = (unity_4LightPosZ0 - tmpvar_49.z);
  highp vec4 tmpvar_53;
  tmpvar_53 = (((tmpvar_50 * tmpvar_50) + (tmpvar_51 * tmpvar_51)) + (tmpvar_52 * tmpvar_52));
  highp vec4 tmpvar_54;
  tmpvar_54 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_50 * tmpvar_29.x) + (tmpvar_51 * tmpvar_29.y)) + (tmpvar_52 * tmpvar_29.z)) * inversesqrt(tmpvar_53))) * (1.0/((1.0 + (tmpvar_53 * unity_4LightAtten0)))));
  highp vec3 tmpvar_55;
  tmpvar_55 = (tmpvar_10 + ((((unity_LightColor[0].xyz * tmpvar_54.x) + (unity_LightColor[1].xyz * tmpvar_54.y)) + (unity_LightColor[2].xyz * tmpvar_54.z)) + (unity_LightColor[3].xyz * tmpvar_54.w)));
  tmpvar_10 = tmpvar_55;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  mediump vec3 lightDir_33;
  lightDir_33 = xlv_TEXCOORD5;
  mediump vec3 viewDir_34;
  viewDir_34 = xlv_TEXCOORD1;
  mediump vec4 c_35;
  mediump float B_36;
  mediump float A_37;
  highp float rough_sq_38;
  mediump vec3 Rs_numerator_39;
  highp float roughness_c_40;
  highp float roughness_b_41;
  highp float roughness_a_42;
  mediump float roughness_43;
  highp float geo_denominator_44;
  highp float geo_numerator_45;
  mediump vec3 n_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = normalize(tmpvar_18);
  n_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = normalize(lightDir_33);
  mediump vec3 tmpvar_49;
  tmpvar_49 = normalize(viewDir_34);
  mediump float tmpvar_50;
  tmpvar_50 = clamp (dot (n_46, tmpvar_48), 0.0, 1.0);
  mediump float tmpvar_51;
  tmpvar_51 = clamp (dot (n_46, tmpvar_49), 0.0, 1.0);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (tmpvar_49, normalize((tmpvar_48 + tmpvar_49))), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = (roughnessV * roughnessV);
  mediump float tmpvar_54;
  tmpvar_54 = (2.0 * tmpvar_50);
  geo_numerator_45 = tmpvar_54;
  geo_denominator_44 = tmpvar_52;
  mediump float tmpvar_55;
  tmpvar_55 = (1.0/(((4.0 * tmpvar_53) * pow (tmpvar_50, 4.0))));
  roughness_a_42 = tmpvar_55;
  mediump float tmpvar_56;
  tmpvar_56 = ((tmpvar_50 * tmpvar_50) - 1.0);
  roughness_b_41 = tmpvar_56;
  mediump float tmpvar_57;
  tmpvar_57 = ((tmpvar_53 * tmpvar_50) * tmpvar_50);
  roughness_c_40 = tmpvar_57;
  highp float tmpvar_58;
  tmpvar_58 = ((roughness_a_42 * exp((roughness_b_41 / roughness_c_40))) * tmpvar_13);
  roughness_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_49, n_46), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_60;
  tmpvar_60 = vec3(((tmpvar_59 * min (1.0, min (((geo_numerator_45 * tmpvar_51) / geo_denominator_44), ((geo_numerator_45 * tmpvar_50) / geo_denominator_44)))) * roughness_43));
  Rs_numerator_39 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = (orenNayar * orenNayar);
  rough_sq_38 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = (1.0 - (0.5 * (rough_sq_38 / (rough_sq_38 + 0.57))));
  A_37 = tmpvar_62;
  highp float tmpvar_63;
  tmpvar_63 = (0.45 * (rough_sq_38 / (rough_sq_38 + 0.09)));
  B_36 = tmpvar_63;
  mediump float x_64;
  x_64 = dot (tmpvar_49, n_46);
  mediump float x_65;
  x_65 = dot (tmpvar_48, n_46);
  mediump float x_66;
  x_66 = dot (tmpvar_49, n_46);
  mediump float x_67;
  x_67 = dot (tmpvar_48, n_46);
  mediump float tmpvar_68;
  tmpvar_68 = min ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))));
  c_35.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_50))) * vec3((A_37 + ((B_36 * max (0.0, dot ((tmpvar_49 - (n_46 * dot (tmpvar_49, n_46))), (tmpvar_48 - (n_46 * dot (tmpvar_48, n_46)))))) * (sin(max ((1.5708 - (sign(x_64) * (1.5708 - (sqrt((1.0 - abs(x_64))) * (1.5708 + (abs(x_64) * (-0.214602 + (abs(x_64) * (0.0865667 + (abs(x_64) * -0.0310296)))))))))), (1.5708 - (sign(x_65) * (1.5708 - (sqrt((1.0 - abs(x_65))) * (1.5708 + (abs(x_65) * (-0.214602 + (abs(x_65) * (0.0865667 + (abs(x_65) * -0.0310296)))))))))))) * (sin(tmpvar_68) / cos(tmpvar_68))))))) + (((cSpecular.xyz * (Rs_numerator_39 / (max (0.0, (tmpvar_51 * tmpvar_50)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * 2.0);
  c_35.w = 1.0;
  c_1 = c_35;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize((tmpvar_18 * (((_World2Object * tmpvar_31).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = tmpvar_29;
  mediump vec3 tmpvar_34;
  mediump vec4 normal_35;
  normal_35 = tmpvar_33;
  highp float vC_36;
  mediump vec3 x3_37;
  mediump vec3 x2_38;
  mediump vec3 x1_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAr, normal_35);
  x1_39.x = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAg, normal_35);
  x1_39.y = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAb, normal_35);
  x1_39.z = tmpvar_42;
  mediump vec4 tmpvar_43;
  tmpvar_43 = (normal_35.xyzz * normal_35.yzzx);
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBr, tmpvar_43);
  x2_38.x = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBg, tmpvar_43);
  x2_38.y = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBb, tmpvar_43);
  x2_38.z = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y));
  vC_36 = tmpvar_47;
  highp vec3 tmpvar_48;
  tmpvar_48 = (unity_SHC.xyz * vC_36);
  x3_37 = tmpvar_48;
  tmpvar_34 = ((x1_39 + x2_38) + x3_37);
  shlight_3 = tmpvar_34;
  tmpvar_10 = shlight_3;
  highp vec3 tmpvar_49;
  tmpvar_49 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_50;
  tmpvar_50 = (unity_4LightPosX0 - tmpvar_49.x);
  highp vec4 tmpvar_51;
  tmpvar_51 = (unity_4LightPosY0 - tmpvar_49.y);
  highp vec4 tmpvar_52;
  tmpvar_52 = (unity_4LightPosZ0 - tmpvar_49.z);
  highp vec4 tmpvar_53;
  tmpvar_53 = (((tmpvar_50 * tmpvar_50) + (tmpvar_51 * tmpvar_51)) + (tmpvar_52 * tmpvar_52));
  highp vec4 tmpvar_54;
  tmpvar_54 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_50 * tmpvar_29.x) + (tmpvar_51 * tmpvar_29.y)) + (tmpvar_52 * tmpvar_29.z)) * inversesqrt(tmpvar_53))) * (1.0/((1.0 + (tmpvar_53 * unity_4LightAtten0)))));
  highp vec3 tmpvar_55;
  tmpvar_55 = (tmpvar_10 + ((((unity_LightColor[0].xyz * tmpvar_54.x) + (unity_LightColor[1].xyz * tmpvar_54.y)) + (unity_LightColor[2].xyz * tmpvar_54.z)) + (unity_LightColor[3].xyz * tmpvar_54.w)));
  tmpvar_10 = tmpvar_55;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  mediump vec3 lightDir_33;
  lightDir_33 = xlv_TEXCOORD5;
  mediump vec3 viewDir_34;
  viewDir_34 = xlv_TEXCOORD1;
  mediump vec4 c_35;
  mediump float B_36;
  mediump float A_37;
  highp float rough_sq_38;
  mediump vec3 Rs_numerator_39;
  highp float roughness_c_40;
  highp float roughness_b_41;
  highp float roughness_a_42;
  mediump float roughness_43;
  highp float geo_denominator_44;
  highp float geo_numerator_45;
  mediump vec3 n_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = normalize(normal_18);
  n_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = normalize(lightDir_33);
  mediump vec3 tmpvar_49;
  tmpvar_49 = normalize(viewDir_34);
  mediump float tmpvar_50;
  tmpvar_50 = clamp (dot (n_46, tmpvar_48), 0.0, 1.0);
  mediump float tmpvar_51;
  tmpvar_51 = clamp (dot (n_46, tmpvar_49), 0.0, 1.0);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (tmpvar_49, normalize((tmpvar_48 + tmpvar_49))), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = (roughnessV * roughnessV);
  mediump float tmpvar_54;
  tmpvar_54 = (2.0 * tmpvar_50);
  geo_numerator_45 = tmpvar_54;
  geo_denominator_44 = tmpvar_52;
  mediump float tmpvar_55;
  tmpvar_55 = (1.0/(((4.0 * tmpvar_53) * pow (tmpvar_50, 4.0))));
  roughness_a_42 = tmpvar_55;
  mediump float tmpvar_56;
  tmpvar_56 = ((tmpvar_50 * tmpvar_50) - 1.0);
  roughness_b_41 = tmpvar_56;
  mediump float tmpvar_57;
  tmpvar_57 = ((tmpvar_53 * tmpvar_50) * tmpvar_50);
  roughness_c_40 = tmpvar_57;
  highp float tmpvar_58;
  tmpvar_58 = ((roughness_a_42 * exp((roughness_b_41 / roughness_c_40))) * tmpvar_13);
  roughness_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_49, n_46), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_60;
  tmpvar_60 = vec3(((tmpvar_59 * min (1.0, min (((geo_numerator_45 * tmpvar_51) / geo_denominator_44), ((geo_numerator_45 * tmpvar_50) / geo_denominator_44)))) * roughness_43));
  Rs_numerator_39 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = (orenNayar * orenNayar);
  rough_sq_38 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = (1.0 - (0.5 * (rough_sq_38 / (rough_sq_38 + 0.57))));
  A_37 = tmpvar_62;
  highp float tmpvar_63;
  tmpvar_63 = (0.45 * (rough_sq_38 / (rough_sq_38 + 0.09)));
  B_36 = tmpvar_63;
  mediump float x_64;
  x_64 = dot (tmpvar_49, n_46);
  mediump float x_65;
  x_65 = dot (tmpvar_48, n_46);
  mediump float x_66;
  x_66 = dot (tmpvar_49, n_46);
  mediump float x_67;
  x_67 = dot (tmpvar_48, n_46);
  mediump float tmpvar_68;
  tmpvar_68 = min ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))));
  c_35.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_50))) * vec3((A_37 + ((B_36 * max (0.0, dot ((tmpvar_49 - (n_46 * dot (tmpvar_49, n_46))), (tmpvar_48 - (n_46 * dot (tmpvar_48, n_46)))))) * (sin(max ((1.5708 - (sign(x_64) * (1.5708 - (sqrt((1.0 - abs(x_64))) * (1.5708 + (abs(x_64) * (-0.214602 + (abs(x_64) * (0.0865667 + (abs(x_64) * -0.0310296)))))))))), (1.5708 - (sign(x_65) * (1.5708 - (sqrt((1.0 - abs(x_65))) * (1.5708 + (abs(x_65) * (-0.214602 + (abs(x_65) * (0.0865667 + (abs(x_65) * -0.0310296)))))))))))) * (sin(tmpvar_68) / cos(tmpvar_68))))))) + (((cSpecular.xyz * (Rs_numerator_39 / (max (0.0, (tmpvar_51 * tmpvar_50)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * 2.0);
  c_35.w = 1.0;
  c_1 = c_35;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "d3d11_9x " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 160 // 160 used size, 14 vars
Vector 128 [_MainTex_ST] 4
Vector 144 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 94 instructions, 6 temp regs, 0 temp arrays:
// ALU 52 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_3
eefiecedaiadoadgbkgmkpachagfohfljpeobahkabaaaaaacibgaaaaaeaaaaaa
daaaaaaakeahaaaahibeaaaaeabfaaaaebgpgodjgmahaaaagmahaaaaaaacpopp
paagaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaaiaa
acaaabaaaaaaaaaaabaaaeaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
acaaacaaaiaaafaaaaaaaaaaacaabcaaahaaanaaaaaaaaaaadaaaaaaaeaabeaa
aaaaaaaaadaaamaaajaabiaaaaaaaaaaaaaaaaaaabacpoppfbaaaaafcbaaapka
aaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaahiaadaaoekaafaaaaadabaaahiaaaaaffia
bnaaoekaaeaaaaaeaaaaaliabmaakekaaaaaaaiaabaakeiaaeaaaaaeaaaaahia
boaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiabpaaoekaaeaaaaae
aaaaahiaaaaaoeiacaaappkaaaaaoejbafaaaaadabaaahiaaaaaffibbjaaoeka
aeaaaaaeabaaahiabiaaoekaaaaaaaibabaaoeiaaeaaaaaeabaaaliabkaakeka
aaaakkibabaakeiaabaaaaacacaaaiiaabaaaaiaabaaaaacadaaahiaacaaoeja
afaaaaadaeaaahiaadaanciaabaamjjaaeaaaaaeadaaahiaadaamjiaabaancja
aeaaoeibafaaaaadadaaahiaadaaoeiaabaappjaabaaaaacaeaaabiabiaaaaka
abaaaaacaeaaaciabjaaaakaabaaaaacaeaaaeiabkaaaakaaiaaaaadacaaacia
adaaoeiaaeaaoeiaaiaaaaadacaaabiaabaaoejaaeaaoeiaaiaaaaadacaaaeia
acaaoejaaeaaoeiaafaaaaadacaaapoaacaaoeiacaaappkaabaaaaacacaaaiia
abaaffiaabaaaaacaeaaabiabiaaffkaabaaaaacaeaaaciabjaaffkaabaaaaac
aeaaaeiabkaaffkaaiaaaaadacaaaciaadaaoeiaaeaaoeiaaiaaaaadacaaabia
abaaoejaaeaaoeiaaiaaaaadacaaaeiaacaaoejaaeaaoeiaafaaaaadadaaapoa
acaaoeiacaaappkaabaaaaacacaaabiabiaakkkaabaaaaacacaaaciabjaakkka
abaaaaacacaaaeiabkaakkkaaiaaaaadabaaaciaadaaoeiaacaaoeiaaiaaaaad
abaaabiaabaaoejaacaaoeiaaiaaaaadabaaaeiaacaaoejaacaaoeiaafaaaaad
aeaaapoaabaaoeiacaaappkaabaaaaacabaaapiaaeaaoekaafaaaaadacaaahia
abaaffiabnaaoekaaeaaaaaeacaaahiabmaaoekaabaaaaiaacaaoeiaaeaaaaae
abaaahiaboaaoekaabaakkiaacaaoeiaaeaaaaaeabaaahiabpaaoekaabaappia
abaaoeiaaiaaaaadafaaaboaabaaoejaabaaoeiaaiaaaaadafaaacoaadaaoeia
abaaoeiaaiaaaaadacaaaciaadaaoeiaaaaaoeiaaiaaaaadafaaaeoaacaaoeja
abaaoeiaaiaaaaadacaaabiaabaaoejaaaaaoeiaaiaaaaadacaaaeiaacaaoeja
aaaaoeiaaiaaaaadaaaaabiaacaaoeiaacaaoeiaahaaaaacaaaaabiaaaaaaaia
afaaaaadabaaahoaaaaaaaiaacaaoeiaafaaaaadaaaaahiaaaaaffjabjaaoeka
aeaaaaaeaaaaahiabiaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaahiabkaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaahiablaaoekaaaaappjaaaaaoeiaacaaaaad
abaaapiaaaaakkibahaaoekaacaaaaadacaaapiaaaaaaaibafaaoekaacaaaaad
aaaaapiaaaaaffibagaaoekaafaaaaadadaaahiaacaaoejacaaappkaafaaaaad
aeaaahiaadaaffiabjaaoekaaeaaaaaeadaaaliabiaakekaadaaaaiaaeaakeia
aeaaaaaeadaaahiabkaaoekaadaakkiaadaapeiaafaaaaadaeaaapiaaaaaoeia
adaaffiaafaaaaadaaaaapiaaaaaoeiaaaaaoeiaaeaaaaaeaaaaapiaacaaoeia
acaaoeiaaaaaoeiaaeaaaaaeacaaapiaacaaoeiaadaaaaiaaeaaoeiaaeaaaaae
acaaapiaabaaoeiaadaakkiaacaaoeiaaeaaaaaeaaaaapiaabaaoeiaabaaoeia
aaaaoeiaahaaaaacabaaabiaaaaaaaiaahaaaaacabaaaciaaaaaffiaahaaaaac
abaaaeiaaaaakkiaahaaaaacabaaaiiaaaaappiaabaaaaacaeaaabiacbaaaaka
aeaaaaaeaaaaapiaaaaaoeiaaiaaoekaaeaaaaiaafaaaaadabaaapiaabaaoeia
acaaoeiaalaaaaadabaaapiaabaaoeiacbaaffkaagaaaaacacaaabiaaaaaaaia
agaaaaacacaaaciaaaaaffiaagaaaaacacaaaeiaaaaakkiaagaaaaacacaaaiia
aaaappiaafaaaaadaaaaapiaabaaoeiaacaaoeiaafaaaaadabaaahiaaaaaffia
akaaoekaaeaaaaaeabaaahiaajaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahia
alaaoekaaaaakkiaabaaoeiaaeaaaaaeaaaaahiaamaaoekaaaaappiaaaaaoeia
abaaaaacadaaaiiacbaaaakaajaaaaadabaaabiaanaaoekaadaaoeiaajaaaaad
abaaaciaaoaaoekaadaaoeiaajaaaaadabaaaeiaapaaoekaadaaoeiaafaaaaad
acaaapiaadaacjiaadaakeiaajaaaaadaeaaabiabaaaoekaacaaoeiaajaaaaad
aeaaaciabbaaoekaacaaoeiaajaaaaadaeaaaeiabcaaoekaacaaoeiaacaaaaad
abaaahiaabaaoeiaaeaaoeiaafaaaaadaaaaaiiaadaaffiaadaaffiaaeaaaaae
aaaaaiiaadaaaaiaadaaaaiaaaaappibaeaaaaaeabaaahiabdaaoekaaaaappia
abaaoeiaacaaaaadagaaahoaaaaaoeiaabaaoeiaafaaaaadaaaaapiaaaaaffja
bfaaoekaaeaaaaaeaaaaapiabeaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapia
bgaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiabhaaoekaaaaappjaaaaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcmmamaaaaeaaaabaaddadaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaa
bjaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaa
gfaaaaadhccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagfaaaaadpccabaaa
aeaaaaaagfaaaaadpccabaaaafaaaaaagfaaaaadhccabaaaagaaaaaagfaaaaad
hccabaaaahaaaaaagiaaaaacagaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaajaaaaaakgiocaaaaaaaaaaaajaaaaaa
diaaaaajhcaabaaaaaaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaaaaaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaacaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaacaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
acaaaaaadiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaapgbpbaaaabaaaaaa
baaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgafbaiaebaaaaaaaaaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaallcaabaaaaaaaaaaaegiicaaaadaaaaaa
amaaaaaaagaabaiaebaaaaaaaaaaaaaaegaibaaaabaaaaaadcaaaaallcaabaaa
aaaaaaaaegiicaaaadaaaaaaaoaaaaaakgakbaiaebaaaaaaaaaaaaaaegambaaa
aaaaaaaadgaaaaaficaabaaaabaaaaaaakaabaaaaaaaaaaadgaaaaagbcaabaaa
adaaaaaaakiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaadaaaaaaakiacaaa
adaaaaaaanaaaaaadgaaaaagecaabaaaadaaaaaaakiacaaaadaaaaaaaoaaaaaa
baaaaaahccaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaadaaaaaabaaaaaahecaabaaa
abaaaaaaegbcbaaaacaaaaaaegacbaaaadaaaaaadiaaaaaipccabaaaadaaaaaa
egaobaaaabaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaaficaabaaaabaaaaaa
bkaabaaaaaaaaaaadgaaaaagbcaabaaaadaaaaaabkiacaaaadaaaaaaamaaaaaa
dgaaaaagccaabaaaadaaaaaabkiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaa
adaaaaaabkiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaa
acaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaa
egacbaaaadaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaa
adaaaaaadiaaaaaipccabaaaaeaaaaaaegaobaaaabaaaaaapgipcaaaadaaaaaa
beaaaaaadgaaaaagbcaabaaaabaaaaaackiacaaaadaaaaaaamaaaaaadgaaaaag
ccaabaaaabaaaaaackiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaa
ckiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaa
egacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaaipccabaaaafaaaaaaegaobaaaaaaaaaaapgipcaaaadaaaaaabeaaaaaa
diaaaaajhcaabaaaaaaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaal
hcaabaaaaaaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahcccabaaaagaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaabaaaaaahbccabaaaagaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaa
baaaaaaheccabaaaagaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadgaaaaaf
icaabaaaaaaaaaaaabeaaaaaaaaaiadpdiaaaaaihcaabaaaabaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaa
abaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaa
bbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaabcaaaaaaegaobaaaaaaaaaaa
bbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaabdaaaaaaegaobaaaaaaaaaaa
bbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaabeaaaaaaegaobaaaaaaaaaaa
diaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaai
bcaabaaaadaaaaaaegiocaaaacaaaaaabfaaaaaaegaobaaaacaaaaaabbaaaaai
ccaabaaaadaaaaaaegiocaaaacaaaaaabgaaaaaaegaobaaaacaaaaaabbaaaaai
ecaabaaaadaaaaaaegiocaaaacaaaaaabhaaaaaaegaobaaaacaaaaaaaaaaaaah
hcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahicaabaaa
aaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaaaaaaaaaaaakaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaabiaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaa
aaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaa
aoaaaaaakgbkbaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaa
egiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegacbaaaacaaaaaaaaaaaaaj
pcaabaaaadaaaaaafgafbaiaebaaaaaaacaaaaaaegiocaaaacaaaaaaadaaaaaa
diaaaaahpcaabaaaaeaaaaaafgafbaaaaaaaaaaaegaobaaaadaaaaaadiaaaaah
pcaabaaaadaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaaaaaaaaajpcaabaaa
afaaaaaaagaabaiaebaaaaaaacaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaaj
pcaabaaaacaaaaaakgakbaiaebaaaaaaacaaaaaaegiocaaaacaaaaaaaeaaaaaa
dcaaaaajpcaabaaaaeaaaaaaegaobaaaafaaaaaaagaabaaaaaaaaaaaegaobaaa
aeaaaaaadcaaaaajpcaabaaaaaaaaaaaegaobaaaacaaaaaakgakbaaaaaaaaaaa
egaobaaaaeaaaaaadcaaaaajpcaabaaaadaaaaaaegaobaaaafaaaaaaegaobaaa
afaaaaaaegaobaaaadaaaaaadcaaaaajpcaabaaaacaaaaaaegaobaaaacaaaaaa
egaobaaaacaaaaaaegaobaaaadaaaaaaeeaaaaafpcaabaaaadaaaaaaegaobaaa
acaaaaaadcaaaaanpcaabaaaacaaaaaaegaobaaaacaaaaaaegiocaaaacaaaaaa
afaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaa
acaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaaacaaaaaa
diaaaaahpcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaadaaaaaadeaaaaak
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadiaaaaahpcaabaaaaaaaaaaaegaobaaaacaaaaaaegaobaaaaaaaaaaa
diaaaaaihcaabaaaacaaaaaafgafbaaaaaaaaaaaegiccaaaacaaaaaaahaaaaaa
dcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaaaaaaaaaa
egacbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaacaaaaaaaiaaaaaa
kgakbaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
acaaaaaaajaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaahhccabaaa
ahaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
neaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaneaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapaaaaaaneaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaneaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
neaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaaahaiaaaaneaaaaaaagaaaaaa
aaaaaaaaadaaaaaaahaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD7;
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 unity_SHC;
uniform vec4 unity_SHBb;
uniform vec4 unity_SHBg;
uniform vec4 unity_SHBr;
uniform vec4 unity_SHAb;
uniform vec4 unity_SHAg;
uniform vec4 unity_SHAr;
uniform vec4 unity_LightColor[4];
uniform vec4 unity_4LightAtten0;
uniform vec4 unity_4LightPosZ0;
uniform vec4 unity_4LightPosY0;
uniform vec4 unity_4LightPosX0;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _ProjectionParams;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_4;
  tmpvar_4[0] = _Object2World[0].xyz;
  tmpvar_4[1] = _Object2World[1].xyz;
  tmpvar_4[2] = _Object2World[2].xyz;
  vec3 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * (gl_Vertex.xyz - ((_World2Object * tmpvar_3).xyz * unity_Scale.w)));
  vec3 tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_6 = TANGENT.xyz;
  tmpvar_7 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = gl_Normal.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = gl_Normal.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = gl_Normal.z;
  vec4 v_9;
  v_9.x = _Object2World[0].x;
  v_9.y = _Object2World[1].x;
  v_9.z = _Object2World[2].x;
  v_9.w = _Object2World[3].x;
  vec4 tmpvar_10;
  tmpvar_10.xyz = (tmpvar_8 * v_9.xyz);
  tmpvar_10.w = tmpvar_5.x;
  vec4 v_11;
  v_11.x = _Object2World[0].y;
  v_11.y = _Object2World[1].y;
  v_11.z = _Object2World[2].y;
  v_11.w = _Object2World[3].y;
  vec4 tmpvar_12;
  tmpvar_12.xyz = (tmpvar_8 * v_11.xyz);
  tmpvar_12.w = tmpvar_5.y;
  vec4 v_13;
  v_13.x = _Object2World[0].z;
  v_13.y = _Object2World[1].z;
  v_13.z = _Object2World[2].z;
  v_13.w = _Object2World[3].z;
  vec4 tmpvar_14;
  tmpvar_14.xyz = (tmpvar_8 * v_13.xyz);
  tmpvar_14.w = tmpvar_5.z;
  mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * (gl_Normal * unity_Scale.w));
  vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_16;
  vec3 x2_19;
  vec3 x1_20;
  x1_20.x = dot (unity_SHAr, tmpvar_18);
  x1_20.y = dot (unity_SHAg, tmpvar_18);
  x1_20.z = dot (unity_SHAb, tmpvar_18);
  vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_16.xyzz * tmpvar_16.yzzx);
  x2_19.x = dot (unity_SHBr, tmpvar_21);
  x2_19.y = dot (unity_SHBg, tmpvar_21);
  x2_19.z = dot (unity_SHBb, tmpvar_21);
  vec3 tmpvar_22;
  tmpvar_22 = (_Object2World * gl_Vertex).xyz;
  vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - tmpvar_22.x);
  vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - tmpvar_22.y);
  vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - tmpvar_22.z);
  vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z)) * inversesqrt(tmpvar_26))) * (1.0/((1.0 + (tmpvar_26 * unity_4LightAtten0)))));
  vec4 o_28;
  vec4 tmpvar_29;
  tmpvar_29 = (tmpvar_2 * 0.5);
  vec2 tmpvar_30;
  tmpvar_30.x = tmpvar_29.x;
  tmpvar_30.y = (tmpvar_29.y * _ProjectionParams.x);
  o_28.xy = (tmpvar_30 + tmpvar_29.w);
  o_28.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = normalize((tmpvar_8 * (((_World2Object * tmpvar_17).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD2 = (tmpvar_10 * unity_Scale.w);
  xlv_TEXCOORD3 = (tmpvar_12 * unity_Scale.w);
  xlv_TEXCOORD4 = (tmpvar_14 * unity_Scale.w);
  xlv_TEXCOORD5 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD6 = (((x1_20 + x2_19) + (unity_SHC.xyz * ((tmpvar_16.x * tmpvar_16.x) - (tmpvar_16.y * tmpvar_16.y)))) + ((((unity_LightColor[0].xyz * tmpvar_27.x) + (unity_LightColor[1].xyz * tmpvar_27.y)) + (unity_LightColor[2].xyz * tmpvar_27.z)) + (unity_LightColor[3].xyz * tmpvar_27.w)));
  xlv_TEXCOORD7 = o_28;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD7;
varying vec3 xlv_TEXCOORD6;
varying vec3 xlv_TEXCOORD5;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float _Reflective;
uniform float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 tmpvar_2;
  tmpvar_2.x = xlv_TEXCOORD2.w;
  tmpvar_2.y = xlv_TEXCOORD3.w;
  tmpvar_2.z = xlv_TEXCOORD4.w;
  vec3 normal_3;
  normal_3.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_3.z = sqrt(((1.0 - (normal_3.x * normal_3.x)) - (normal_3.y * normal_3.y)));
  vec3 tmpvar_4;
  tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_6;
  tmpvar_6.x = dot (xlv_TEXCOORD2.xyz, normalize(normal_3));
  tmpvar_6.y = dot (xlv_TEXCOORD3.xyz, normalize(normal_3));
  tmpvar_6.z = dot (xlv_TEXCOORD4.xyz, normalize(normal_3));
  vec4 tmpvar_7;
  tmpvar_7.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_6, tmpvar_2) * tmpvar_6)));
  tmpvar_7.w = (tmpvar_5.w * (roughnessV * 7.0));
  vec4 c_8;
  vec3 tmpvar_9;
  tmpvar_9 = normalize(normal_3);
  vec3 tmpvar_10;
  tmpvar_10 = normalize(xlv_TEXCOORD5);
  vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  float tmpvar_12;
  tmpvar_12 = clamp (dot (tmpvar_9, tmpvar_10), 0.0, 1.0);
  float tmpvar_13;
  tmpvar_13 = clamp (dot (tmpvar_9, tmpvar_11), 0.0, 1.0);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, normalize((tmpvar_10 + tmpvar_11))), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = (roughnessV * roughnessV);
  float tmpvar_16;
  tmpvar_16 = (2.0 * tmpvar_12);
  float tmpvar_17;
  tmpvar_17 = (orenNayar * orenNayar);
  float x_18;
  x_18 = dot (tmpvar_11, tmpvar_9);
  float x_19;
  x_19 = dot (tmpvar_10, tmpvar_9);
  float x_20;
  x_20 = dot (tmpvar_11, tmpvar_9);
  float x_21;
  x_21 = dot (tmpvar_10, tmpvar_9);
  float tmpvar_22;
  tmpvar_22 = min ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))));
  c_8.xyz = (((((tmpvar_4 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_12))) * vec3(((1.0 - (0.5 * (tmpvar_17 / (tmpvar_17 + 0.57)))) + (((0.45 * (tmpvar_17 / (tmpvar_17 + 0.09))) * max (0.0, dot ((tmpvar_11 - (tmpvar_9 * dot (tmpvar_11, tmpvar_9))), (tmpvar_10 - (tmpvar_9 * dot (tmpvar_10, tmpvar_9)))))) * (sin(max ((1.5708 - (sign(x_18) * (1.5708 - (sqrt((1.0 - abs(x_18))) * (1.5708 + (abs(x_18) * (-0.214602 + (abs(x_18) * (0.0865667 + (abs(x_18) * -0.0310296)))))))))), (1.5708 - (sign(x_19) * (1.5708 - (sqrt((1.0 - abs(x_19))) * (1.5708 + (abs(x_19) * (-0.214602 + (abs(x_19) * (0.0865667 + (abs(x_19) * -0.0310296)))))))))))) * (sin(tmpvar_22) / cos(tmpvar_22))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_11, tmpvar_9), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_16 * tmpvar_13) / tmpvar_14), ((tmpvar_16 * tmpvar_12) / tmpvar_14)))) * (((1.0/(((4.0 * tmpvar_15) * pow (tmpvar_12, 4.0)))) * exp((((tmpvar_12 * tmpvar_12) - 1.0) / ((tmpvar_15 * tmpvar_12) * tmpvar_12)))) * tmpvar_5.w))) / (max (0.0, (tmpvar_13 * tmpvar_12)) + 0.09))) * tmpvar_5.x) * _LightColor0.xyz)) * (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x * 2.0));
  c_8.w = 1.0;
  c_1.w = c_8.w;
  c_1.xyz = (c_8.xyz + (tmpvar_4 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + ((((textureCubeLod (_Cube, tmpvar_7.xyz, tmpvar_7.w) * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (normalize(xlv_TEXCOORD1), normalize(normal_3)), 0.0)), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * tmpvar_5) * _LightColor0).xyz);
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_4LightPosX0]
Vector 17 [unity_4LightPosY0]
Vector 18 [unity_4LightPosZ0]
Vector 19 [unity_4LightAtten0]
Vector 20 [unity_LightColor0]
Vector 21 [unity_LightColor1]
Vector 22 [unity_LightColor2]
Vector 23 [unity_LightColor3]
Vector 24 [unity_SHAr]
Vector 25 [unity_SHAg]
Vector 26 [unity_SHAb]
Vector 27 [unity_SHBr]
Vector 28 [unity_SHBg]
Vector 29 [unity_SHBb]
Vector 30 [unity_SHC]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 31 [unity_Scale]
Vector 32 [_MainTex_ST]
Vector 33 [_BumpMap_ST]
"vs_3_0
; 101 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
dcl_texcoord5 o6
dcl_texcoord6 o7
dcl_texcoord7 o8
def c34, 1.00000000, 0.00000000, 0.50000000, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c31.w
dp4 r0.x, v0, c5
add r1, -r0.x, c17
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c16
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c34.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c18
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c19
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c34.x
dp4 r2.z, r4, c26
dp4 r2.y, r4, c25
dp4 r2.x, r4, c24
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c34.y
mul r0, r0, r1
mul r1.xyz, r0.y, c21
mad r1.xyz, r0.x, c20, r1
mad r0.xyz, r0.z, c22, r1
mul r1, r4.xyzz, r4.yzzx
mad r0.xyz, r0.w, c23, r0
mul r0.w, r3, r3
mad r0.w, r4.x, r4.x, -r0
dp4 r3.z, r1, c29
dp4 r3.y, r1, c28
dp4 r3.x, r1, c27
add r1.xyz, r2, r3
mov r2.xyz, v1
mul r3.xyz, v2.zxyw, r2.yzxw
mul r4.xyz, r0.w, c30
add r4.xyz, r1, r4
mov r2.xyz, v1
mad r2.xyz, v2.yzxw, r2.zxyw, -r3
mul r3.xyz, r2, v1.w
mov r1.xyz, c12
mov r1.w, c34.x
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c31.w, -v0
add o7.xyz, r4, r0
dp3 r1.y, r2, r3
dp3 r1.x, r2, v1
dp3 r1.z, v2, r2
dp3 r0.w, r1, r1
rsq r1.w, r0.w
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c9
dp4 r4.y, c15, r0
mul o2.xyz, r1.w, r1
mov r1, c8
dp4 r4.x, c15, r1
dp3 r0.y, r3, c4
dp3 r0.w, -r2, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3, r0, c31.w
dp3 r0.y, r3, c5
dp3 r0.w, -r2, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4, r0, c31.w
dp3 r0.y, r3, c6
dp3 r0.w, -r2, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul o5, r0, c31.w
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c34.z
mul r1.y, r1, c13.x
dp3 o6.y, r3, r4
dp3 o6.z, v2, r4
dp3 o6.x, v1, r4
mad o8.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o8.zw, r0
mad o1.zw, v3.xyxy, c33.xyxy, c33
mad o1.xy, v3, c32, c32.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 33 [_BumpMap_ST]
Vector 32 [_MainTex_ST]
Matrix 23 [_Object2World] 4
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Matrix 27 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 3 [_WorldSpaceLightPos0]
Matrix 19 [glstate_matrix_mvp] 4
Vector 7 [unity_4LightAtten0]
Vector 4 [unity_4LightPosX0]
Vector 5 [unity_4LightPosY0]
Vector 6 [unity_4LightPosZ0]
Vector 8 [unity_LightColor0]
Vector 9 [unity_LightColor1]
Vector 10 [unity_LightColor2]
Vector 11 [unity_LightColor3]
Vector 14 [unity_SHAb]
Vector 13 [unity_SHAg]
Vector 12 [unity_SHAr]
Vector 17 [unity_SHBb]
Vector 16 [unity_SHBg]
Vector 15 [unity_SHBr]
Vector 18 [unity_SHC]
Vector 31 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 122.67 (92 instructions), vertex: 32, texture: 0,
//   sequencer: 38,  19 GPRs, 9 threads,
// Performance (if enough threads): ~122 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.
// * Warning: high GPR count may result in poorer than estimated performance.

"vs_360
backbbabaaaaaeeiaaaaafeeaaaaaaaaaaaaaaceaaaaadjiaaaaadmaaaaaaaaa
aaaaaaaaaaaaadhaaaaaaabmaaaaadgdpppoadaaaaaaaabgaaaaaabmaaaaaaaa
aaaaadfmaaaaabneaaacaacbaaabaaaaaaaaaboaaaaaaaaaaaaaabpaaaacaaca
aaabaaaaaaaaaboaaaaaaaaaaaaaabpmaaacaabhaaaeaaaaaaaaacamaaaaaaaa
aaaaacbmaaacaaabaaabaaaaaaaaaboaaaaaaaaaaaaaaccoaaacaaacaaabaaaa
aaaaaboaaaaaaaaaaaaaacdmaaacaablaaaeaaaaaaaaacamaaaaaaaaaaaaacek
aaacaaaaaaabaaaaaaaaacgaaaaaaaaaaaaaachaaaacaaadaaabaaaaaaaaaboa
aaaaaaaaaaaaacifaaacaabdaaaeaaaaaaaaacamaaaaaaaaaaaaacjiaaacaaah
aaabaaaaaaaaaboaaaaaaaaaaaaaacklaaacaaaeaaabaaaaaaaaaboaaaaaaaaa
aaaaaclnaaacaaafaaabaaaaaaaaaboaaaaaaaaaaaaaacmpaaacaaagaaabaaaa
aaaaaboaaaaaaaaaaaaaacobaaacaaaiaaaeaaaaaaaaacpeaaaaaaaaaaaaadae
aaacaaaoaaabaaaaaaaaaboaaaaaaaaaaaaaadapaaacaaanaaabaaaaaaaaaboa
aaaaaaaaaaaaadbkaaacaaamaaabaaaaaaaaaboaaaaaaaaaaaaaadcfaaacaabb
aaabaaaaaaaaaboaaaaaaaaaaaaaaddaaaacaabaaaabaaaaaaaaaboaaaaaaaaa
aaaaaddlaaacaaapaaabaaaaaaaaaboaaaaaaaaaaaaaadegaaacaabcaaabaaaa
aaaaaboaaaaaaaaaaaaaadfaaaacaabpaaabaaaaaaaaaboaaaaaaaaafpechfgn
haengbhafpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhi
fpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaaklklaaadaaadaaaeaaaeaaabaaaa
aaaaaaaafpfahcgpgkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhc
gbgnhdaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgn
gfhcgbfagphdaaklaaabaaadaaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdha
gbgdgfemgjghgihefagphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpdeemgjghgiheebhehegfgodaaahfgogjhehjfpdeemgjghgihefa
gphdfidaaahfgogjhehjfpdeemgjghgihefagphdfjdaaahfgogjhehjfpdeemgj
ghgihefagphdfkdaaahfgogjhehjfpemgjghgiheedgpgmgphcaaklklaaabaaad
aaabaaaeaaaeaaaaaaaaaaaahfgogjhehjfpfdeiebgcaahfgogjhehjfpfdeieb
ghaahfgogjhehjfpfdeiebhcaahfgogjhehjfpfdeiecgcaahfgogjhehjfpfdei
ecghaahfgogjhehjfpfdeiechcaahfgogjhehjfpfdeiedaahfgogjhehjfpfdgd
gbgmgfaahghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaab
aaaaaaaaaaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaeaaaaaafaeaahbaabcaaaaaaaaaaaaaaaaaaaahfaiaaaaaaabaaaaaaae
aaaaaaamaaaaacjaaabaaaakaaaagaalaaaadaamaacafaanaaaapafaaaachbfb
aaadpcfcaaaepdfdaaafpefeaaaghfffaaajhgfgaaakphfhaaaaaadoaaaabadp
aaaabafbaaaabaeoaaaabaepaaaabafaaaaaaadlaaaaaadmaaaabadnaaaabagj
aaaaaadkaaaabaenaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpaaaaaaaaaaaaaa
dpiaaaaaaaaaaaaapaffeaakaaaabcaamcaaaaaaaaaafaaoaaaabcaameaaaaaa
aaaagabdgabjbcaabcaaaaaaaaaagabpgacfbcaabcaaaaaaaaaagaclgadbbcaa
bcaaaaaaaaaagadhgadnbcaabcaaaaaaaaaagaedgaejbcaabcaaaaaaaaaagaep
gaffbcaabcaaaaaaaaaagaflgagbbcaabcaaaaaaaaaadaghaaaaccaaaaaaaaaa
afpigaaaaaaaagiiaaaaaaaaafpicaaaaaaaagiiaaaaaaaaafpjbaaaaaaaaoii
aaaaaaaaafpieaaaaaaaapmiaaaaaaaakiepanaaaabliiedkbagbgbjmiapaaaa
aamgnapiklagbfaamiapaaaaaalbdepiklagbeaamiapaaabaagmnajeklagbdaa
miapiadoaananaaaocababaamiahaaakaamamgmaalbnaaboceibahanaablgmgm
kbacbhiabechaaaiaaleblblcbboadackichanafaagfblebibbbbpbibebhaaah
aalblomgkbbbbiackielaeadaalbgcmaibacbibjkieladaaaalogficobbbacbj
miahaaaiaamamgleclbnadaikiehaaajaablleeckbagbkbjmiahaaakaalelble
clbmaaakmiaoaaakaapmgmimclblaaakmianaaalaamgpaieklagbjajmiahaaam
aalelbleclbmadaimialaaaaabgflobaolbbacaamialaaajaagmgcleklbbbhah
mialaaadaagmgcbaklacbhadbealaaaiaamggcgmkbbbbjadaebeajajaagmgmmg
oaajaiaebeahaaahaalblelbkbafbjadaebcakalaalolpmgpaanaaadmiahaabc
aamagmleclbladammiahaaadaalblemiklagbialmiahaaahaagmlemaklafbiah
bealaaaaaabnbllbobaaacajmialaaafablkblgfklakbpagaeebakaiaagjlolb
paafacaibeacaaaiaagdgjblpaaaafadaebealaiaagjlomgpaafbbaabeahaaam
aelbgcblkbafbjajmiahaaahaamglemaklafbhahaeehalafaegmgcblkbafbiai
mialaaadaagmgfgcklagbhadkiipadagaeblaamdiaadaebjkibpadaoaegmaama
iaadafbikicpadapaelbaaiaiaadagbimiahaaanaeblloleklafbhafmiadaaaf
aalblclaklaabhadkiedadadaamemeidmbahahbjbeepaabaaalehcgmobahahab
miamiaahaanlnlaaocababaamiabiaafaaloloaapabcacaamiaciaafaagdloaa
paaabcaamiaeiaafaaloloaapabcbbaamiadiaaaaalalabkilaecacamiamiaaa
aakmkmagilaecbcbkibbaaaeaadoanecepamahppkmccaaaeaadoanebepanahpp
kmeeaaaeaadoanecepaoahppkiibaaabaakhkhebipbaapabbeacaaabaakhkhgm
kpbabaafaeciajajaagmgmbloaanamadbeaeaaabaakhkhlbkpbabbafaeciakab
aalolomgpaaiaiadbeapaaafaapipimgobapapanaeipakacaapilblbobapaham
miapaaafaajejepiolaoaoafmiapaaacaajemgpiolaoahacfiiiabalaalbmgbl
oaanamibmiadiaahaamgbkbiklaaacaamiapiaacaaaablaakbalbpaamiapiaad
aaaablaakbakbpaamiapiaaeaaaablaakbajbpaamiahiaabaamablaaobaiabaa
miapaaacaajegmaaolagahacmiapaaaaaaaaaapiolagagafgeihababaalologb
oaaeabadmiahaaabaabllemnklabbcabmiapaaaeaaaaaamgilaaahppfibaaaaa
aaaaaagmocaaaaiaficaaaaaaaaaaalbocaaaaiafieaaaaaaaaaaamgocaaaaia
fiiaaaaaaaaaaablocaaaaiamiapaaaaaapiaaaaobacaaaaemipaaadaapilblb
kcaappaeemecacaaaamgblgmobadaaaeemciacacaagmmgmgobadacaeembbaaac
aabllbblobadacaemiaeaaaaaalbgmaaobadaaaakibhacaeaalmmaecibacakal
kiciacaeaamgblicmbaeadalkieoacafaabgpmmaibacaialbeahaaaaaabbmalb
kbaaajafambiafaaaamgmggmobaaadadbeahaaaaaabebamgoaafaaacamihacaa
aamabalboaaaaeadmiahaaaaaamabaaaoaaaacaamiahiaagaalemaaaoaabaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_ProjectionParams]
Vector 465 [_WorldSpaceLightPos0]
Vector 464 [unity_4LightPosX0]
Vector 463 [unity_4LightPosY0]
Vector 462 [unity_4LightPosZ0]
Vector 461 [unity_4LightAtten0]
Vector 460 [unity_LightColor0]
Vector 459 [unity_LightColor1]
Vector 458 [unity_LightColor2]
Vector 457 [unity_LightColor3]
Vector 456 [unity_SHAr]
Vector 455 [unity_SHAg]
Vector 454 [unity_SHAb]
Vector 453 [unity_SHBr]
Vector 452 [unity_SHBg]
Vector 451 [unity_SHBb]
Vector 450 [unity_SHC]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 449 [unity_Scale]
Vector 448 [_MainTex_ST]
Vector 447 [_BumpMap_ST]
"sce_vp_rsx // 87 instructions using 12 registers
[Configuration]
8
0000005741050c00
[Defaults]
1
446 3
000000003f8000003f000000
[Microcode]
1392
00021c6c005d100d8186c0836041fffc00041c6c00400e0c0106c0836041dffc
00029c6c005d300c0186c0836041dffc00031c6c009c120c013fc0c36041dffc
401f9c6c011bf800810040d560607f9c401f9c6c011c0808010400d740619f9c
00001c6c01506e0c010600c360411ffc00001c6c0150620c010600c360405ffc
00009c6c01505e0c010600c360411ffc00009c6c0150520c010600c360405ffc
00011c6c01504e0c010600c360411ffc00011c6c0150420c010600c360405ffc
00019c6c01d0300d8106c0c360403ffc00019c6c01d0200d8106c0c360405ffc
00019c6c01d0100d8106c0c360409ffc00019c6c01d0000d8106c0c360411ffc
00009c6c01d0500d8106c0c360409ffc00009c6c01d0400d8106c0c360403ffc
00011c6c01d0600d8106c0c360409ffc00059c6c01d0a00d8886c0c360405ffc
00059c6c01d0900d8886c0c360409ffc00059c6c01d0800d8886c0c360411ffc
00021c6c0150400c0c8600c360411ffc00001c6c0150600c0c8600c360409ffc
00001c6c0150500c0c8600c360403ffc00049c6c0190a00c0a86c0c360405ffc
00049c6c0190900c0a86c0c360409ffc00049c6c0190800c0a86c0c360411ffc
00029c6c00dce00d8186c0aaa121fffc00031c6c00dd000d8186c0bfe0a1fffc
00039c6c00dcf00d8186c0aaa0a1fffc00051c6c00800243011848436041dffc
00041c6c01000230812188630521dffc401f9c6c0040000d8686c0836041ff80
401f9c6c004000558686c08360407fb800049c6c011c100c12bfc0e30041dffc
00051c6c009be00e06aa80c36041dffc401f9c6c0140020c01060b4360405fb0
401f9c6c01400e0c01060b4360411fb000019c6c0080007f8086c7436041fffc
00051c6c009d202a948000c360409ffc00039c6c0080000d8e86c7436041fffc
00009c6c0080007f80bfc04360409ffc00021c6c0040007f8086c08360409ffc
00021c6c0040002a8086c08360405ffc00019c6c010000000886c64361a1fffc
00031c6c0100000d8c86c64363a1fffc401f9c6c00c000081486c09545219fb8
00039c6c00800e0c10bfc0836041dffc00001c6c0150608c128600c360403ffc
00009c6c0150508c128600c360403ffc00011c6c0150408c128600c360403ffc
00051c6c0140020c0106094360405ffc00051c6c01400e0c1286008360411ffc
00041c6c019c600c0886c0c360405ffc00041c6c019c700c0886c0c360409ffc
00041c6c019c800c0886c0c360411ffc00009c6c010000000880046aa0a09ffc
00021c6c0080000d089a04436041fffc401f9c6c0140000c0e860b4360409fb0
00019c6c0100002a8086c54361a1fffc00029c6c0100000d8a86c5436321fffc
00051c6c0140000c1286074360409ffc00031c6c01dc300d8886c0c360405ffc
00031c6c01dc400d8886c0c360409ffc00031c6c01dc500d8886c0c360411ffc
00001c6c0150600c0e8600c360409ffc00021c6c00c0000c1086c0830321dffc
00031c6c009c202a828600c36041dffc00041c6c00c0000c0c86c0830221dffc
00009c6c2150500c0e8600c002b0827c00011c6c2150400c0e8600caa2a8827c
00031c6c209cd00d8a86c0d542a5e27c00039c6c2140000c14860a5fe2a3027c
00029c6c00dbe02a8186c0836321fffc401f9c6c209c100d84bfc0c003b1e324
401f9c6c109c100d82bfc0c002b1e128401f9c6c109c100d80bfc0caa2a9e12c
00001c6c1080000d8686c45542a5e17c00001c6c129be00d808000dfe2a3e17c
401f9c6c008000000c860a436041dfa000001c6c0080000d8086c2436041fffc
00009c6c009cb02a808600c36041dffc00009c6c011cc000008600c300a1dffc
00001c6c011ca055008600c300a1dffc00001c6c011c907f808600c30021dffc
401f9c6c00c0000c1086c0830021dfb5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 400 // 400 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 32 [unity_4LightPosX0] 4
Vector 48 [unity_4LightPosY0] 4
Vector 64 [unity_4LightPosZ0] 4
Vector 80 [unity_4LightAtten0] 4
Vector 96 [unity_LightColor0] 4
Vector 112 [unity_LightColor1] 4
Vector 128 [unity_LightColor2] 4
Vector 144 [unity_LightColor3] 4
Vector 288 [unity_SHAr] 4
Vector 304 [unity_SHAg] 4
Vector 320 [unity_SHAb] 4
Vector 336 [unity_SHBr] 4
Vector 352 [unity_SHBg] 4
Vector 368 [unity_SHBb] 4
Vector 384 [unity_SHC] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 99 instructions, 7 temp regs, 0 temp arrays:
// ALU 55 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedejmhklhkhpokpdejbbmbcnbliebaojfhabaaaaaagaapaaaaadaaaaaa
cmaaaaaapeaaaaaapeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheopiaaaaaaajaaaaaa
aiaaaaaaoaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaomaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaomaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaomaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaomaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaomaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaaomaaaaaaafaaaaaaaaaaaaaa
adaaaaaaagaaaaaaahaiaaaaomaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaa
ahaiaaaaomaaaaaaahaaaaaaaaaaaaaaadaaaaaaaiaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcgeanaaaaeaaaabaa
fjadaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaa
gfaaaaadhccabaaaagaaaaaagfaaaaadhccabaaaahaaaaaagfaaaaadpccabaaa
aiaaaaaagiaaaaacahaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahbcaabaaa
acaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaacaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaahhcaabaaaadaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaadaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaadaaaaaadiaaaaahhcaabaaaadaaaaaa
egacbaaaadaaaaaapgbpbaaaabaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaa
adaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaah
hccabaaaacaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadiaaaaajhcaabaaa
acaaaaaafgafbaiaebaaaaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaal
lcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaiaebaaaaaaabaaaaaa
egaibaaaacaaaaaadcaaaaallcaabaaaabaaaaaaegiicaaaadaaaaaaaoaaaaaa
kgakbaiaebaaaaaaabaaaaaaegambaaaabaaaaaadgaaaaaficaabaaaacaaaaaa
akaabaaaabaaaaaadgaaaaagbcaabaaaaeaaaaaaakiacaaaadaaaaaaamaaaaaa
dgaaaaagccaabaaaaeaaaaaaakiacaaaadaaaaaaanaaaaaadgaaaaagecaabaaa
aeaaaaaaakiacaaaadaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaa
adaaaaaaegacbaaaaeaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaaeaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
aeaaaaaadiaaaaaipccabaaaadaaaaaaegaobaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadgaaaaaficaabaaaacaaaaaabkaabaaaabaaaaaadgaaaaagbcaabaaa
aeaaaaaabkiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaaeaaaaaabkiacaaa
adaaaaaaanaaaaaadgaaaaagecaabaaaaeaaaaaabkiacaaaadaaaaaaaoaaaaaa
baaaaaahccaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaaaeaaaaaabaaaaaah
bcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaaeaaaaaabaaaaaahecaabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaaipccabaaaaeaaaaaa
egaobaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadgaaaaagbcaabaaaacaaaaaa
ckiacaaaadaaaaaaamaaaaaadgaaaaagccaabaaaacaaaaaackiacaaaadaaaaaa
anaaaaaadgaaaaagecaabaaaacaaaaaackiacaaaadaaaaaaaoaaaaaabaaaaaah
ccaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaipccabaaaafaaaaaaegaobaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaa
agaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaagaaaaaa
egbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaagaaaaaaegbcbaaa
acaaaaaaegacbaaaabaaaaaadgaaaaaficaabaaaabaaaaaaabeaaaaaaaaaiadp
diaaaaaihcaabaaaacaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
diaaaaaihcaabaaaadaaaaaafgafbaaaacaaaaaaegiccaaaadaaaaaaanaaaaaa
dcaaaaaklcaabaaaacaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaacaaaaaa
egaibaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaacaaaaaaegadbaaaacaaaaaabbaaaaaibcaabaaaacaaaaaaegiocaaa
acaaaaaabcaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaa
acaaaaaabdaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaa
acaaaaaabeaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaa
abaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaa
bfaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaa
bgaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaa
bhaaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
egacbaaaaeaaaaaadiaaaaahicaabaaaabaaaaaabkaabaaaabaaaaaabkaabaaa
abaaaaaadcaaaaakicaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaa
biaaaaaapgapbaaaabaaaaaaegacbaaaacaaaaaadiaaaaaihcaabaaaadaaaaaa
fgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaaadaaaaaa
egiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaadaaaaaadcaaaaak
hcaabaaaadaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaa
adaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaa
aaaaaaaaegacbaaaadaaaaaaaaaaaaajpcaabaaaaeaaaaaafgafbaiaebaaaaaa
adaaaaaaegiocaaaacaaaaaaadaaaaaadiaaaaahpcaabaaaafaaaaaafgafbaaa
abaaaaaaegaobaaaaeaaaaaadiaaaaahpcaabaaaaeaaaaaaegaobaaaaeaaaaaa
egaobaaaaeaaaaaaaaaaaaajpcaabaaaagaaaaaaagaabaiaebaaaaaaadaaaaaa
egiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaakgakbaiaebaaaaaa
adaaaaaaegiocaaaacaaaaaaaeaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaa
agaaaaaaagaabaaaabaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaabaaaaaa
egaobaaaadaaaaaakgakbaaaabaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaa
aeaaaaaaegaobaaaagaaaaaaegaobaaaagaaaaaaegaobaaaaeaaaaaadcaaaaaj
pcaabaaaadaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaaegaobaaaaeaaaaaa
eeaaaaafpcaabaaaaeaaaaaaegaobaaaadaaaaaadcaaaaanpcaabaaaadaaaaaa
egaobaaaadaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpaoaaaaakpcaabaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpegaobaaaadaaaaaadiaaaaahpcaabaaaabaaaaaaegaobaaa
abaaaaaaegaobaaaaeaaaaaadeaaaaakpcaabaaaabaaaaaaegaobaaaabaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaaabaaaaaa
egaobaaaadaaaaaaegaobaaaabaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaa
abaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaa
acaaaaaaagaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaabaaaaaaegacbaaaadaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaaaaaaaaahhccabaaaahaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaiaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaaiaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize((tmpvar_18 * (((_World2Object * tmpvar_31).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = tmpvar_29;
  mediump vec3 tmpvar_34;
  mediump vec4 normal_35;
  normal_35 = tmpvar_33;
  highp float vC_36;
  mediump vec3 x3_37;
  mediump vec3 x2_38;
  mediump vec3 x1_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAr, normal_35);
  x1_39.x = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAg, normal_35);
  x1_39.y = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAb, normal_35);
  x1_39.z = tmpvar_42;
  mediump vec4 tmpvar_43;
  tmpvar_43 = (normal_35.xyzz * normal_35.yzzx);
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBr, tmpvar_43);
  x2_38.x = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBg, tmpvar_43);
  x2_38.y = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBb, tmpvar_43);
  x2_38.z = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y));
  vC_36 = tmpvar_47;
  highp vec3 tmpvar_48;
  tmpvar_48 = (unity_SHC.xyz * vC_36);
  x3_37 = tmpvar_48;
  tmpvar_34 = ((x1_39 + x2_38) + x3_37);
  shlight_3 = tmpvar_34;
  tmpvar_10 = shlight_3;
  highp vec3 tmpvar_49;
  tmpvar_49 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_50;
  tmpvar_50 = (unity_4LightPosX0 - tmpvar_49.x);
  highp vec4 tmpvar_51;
  tmpvar_51 = (unity_4LightPosY0 - tmpvar_49.y);
  highp vec4 tmpvar_52;
  tmpvar_52 = (unity_4LightPosZ0 - tmpvar_49.z);
  highp vec4 tmpvar_53;
  tmpvar_53 = (((tmpvar_50 * tmpvar_50) + (tmpvar_51 * tmpvar_51)) + (tmpvar_52 * tmpvar_52));
  highp vec4 tmpvar_54;
  tmpvar_54 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_50 * tmpvar_29.x) + (tmpvar_51 * tmpvar_29.y)) + (tmpvar_52 * tmpvar_29.z)) * inversesqrt(tmpvar_53))) * (1.0/((1.0 + (tmpvar_53 * unity_4LightAtten0)))));
  highp vec3 tmpvar_55;
  tmpvar_55 = (tmpvar_10 + ((((unity_LightColor[0].xyz * tmpvar_54.x) + (unity_LightColor[1].xyz * tmpvar_54.y)) + (unity_LightColor[2].xyz * tmpvar_54.z)) + (unity_LightColor[3].xyz * tmpvar_54.w)));
  tmpvar_10 = tmpvar_55;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float tmpvar_33;
  mediump float lightShadowDataX_34;
  highp float dist_35;
  lowp float tmpvar_36;
  tmpvar_36 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_35 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = _LightShadowData.x;
  lightShadowDataX_34 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (float((dist_35 > (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w))), lightShadowDataX_34);
  tmpvar_33 = tmpvar_38;
  mediump vec3 lightDir_39;
  lightDir_39 = xlv_TEXCOORD5;
  mediump vec3 viewDir_40;
  viewDir_40 = xlv_TEXCOORD1;
  mediump float atten_41;
  atten_41 = tmpvar_33;
  mediump vec4 c_42;
  mediump float B_43;
  mediump float A_44;
  highp float rough_sq_45;
  mediump vec3 Rs_numerator_46;
  highp float roughness_c_47;
  highp float roughness_b_48;
  highp float roughness_a_49;
  mediump float roughness_50;
  highp float geo_denominator_51;
  highp float geo_numerator_52;
  mediump vec3 n_53;
  lowp vec3 tmpvar_54;
  tmpvar_54 = normalize(tmpvar_18);
  n_53 = tmpvar_54;
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(lightDir_39);
  mediump vec3 tmpvar_56;
  tmpvar_56 = normalize(viewDir_40);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_53, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (n_53, tmpvar_56), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = clamp (dot (tmpvar_56, normalize((tmpvar_55 + tmpvar_56))), 0.0, 1.0);
  mediump float tmpvar_60;
  tmpvar_60 = (roughnessV * roughnessV);
  mediump float tmpvar_61;
  tmpvar_61 = (2.0 * tmpvar_57);
  geo_numerator_52 = tmpvar_61;
  geo_denominator_51 = tmpvar_59;
  mediump float tmpvar_62;
  tmpvar_62 = (1.0/(((4.0 * tmpvar_60) * pow (tmpvar_57, 4.0))));
  roughness_a_49 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_57 * tmpvar_57) - 1.0);
  roughness_b_48 = tmpvar_63;
  mediump float tmpvar_64;
  tmpvar_64 = ((tmpvar_60 * tmpvar_57) * tmpvar_57);
  roughness_c_47 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = ((roughness_a_49 * exp((roughness_b_48 / roughness_c_47))) * tmpvar_13);
  roughness_50 = tmpvar_65;
  mediump float tmpvar_66;
  tmpvar_66 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_56, n_53), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_67;
  tmpvar_67 = vec3(((tmpvar_66 * min (1.0, min (((geo_numerator_52 * tmpvar_58) / geo_denominator_51), ((geo_numerator_52 * tmpvar_57) / geo_denominator_51)))) * roughness_50));
  Rs_numerator_46 = tmpvar_67;
  mediump float tmpvar_68;
  tmpvar_68 = (orenNayar * orenNayar);
  rough_sq_45 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (1.0 - (0.5 * (rough_sq_45 / (rough_sq_45 + 0.57))));
  A_44 = tmpvar_69;
  highp float tmpvar_70;
  tmpvar_70 = (0.45 * (rough_sq_45 / (rough_sq_45 + 0.09)));
  B_43 = tmpvar_70;
  mediump float x_71;
  x_71 = dot (tmpvar_56, n_53);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_53);
  mediump float x_73;
  x_73 = dot (tmpvar_56, n_53);
  mediump float x_74;
  x_74 = dot (tmpvar_55, n_53);
  mediump float tmpvar_75;
  tmpvar_75 = min ((1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))), (1.5708 - (sign(x_74) * (1.5708 - (sqrt((1.0 - abs(x_74))) * (1.5708 + (abs(x_74) * (-0.214602 + (abs(x_74) * (0.0865667 + (abs(x_74) * -0.0310296)))))))))));
  c_42.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_57))) * vec3((A_44 + ((B_43 * max (0.0, dot ((tmpvar_56 - (n_53 * dot (tmpvar_56, n_53))), (tmpvar_55 - (n_53 * dot (tmpvar_55, n_53)))))) * (sin(max ((1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))), (1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))))) * (sin(tmpvar_75) / cos(tmpvar_75))))))) + (((cSpecular.xyz * (Rs_numerator_46 / (max (0.0, (tmpvar_58 * tmpvar_57)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_41 * 2.0));
  c_42.w = 1.0;
  c_1 = c_42;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _ProjectionParams;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (gl_ModelViewProjectionMatrix * _glesVertex);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_15 * (_glesVertex.xyz - ((_World2Object * tmpvar_14).xyz * unity_Scale.w)));
  highp vec3 tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_17 = tmpvar_1.xyz;
  tmpvar_18 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_19;
  tmpvar_19[0].x = tmpvar_17.x;
  tmpvar_19[0].y = tmpvar_18.x;
  tmpvar_19[0].z = tmpvar_2.x;
  tmpvar_19[1].x = tmpvar_17.y;
  tmpvar_19[1].y = tmpvar_18.y;
  tmpvar_19[1].z = tmpvar_2.y;
  tmpvar_19[2].x = tmpvar_17.z;
  tmpvar_19[2].y = tmpvar_18.z;
  tmpvar_19[2].z = tmpvar_2.z;
  vec4 v_20;
  v_20.x = _Object2World[0].x;
  v_20.y = _Object2World[1].x;
  v_20.z = _Object2World[2].x;
  v_20.w = _Object2World[3].x;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = (tmpvar_19 * v_20.xyz);
  tmpvar_21.w = tmpvar_16.x;
  highp vec4 tmpvar_22;
  tmpvar_22 = (tmpvar_21 * unity_Scale.w);
  tmpvar_6 = tmpvar_22;
  vec4 v_23;
  v_23.x = _Object2World[0].y;
  v_23.y = _Object2World[1].y;
  v_23.z = _Object2World[2].y;
  v_23.w = _Object2World[3].y;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = (tmpvar_19 * v_23.xyz);
  tmpvar_24.w = tmpvar_16.y;
  highp vec4 tmpvar_25;
  tmpvar_25 = (tmpvar_24 * unity_Scale.w);
  tmpvar_7 = tmpvar_25;
  vec4 v_26;
  v_26.x = _Object2World[0].z;
  v_26.y = _Object2World[1].z;
  v_26.z = _Object2World[2].z;
  v_26.w = _Object2World[3].z;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = (tmpvar_19 * v_26.xyz);
  tmpvar_27.w = tmpvar_16.z;
  highp vec4 tmpvar_28;
  tmpvar_28 = (tmpvar_27 * unity_Scale.w);
  tmpvar_8 = tmpvar_28;
  mat3 tmpvar_29;
  tmpvar_29[0] = _Object2World[0].xyz;
  tmpvar_29[1] = _Object2World[1].xyz;
  tmpvar_29[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_29 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_31;
  tmpvar_31 = (tmpvar_19 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_33;
  tmpvar_33 = normalize((tmpvar_19 * (((_World2Object * tmpvar_32).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_30;
  mediump vec3 tmpvar_35;
  mediump vec4 normal_36;
  normal_36 = tmpvar_34;
  highp float vC_37;
  mediump vec3 x3_38;
  mediump vec3 x2_39;
  mediump vec3 x1_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAr, normal_36);
  x1_40.x = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAg, normal_36);
  x1_40.y = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = dot (unity_SHAb, normal_36);
  x1_40.z = tmpvar_43;
  mediump vec4 tmpvar_44;
  tmpvar_44 = (normal_36.xyzz * normal_36.yzzx);
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBr, tmpvar_44);
  x2_39.x = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBg, tmpvar_44);
  x2_39.y = tmpvar_46;
  highp float tmpvar_47;
  tmpvar_47 = dot (unity_SHBb, tmpvar_44);
  x2_39.z = tmpvar_47;
  mediump float tmpvar_48;
  tmpvar_48 = ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y));
  vC_37 = tmpvar_48;
  highp vec3 tmpvar_49;
  tmpvar_49 = (unity_SHC.xyz * vC_37);
  x3_38 = tmpvar_49;
  tmpvar_35 = ((x1_40 + x2_39) + x3_38);
  shlight_3 = tmpvar_35;
  tmpvar_10 = shlight_3;
  highp vec3 tmpvar_50;
  tmpvar_50 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_51;
  tmpvar_51 = (unity_4LightPosX0 - tmpvar_50.x);
  highp vec4 tmpvar_52;
  tmpvar_52 = (unity_4LightPosY0 - tmpvar_50.y);
  highp vec4 tmpvar_53;
  tmpvar_53 = (unity_4LightPosZ0 - tmpvar_50.z);
  highp vec4 tmpvar_54;
  tmpvar_54 = (((tmpvar_51 * tmpvar_51) + (tmpvar_52 * tmpvar_52)) + (tmpvar_53 * tmpvar_53));
  highp vec4 tmpvar_55;
  tmpvar_55 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_51 * tmpvar_30.x) + (tmpvar_52 * tmpvar_30.y)) + (tmpvar_53 * tmpvar_30.z)) * inversesqrt(tmpvar_54))) * (1.0/((1.0 + (tmpvar_54 * unity_4LightAtten0)))));
  highp vec3 tmpvar_56;
  tmpvar_56 = (tmpvar_10 + ((((unity_LightColor[0].xyz * tmpvar_55.x) + (unity_LightColor[1].xyz * tmpvar_55.y)) + (unity_LightColor[2].xyz * tmpvar_55.z)) + (unity_LightColor[3].xyz * tmpvar_55.w)));
  tmpvar_10 = tmpvar_56;
  highp vec4 o_57;
  highp vec4 tmpvar_58;
  tmpvar_58 = (tmpvar_11 * 0.5);
  highp vec2 tmpvar_59;
  tmpvar_59.x = tmpvar_58.x;
  tmpvar_59.y = (tmpvar_58.y * _ProjectionParams.x);
  o_57.xy = (tmpvar_59 + tmpvar_58.w);
  o_57.zw = tmpvar_11.zw;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = o_57;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 normal_18;
  normal_18.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_18.z = sqrt(((1.0 - (normal_18.x * normal_18.x)) - (normal_18.y * normal_18.y)));
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(normal_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(normal_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float tmpvar_33;
  tmpvar_33 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  mediump vec3 lightDir_34;
  lightDir_34 = xlv_TEXCOORD5;
  mediump vec3 viewDir_35;
  viewDir_35 = xlv_TEXCOORD1;
  mediump float atten_36;
  atten_36 = tmpvar_33;
  mediump vec4 c_37;
  mediump float B_38;
  mediump float A_39;
  highp float rough_sq_40;
  mediump vec3 Rs_numerator_41;
  highp float roughness_c_42;
  highp float roughness_b_43;
  highp float roughness_a_44;
  mediump float roughness_45;
  highp float geo_denominator_46;
  highp float geo_numerator_47;
  mediump vec3 n_48;
  lowp vec3 tmpvar_49;
  tmpvar_49 = normalize(normal_18);
  n_48 = tmpvar_49;
  mediump vec3 tmpvar_50;
  tmpvar_50 = normalize(lightDir_34);
  mediump vec3 tmpvar_51;
  tmpvar_51 = normalize(viewDir_35);
  mediump float tmpvar_52;
  tmpvar_52 = clamp (dot (n_48, tmpvar_50), 0.0, 1.0);
  mediump float tmpvar_53;
  tmpvar_53 = clamp (dot (n_48, tmpvar_51), 0.0, 1.0);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (tmpvar_51, normalize((tmpvar_50 + tmpvar_51))), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = (roughnessV * roughnessV);
  mediump float tmpvar_56;
  tmpvar_56 = (2.0 * tmpvar_52);
  geo_numerator_47 = tmpvar_56;
  geo_denominator_46 = tmpvar_54;
  mediump float tmpvar_57;
  tmpvar_57 = (1.0/(((4.0 * tmpvar_55) * pow (tmpvar_52, 4.0))));
  roughness_a_44 = tmpvar_57;
  mediump float tmpvar_58;
  tmpvar_58 = ((tmpvar_52 * tmpvar_52) - 1.0);
  roughness_b_43 = tmpvar_58;
  mediump float tmpvar_59;
  tmpvar_59 = ((tmpvar_55 * tmpvar_52) * tmpvar_52);
  roughness_c_42 = tmpvar_59;
  highp float tmpvar_60;
  tmpvar_60 = ((roughness_a_44 * exp((roughness_b_43 / roughness_c_42))) * tmpvar_13);
  roughness_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_51, n_48), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_62;
  tmpvar_62 = vec3(((tmpvar_61 * min (1.0, min (((geo_numerator_47 * tmpvar_53) / geo_denominator_46), ((geo_numerator_47 * tmpvar_52) / geo_denominator_46)))) * roughness_45));
  Rs_numerator_41 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = (orenNayar * orenNayar);
  rough_sq_40 = tmpvar_63;
  highp float tmpvar_64;
  tmpvar_64 = (1.0 - (0.5 * (rough_sq_40 / (rough_sq_40 + 0.57))));
  A_39 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = (0.45 * (rough_sq_40 / (rough_sq_40 + 0.09)));
  B_38 = tmpvar_65;
  mediump float x_66;
  x_66 = dot (tmpvar_51, n_48);
  mediump float x_67;
  x_67 = dot (tmpvar_50, n_48);
  mediump float x_68;
  x_68 = dot (tmpvar_51, n_48);
  mediump float x_69;
  x_69 = dot (tmpvar_50, n_48);
  mediump float tmpvar_70;
  tmpvar_70 = min ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))));
  c_37.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_52))) * vec3((A_39 + ((B_38 * max (0.0, dot ((tmpvar_51 - (n_48 * dot (tmpvar_51, n_48))), (tmpvar_50 - (n_48 * dot (tmpvar_50, n_48)))))) * (sin(max ((1.5708 - (sign(x_66) * (1.5708 - (sqrt((1.0 - abs(x_66))) * (1.5708 + (abs(x_66) * (-0.214602 + (abs(x_66) * (0.0865667 + (abs(x_66) * -0.0310296)))))))))), (1.5708 - (sign(x_67) * (1.5708 - (sqrt((1.0 - abs(x_67))) * (1.5708 + (abs(x_67) * (-0.214602 + (abs(x_67) * (0.0865667 + (abs(x_67) * -0.0310296)))))))))))) * (sin(tmpvar_70) / cos(tmpvar_70))))))) + (((cSpecular.xyz * (Rs_numerator_41 / (max (0.0, (tmpvar_53 * tmpvar_52)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_36 * 2.0));
  c_37.w = 1.0;
  c_1 = c_37;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize((tmpvar_18 * (((_World2Object * tmpvar_30).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_33;
  mediump vec4 normal_34;
  normal_34 = tmpvar_32;
  highp float vC_35;
  mediump vec3 x3_36;
  mediump vec3 x2_37;
  mediump vec3 x1_38;
  highp float tmpvar_39;
  tmpvar_39 = dot (unity_SHAr, normal_34);
  x1_38.x = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAg, normal_34);
  x1_38.y = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAb, normal_34);
  x1_38.z = tmpvar_41;
  mediump vec4 tmpvar_42;
  tmpvar_42 = (normal_34.xyzz * normal_34.yzzx);
  highp float tmpvar_43;
  tmpvar_43 = dot (unity_SHBr, tmpvar_42);
  x2_37.x = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBg, tmpvar_42);
  x2_37.y = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBb, tmpvar_42);
  x2_37.z = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y));
  vC_35 = tmpvar_46;
  highp vec3 tmpvar_47;
  tmpvar_47 = (unity_SHC.xyz * vC_35);
  x3_36 = tmpvar_47;
  tmpvar_33 = ((x1_38 + x2_37) + x3_36);
  shlight_3 = tmpvar_33;
  tmpvar_10 = shlight_3;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float shadow_33;
  lowp float tmpvar_34;
  tmpvar_34 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  highp float tmpvar_35;
  tmpvar_35 = (_LightShadowData.x + (tmpvar_34 * (1.0 - _LightShadowData.x)));
  shadow_33 = tmpvar_35;
  mediump vec3 lightDir_36;
  lightDir_36 = xlv_TEXCOORD5;
  mediump vec3 viewDir_37;
  viewDir_37 = xlv_TEXCOORD1;
  mediump float atten_38;
  atten_38 = shadow_33;
  mediump vec4 c_39;
  mediump float B_40;
  mediump float A_41;
  highp float rough_sq_42;
  mediump vec3 Rs_numerator_43;
  highp float roughness_c_44;
  highp float roughness_b_45;
  highp float roughness_a_46;
  mediump float roughness_47;
  highp float geo_denominator_48;
  highp float geo_numerator_49;
  mediump vec3 n_50;
  lowp vec3 tmpvar_51;
  tmpvar_51 = normalize(tmpvar_18);
  n_50 = tmpvar_51;
  mediump vec3 tmpvar_52;
  tmpvar_52 = normalize(lightDir_36);
  mediump vec3 tmpvar_53;
  tmpvar_53 = normalize(viewDir_37);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (n_50, tmpvar_52), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = clamp (dot (n_50, tmpvar_53), 0.0, 1.0);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (tmpvar_53, normalize((tmpvar_52 + tmpvar_53))), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = (roughnessV * roughnessV);
  mediump float tmpvar_58;
  tmpvar_58 = (2.0 * tmpvar_54);
  geo_numerator_49 = tmpvar_58;
  geo_denominator_48 = tmpvar_56;
  mediump float tmpvar_59;
  tmpvar_59 = (1.0/(((4.0 * tmpvar_57) * pow (tmpvar_54, 4.0))));
  roughness_a_46 = tmpvar_59;
  mediump float tmpvar_60;
  tmpvar_60 = ((tmpvar_54 * tmpvar_54) - 1.0);
  roughness_b_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = ((tmpvar_57 * tmpvar_54) * tmpvar_54);
  roughness_c_44 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = ((roughness_a_46 * exp((roughness_b_45 / roughness_c_44))) * tmpvar_13);
  roughness_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_53, n_50), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_64;
  tmpvar_64 = vec3(((tmpvar_63 * min (1.0, min (((geo_numerator_49 * tmpvar_55) / geo_denominator_48), ((geo_numerator_49 * tmpvar_54) / geo_denominator_48)))) * roughness_47));
  Rs_numerator_43 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = (orenNayar * orenNayar);
  rough_sq_42 = tmpvar_65;
  highp float tmpvar_66;
  tmpvar_66 = (1.0 - (0.5 * (rough_sq_42 / (rough_sq_42 + 0.57))));
  A_41 = tmpvar_66;
  highp float tmpvar_67;
  tmpvar_67 = (0.45 * (rough_sq_42 / (rough_sq_42 + 0.09)));
  B_40 = tmpvar_67;
  mediump float x_68;
  x_68 = dot (tmpvar_53, n_50);
  mediump float x_69;
  x_69 = dot (tmpvar_52, n_50);
  mediump float x_70;
  x_70 = dot (tmpvar_53, n_50);
  mediump float x_71;
  x_71 = dot (tmpvar_52, n_50);
  mediump float tmpvar_72;
  tmpvar_72 = min ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))));
  c_39.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_54))) * vec3((A_41 + ((B_40 * max (0.0, dot ((tmpvar_53 - (n_50 * dot (tmpvar_53, n_50))), (tmpvar_52 - (n_50 * dot (tmpvar_52, n_50)))))) * (sin(max ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))))) * (sin(tmpvar_72) / cos(tmpvar_72))))))) + (((cSpecular.xyz * (Rs_numerator_43 / (max (0.0, (tmpvar_55 * tmpvar_54)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_38 * 2.0));
  c_39.w = 1.0;
  c_1 = c_39;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;
varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  lowp vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_8;
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_glesVertex.xyz - ((_World2Object * tmpvar_10).xyz * unity_Scale.w)));
  highp vec3 tmpvar_13;
  highp vec3 tmpvar_14;
  tmpvar_13 = tmpvar_1.xyz;
  tmpvar_14 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_15;
  tmpvar_15[0].x = tmpvar_13.x;
  tmpvar_15[0].y = tmpvar_14.x;
  tmpvar_15[0].z = tmpvar_2.x;
  tmpvar_15[1].x = tmpvar_13.y;
  tmpvar_15[1].y = tmpvar_14.y;
  tmpvar_15[1].z = tmpvar_2.y;
  tmpvar_15[2].x = tmpvar_13.z;
  tmpvar_15[2].y = tmpvar_14.z;
  tmpvar_15[2].z = tmpvar_2.z;
  vec4 v_16;
  v_16.x = _Object2World[0].x;
  v_16.y = _Object2World[1].x;
  v_16.z = _Object2World[2].x;
  v_16.w = _Object2World[3].x;
  highp vec4 tmpvar_17;
  tmpvar_17.xyz = (tmpvar_15 * v_16.xyz);
  tmpvar_17.w = tmpvar_12.x;
  highp vec4 tmpvar_18;
  tmpvar_18 = (tmpvar_17 * unity_Scale.w);
  tmpvar_5 = tmpvar_18;
  vec4 v_19;
  v_19.x = _Object2World[0].y;
  v_19.y = _Object2World[1].y;
  v_19.z = _Object2World[2].y;
  v_19.w = _Object2World[3].y;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_15 * v_19.xyz);
  tmpvar_20.w = tmpvar_12.y;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].z;
  v_22.y = _Object2World[1].z;
  v_22.z = _Object2World[2].z;
  v_22.w = _Object2World[3].z;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_15 * v_22.xyz);
  tmpvar_23.w = tmpvar_12.z;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  highp vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_26;
  tmpvar_26 = normalize((tmpvar_15 * (((_World2Object * tmpvar_25).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_4 = tmpvar_26;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD5 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD6 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD6;
varying highp vec2 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform sampler2D unity_Lightmap;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 _Color;
uniform sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float shadow_33;
  lowp float tmpvar_34;
  tmpvar_34 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  highp float tmpvar_35;
  tmpvar_35 = (_LightShadowData.x + (tmpvar_34 * (1.0 - _LightShadowData.x)));
  shadow_33 = tmpvar_35;
  c_1.xyz = (tmpvar_11 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD5).xyz), vec3((shadow_33 * 2.0))));
  c_1.w = 0.0;
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "VERTEXLIGHT_ON" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 unity_SHC;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosX0;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  mediump vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  lowp vec4 tmpvar_8;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_11;
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_4.zw = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_14 * (_glesVertex.xyz - ((_World2Object * tmpvar_13).xyz * unity_Scale.w)));
  highp vec3 tmpvar_16;
  highp vec3 tmpvar_17;
  tmpvar_16 = tmpvar_1.xyz;
  tmpvar_17 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_18;
  tmpvar_18[0].x = tmpvar_16.x;
  tmpvar_18[0].y = tmpvar_17.x;
  tmpvar_18[0].z = tmpvar_2.x;
  tmpvar_18[1].x = tmpvar_16.y;
  tmpvar_18[1].y = tmpvar_17.y;
  tmpvar_18[1].z = tmpvar_2.y;
  tmpvar_18[2].x = tmpvar_16.z;
  tmpvar_18[2].y = tmpvar_17.z;
  tmpvar_18[2].z = tmpvar_2.z;
  vec4 v_19;
  v_19.x = _Object2World[0].x;
  v_19.y = _Object2World[1].x;
  v_19.z = _Object2World[2].x;
  v_19.w = _Object2World[3].x;
  highp vec4 tmpvar_20;
  tmpvar_20.xyz = (tmpvar_18 * v_19.xyz);
  tmpvar_20.w = tmpvar_15.x;
  highp vec4 tmpvar_21;
  tmpvar_21 = (tmpvar_20 * unity_Scale.w);
  tmpvar_6 = tmpvar_21;
  vec4 v_22;
  v_22.x = _Object2World[0].y;
  v_22.y = _Object2World[1].y;
  v_22.z = _Object2World[2].y;
  v_22.w = _Object2World[3].y;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = (tmpvar_18 * v_22.xyz);
  tmpvar_23.w = tmpvar_15.y;
  highp vec4 tmpvar_24;
  tmpvar_24 = (tmpvar_23 * unity_Scale.w);
  tmpvar_7 = tmpvar_24;
  vec4 v_25;
  v_25.x = _Object2World[0].z;
  v_25.y = _Object2World[1].z;
  v_25.z = _Object2World[2].z;
  v_25.w = _Object2World[3].z;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = (tmpvar_18 * v_25.xyz);
  tmpvar_26.w = tmpvar_15.z;
  highp vec4 tmpvar_27;
  tmpvar_27 = (tmpvar_26 * unity_Scale.w);
  tmpvar_8 = tmpvar_27;
  mat3 tmpvar_28;
  tmpvar_28[0] = _Object2World[0].xyz;
  tmpvar_28[1] = _Object2World[1].xyz;
  tmpvar_28[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_29;
  tmpvar_29 = (tmpvar_28 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_18 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_9 = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize((tmpvar_18 * (((_World2Object * tmpvar_31).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = tmpvar_29;
  mediump vec3 tmpvar_34;
  mediump vec4 normal_35;
  normal_35 = tmpvar_33;
  highp float vC_36;
  mediump vec3 x3_37;
  mediump vec3 x2_38;
  mediump vec3 x1_39;
  highp float tmpvar_40;
  tmpvar_40 = dot (unity_SHAr, normal_35);
  x1_39.x = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = dot (unity_SHAg, normal_35);
  x1_39.y = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = dot (unity_SHAb, normal_35);
  x1_39.z = tmpvar_42;
  mediump vec4 tmpvar_43;
  tmpvar_43 = (normal_35.xyzz * normal_35.yzzx);
  highp float tmpvar_44;
  tmpvar_44 = dot (unity_SHBr, tmpvar_43);
  x2_38.x = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = dot (unity_SHBg, tmpvar_43);
  x2_38.y = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = dot (unity_SHBb, tmpvar_43);
  x2_38.z = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y));
  vC_36 = tmpvar_47;
  highp vec3 tmpvar_48;
  tmpvar_48 = (unity_SHC.xyz * vC_36);
  x3_37 = tmpvar_48;
  tmpvar_34 = ((x1_39 + x2_38) + x3_37);
  shlight_3 = tmpvar_34;
  tmpvar_10 = shlight_3;
  highp vec3 tmpvar_49;
  tmpvar_49 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_50;
  tmpvar_50 = (unity_4LightPosX0 - tmpvar_49.x);
  highp vec4 tmpvar_51;
  tmpvar_51 = (unity_4LightPosY0 - tmpvar_49.y);
  highp vec4 tmpvar_52;
  tmpvar_52 = (unity_4LightPosZ0 - tmpvar_49.z);
  highp vec4 tmpvar_53;
  tmpvar_53 = (((tmpvar_50 * tmpvar_50) + (tmpvar_51 * tmpvar_51)) + (tmpvar_52 * tmpvar_52));
  highp vec4 tmpvar_54;
  tmpvar_54 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_50 * tmpvar_29.x) + (tmpvar_51 * tmpvar_29.y)) + (tmpvar_52 * tmpvar_29.z)) * inversesqrt(tmpvar_53))) * (1.0/((1.0 + (tmpvar_53 * unity_4LightAtten0)))));
  highp vec3 tmpvar_55;
  tmpvar_55 = (tmpvar_10 + ((((unity_LightColor[0].xyz * tmpvar_54.x) + (unity_LightColor[1].xyz * tmpvar_54.y)) + (unity_LightColor[2].xyz * tmpvar_54.z)) + (unity_LightColor[3].xyz * tmpvar_54.w)));
  tmpvar_10 = tmpvar_55;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
  xlv_TEXCOORD7 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD7;
varying lowp vec3 xlv_TEXCOORD6;
varying lowp vec3 xlv_TEXCOORD5;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float _Reflective;
uniform mediump float roughnessV;
uniform samplerCube _Cube;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  highp vec3 tmpvar_2;
  highp vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7.x = xlv_TEXCOORD2.w;
  tmpvar_7.y = xlv_TEXCOORD3.w;
  tmpvar_7.z = xlv_TEXCOORD4.w;
  tmpvar_2 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = xlv_TEXCOORD3.xyz;
  tmpvar_5 = tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = xlv_TEXCOORD4.xyz;
  tmpvar_6 = tmpvar_10;
  tmpvar_3 = xlv_TEXCOORD1;
  lowp vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  lowp float tmpvar_13;
  mediump vec4 env_14;
  mediump vec4 SpecularTex_15;
  mediump float ThiagoNdotL_16;
  mediump vec4 mainTex_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_17 = tmpvar_19;
  lowp vec3 tmpvar_20;
  tmpvar_20 = normalize(tmpvar_18);
  highp float tmpvar_21;
  tmpvar_21 = max (dot (normalize(tmpvar_3), tmpvar_20), 0.0);
  ThiagoNdotL_16 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = (mainTex_17 * _Color).xyz;
  tmpvar_11 = tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_15 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = SpecularTex_15.w;
  tmpvar_13 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_13 * (roughnessV * 7.0));
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(tmpvar_18);
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(tmpvar_18);
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(tmpvar_18);
  mediump vec3 tmpvar_29;
  tmpvar_29.x = dot (tmpvar_4, tmpvar_26);
  tmpvar_29.y = dot (tmpvar_5, tmpvar_27);
  tmpvar_29.z = dot (tmpvar_6, tmpvar_28);
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = (tmpvar_2 - (2.0 * (dot (tmpvar_29, tmpvar_2) * tmpvar_29)));
  tmpvar_30.w = tmpvar_25;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCubeLod (_Cube, tmpvar_30.xyz, tmpvar_30.w);
  env_14 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = ((((env_14 * clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - ThiagoNdotL_16), frePow))), 0.0), 0.0, 1.0)) * _Reflective) * SpecularTex_15) * _LightColor0).xyz;
  tmpvar_12 = tmpvar_32;
  lowp float shadow_33;
  lowp float tmpvar_34;
  tmpvar_34 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  highp float tmpvar_35;
  tmpvar_35 = (_LightShadowData.x + (tmpvar_34 * (1.0 - _LightShadowData.x)));
  shadow_33 = tmpvar_35;
  mediump vec3 lightDir_36;
  lightDir_36 = xlv_TEXCOORD5;
  mediump vec3 viewDir_37;
  viewDir_37 = xlv_TEXCOORD1;
  mediump float atten_38;
  atten_38 = shadow_33;
  mediump vec4 c_39;
  mediump float B_40;
  mediump float A_41;
  highp float rough_sq_42;
  mediump vec3 Rs_numerator_43;
  highp float roughness_c_44;
  highp float roughness_b_45;
  highp float roughness_a_46;
  mediump float roughness_47;
  highp float geo_denominator_48;
  highp float geo_numerator_49;
  mediump vec3 n_50;
  lowp vec3 tmpvar_51;
  tmpvar_51 = normalize(tmpvar_18);
  n_50 = tmpvar_51;
  mediump vec3 tmpvar_52;
  tmpvar_52 = normalize(lightDir_36);
  mediump vec3 tmpvar_53;
  tmpvar_53 = normalize(viewDir_37);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (n_50, tmpvar_52), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = clamp (dot (n_50, tmpvar_53), 0.0, 1.0);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (tmpvar_53, normalize((tmpvar_52 + tmpvar_53))), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = (roughnessV * roughnessV);
  mediump float tmpvar_58;
  tmpvar_58 = (2.0 * tmpvar_54);
  geo_numerator_49 = tmpvar_58;
  geo_denominator_48 = tmpvar_56;
  mediump float tmpvar_59;
  tmpvar_59 = (1.0/(((4.0 * tmpvar_57) * pow (tmpvar_54, 4.0))));
  roughness_a_46 = tmpvar_59;
  mediump float tmpvar_60;
  tmpvar_60 = ((tmpvar_54 * tmpvar_54) - 1.0);
  roughness_b_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = ((tmpvar_57 * tmpvar_54) * tmpvar_54);
  roughness_c_44 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = ((roughness_a_46 * exp((roughness_b_45 / roughness_c_44))) * tmpvar_13);
  roughness_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_53, n_50), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_64;
  tmpvar_64 = vec3(((tmpvar_63 * min (1.0, min (((geo_numerator_49 * tmpvar_55) / geo_denominator_48), ((geo_numerator_49 * tmpvar_54) / geo_denominator_48)))) * roughness_47));
  Rs_numerator_43 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = (orenNayar * orenNayar);
  rough_sq_42 = tmpvar_65;
  highp float tmpvar_66;
  tmpvar_66 = (1.0 - (0.5 * (rough_sq_42 / (rough_sq_42 + 0.57))));
  A_41 = tmpvar_66;
  highp float tmpvar_67;
  tmpvar_67 = (0.45 * (rough_sq_42 / (rough_sq_42 + 0.09)));
  B_40 = tmpvar_67;
  mediump float x_68;
  x_68 = dot (tmpvar_53, n_50);
  mediump float x_69;
  x_69 = dot (tmpvar_52, n_50);
  mediump float x_70;
  x_70 = dot (tmpvar_53, n_50);
  mediump float x_71;
  x_71 = dot (tmpvar_52, n_50);
  mediump float tmpvar_72;
  tmpvar_72 = min ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))));
  c_39.xyz = (((((tmpvar_11 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_54))) * vec3((A_41 + ((B_40 * max (0.0, dot ((tmpvar_53 - (n_50 * dot (tmpvar_53, n_50))), (tmpvar_52 - (n_50 * dot (tmpvar_52, n_50)))))) * (sin(max ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))))) * (sin(tmpvar_72) / cos(tmpvar_72))))))) + (((cSpecular.xyz * (Rs_numerator_43 / (max (0.0, (tmpvar_55 * tmpvar_54)) + 0.09))) * SpecularTex_15.x) * _LightColor0.xyz)) * (atten_38 * 2.0));
  c_39.w = 1.0;
  c_1 = c_39;
  c_1.xyz = (c_1.xyz + (tmpvar_11 * xlv_TEXCOORD6));
  c_1.xyz = (c_1.xyz + tmpvar_12);
  gl_FragData[0] = c_1;
}



#endif"
}

}
Program "fp" {
// Fragment combos: 4
//   d3d9 - ALU: 43 to 174, TEX: 5 to 7
//   d3d11 - ALU: 28 to 85, TEX: 3 to 5, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [_Reflective]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
"ps_3_0
; 173 ALU, 5 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
def c8, 2.00000000, -1.00000000, 7.00000000, 1.00000000
def c9, 0.00000000, 0.56999999, 0.09000000, 1.00000000
def c10, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c11, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c12, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3
dcl_texcoord4 v4
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c8.x, c8.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
dp3_pp r1.x, v5, v5
rsq_pp r1.x, r1.x
mul_pp r0.xyz, r0.w, r0
mul_pp r2.xyz, r1.x, v5
dp3_pp r4.w, r0, r2
abs_pp r1.x, r4.w
mad_pp r0.w, r1.x, c10.x, c10.y
mad_pp r0.w, r0, r1.x, c10.z
mad_pp r1.y, r0.w, r1.x, c10.w
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r4.xyz, r0.w, v1
add_pp r1.x, -r1, c8.w
rsq_pp r1.x, r1.x
rcp_pp r0.w, r1.x
dp3_pp r2.w, r0, r4
abs_pp r1.x, r2.w
mul_pp r1.w, r1.y, r0
cmp_pp r0.w, r4, c9.x, c9
mul_pp r3.x, r0.w, r1.w
add_pp r1.z, -r1.x, c8.w
mad_pp r1.y, r1.x, c10.x, c10
mad_pp r1.y, r1, r1.x, c10.z
rsq_pp r1.z, r1.z
mad_pp r1.x, r1.y, r1, c10.w
rcp_pp r1.z, r1.z
mul_pp r1.y, r1.x, r1.z
cmp_pp r1.x, r2.w, c9, c9.w
mul_pp r1.z, r1.x, r1.y
mad_pp r1.w, -r3.x, c8.x, r1
mad_pp r1.y, -r1.z, c8.x, r1
mad_pp r1.z, r0.w, c11.x, r1.w
mad_pp r0.w, r1.x, c11.x, r1.y
min_pp r1.x, r0.w, r1.z
max_pp r0.w, r0, r1.z
mad_pp r1.x, r1, c11.y, c11.z
frc_pp r1.x, r1
mad_pp r3.x, r1, c12, c12.y
sincos_pp r1.xy, r3.x
mad_pp r0.w, r0, c11.y, c11.z
frc_pp r0.w, r0
mad_pp r0.w, r0, c12.x, c12.y
sincos_pp r3.xy, r0.w
rcp_pp r1.x, r1.x
mul_pp r0.w, r1.y, r1.x
mul_pp r1.w, r3.y, r0
mul_pp r0.w, c7.x, c7.x
mad_pp r3.xyz, -r0, r4.w, r2
mad_pp r1.xyz, -r0, r2.w, r4
dp3_pp r1.y, r1, r3
add r3.w, r0, c9.z
rcp r1.x, r3.w
dp3_pp_sat r3.w, r0, r2
max r1.y, r1, c9.x
mul r1.x, r0.w, r1
mul r1.x, r1, r1.y
mul r1.w, r1.x, r1
add_pp r1.xyz, r2, r4
mul r3.x, r1.w, c11.w
dp3_pp r3.y, r1, r1
add r1.w, r0, c9.y
rsq_pp r3.y, r3.y
mul_pp r1.xyz, r3.y, r1
dp3_pp_sat r1.x, r4, r1
rcp r1.w, r1.w
mul r0.w, r0, r1
mad r0.w, -r0, c11.z, r3.x
dp3_pp_sat r2.x, r0, r4
rcp r1.z, r1.x
mul r1.y, r3.w, c8.x
mul r1.x, r1.y, r2
mul r2.z, r1.x, r1
max_pp r1.x, r2.w, c9
mul r1.y, r3.w, r1
add_pp r2.y, -r1.x, c8.w
mul r2.w, r1.z, r1.y
pow_pp r1, r2.y, c6.x
min r1.z, r2, r2.w
mov r1.y, c5.x
add r2.w, c8, -r1.y
mad_sat r1.x, r2.w, r1, c5
min r1.y, r1.z, c8.w
max r1.x, r1, c9
mul r2.y, r1.x, r1
mul_pp r2.z, c3.x, c3.x
mul_pp r1.y, r3.w, r2.x
mul_pp r1.x, r3.w, r2.z
mul_pp r1.x, r3.w, r1
max_pp r1.y, r1, c9.x
add r2.x, r1.y, c9.z
rcp r3.x, r1.x
pow_pp r1, r3.w, c12.z
mul_pp r1.y, r3.w, r3.w
add r1.y, r1, c8
mul r3.y, r1, r3.x
mov_pp r3.x, r1
pow r1, c12.w, r3.y
mul r1.y, r2.z, r3.x
mov r1.z, r1.x
mul r1.y, r1, c12.z
rcp r1.x, r1.y
mul r2.z, r1.x, r1
texld r1, v0, s3
rcp_pp r3.x, r2.x
mul r2.z, r1.w, r2
mul r2.x, r2.y, r2.z
mul_pp r2.x, r2, r3
dp3 r3.x, v1, v1
rsq r4.x, r3.x
mul_pp r2.xyz, r2.x, c2
mul_pp r3.xyz, r1.x, r2
mul r2.xyz, r4.x, v1
dp3 r4.x, r0, r2
mul_pp r3.xyz, r3, c0
max r4.w, r4.x, c9.x
texld r2.xyz, v0, s2
mul_pp r4.xyz, r2, c1
add r0.w, r0, c8
max r3.w, r3, c9.x
mul_pp r2.xyz, r4, c0
mul_pp r2.xyz, r2, r3.w
mad_pp r5.xyz, r2, r0.w, r3
dp3_pp r3.x, v2, r0
dp3_pp r3.y, r0, v3
dp3_pp r3.z, r0, v4
add_pp r3.w, -r4, c8
pow_pp r0, r3.w, c6.x
mov_pp r0.y, r0.x
mad_sat r0.y, r2.w, r0, c5.x
mul_pp r0.x, r1.w, c3
mov r2.x, v2.w
mov r2.z, v4.w
mov r2.y, v3.w
dp3 r4.w, r3, r2
mul r3.xyz, r3, r4.w
mad r2.xyz, -r3, c8.x, r2
max r0.w, r0.y, c9.x
mul_pp r2.w, r0.x, c8.z
texldl r0.xyz, r2, s4
mul_pp r0.xyz, r0, r0.w
mul_pp r2.xyz, r4, v6
mul_pp r0.xyz, r0, c4.x
mad_pp r2.xyz, r5, c8.x, r2
mul_pp r0.xyz, r0, r1
mad_pp oC0.xyz, r0, c0, r2
mov_pp oC0.w, c8
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Float 4 [_Reflective]
Vector 2 [cSpecular]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_BumpMap] 2D
SetTexture 2 [_SpecularMap] 2D
SetTexture 3 [_Cube] CUBE
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 106.67 (80 instructions), vertex: 0, texture: 20,
//   sequencer: 32, interpolator: 28;    20 GPRs, 9 threads,
// Performance (if enough threads): ~106 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.
// * Warning: high GPR count may result in poorer than estimated performance.

"ps_360
backbbaaaaaaacgiaaaaaeoiaaaaaaaaaaaaaaceaaaaacaeaaaaaccmaaaaaaaa
aaaaaaaaaaaaabnmaaaaaabmaaaaabmoppppadaaaaaaaaamaaaaaabmaaaaaaaa
aaaaabmhaaaaabamaaadaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabciaaacaaab
aaabaaaaaaaaabdaaaaaaaaaaaaaabeaaaadaaadaaabaaaaaaaaabeiaaaaaaaa
aaaaabfiaaacaaaaaaabaaaaaaaaabdaaaaaaaaaaaaaabgfaaadaaaaaaabaaaa
aaaaabbiaaaaaaaaaaaaabgoaaacaaaeaaabaaaaaaaaabhmaaaaaaaaaaaaabim
aaadaaacaaabaaaaaaaaabbiaaaaaaaaaaaaabjjaaacaaacaaabaaaaaaaaabda
aaaaaaaaaaaaabkdaaacaaafaaabaaaaaaaaabhmaaaaaaaaaaaaabklaaacaaag
aaabaaaaaaaaabhmaaaaaaaaaaaaablcaaacaaahaaabaaaaaaaaabhmaaaaaaaa
aaaaablmaaacaaadaaabaaaaaaaaabhmaaaaaaaafpechfgnhaengbhaaaklklkl
aaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpedhfgcgfaaklklaaaeaaaoaaabaaabaaabaaaaaaaaaaaa
fpemgjghgiheedgpgmgphcdaaafpengbgjgofegfhiaafpfcgfgggmgfgdhegjhg
gfaaklklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpfdhagfgdhfgmgbhcengbha
aagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaagghcgffagphhaagphcgfgoeogb
hjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddco
daaaklklaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaaegibaaabdaaaaaaaaaeaaaaaaaa
aaaageohaahpaahpaaaaaaabaaaapafaaaaahbfbaaaapcfcaaaapdfdaaaapefe
aaaahfffaaaahgfgaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadnjibgchdpmjankeaaaaaaaaeamjapnlmaejapnllofjdeie
eaejapnldpiaaaaamaaaaaaadplikkdleaiaaaaaeaoaaaaadoccpjiddpaaaaaa
doogggggdpmaaaaalpiaaaaadpbbolifdnlifbomeaaaaaaalmjjgodaaaaaaaaa
aaaaaaaaaaaaaaaaaacfgaaigaaobcaabcaaaaaaaaaagabegabkbcaabcaaaaaa
aaaagacagacgbcaabcaaaaaaaaaagacmgadcbcaabcaaaaaaaaaagadigadobcaa
bcaaaaaaaeaagaeecaekbcaabcaaaaafaaaaaaaagaemmeaabcaaaaaaaaaagafc
fafibcaaccaaaaaabacajaabbpbppgiiaaaaeaaadibahaabbpbpphpjaaaaeaaa
miaiaaalaegmblaacaafplaamiaiaaagaaloloaapaafafaamiaiaaabaaloloaa
paababaaaiegbdahaagmbggmabadpmahkmidbdbdaagpgpefoaahahadmiapaaai
aapekeaakabdpoaamiaeaaaaaegogoblnbaiaiplfiijafahaamemeblobaiaiib
fiiiagabaagmblbloaahahigkaeiaaabaablmgmgoaabaaiafiioabbaaablpmbl
obagafibbeaoaaaoaablpmblobafababamedalalaameblmgobaiabaamjaiaaan
aamdloaapaaoalaamjacaaamaalomdaapaalbaaamiabaaakaamdloaapaaoalaa
miahaabbaemagmbfolalakaoaaebamapaalololbpaalacambeaeaaapaalologm
paaladapambbbaaoaamgblblobapadacbebcababaamgblgmobamanakbeecabak
aalomdmgnaalbapkbeecaaapaalologgpaalaeabliepaaafaaaaaaacmabaaopl
miaiaaabaalbblgmolapaeafeaebaaabaamdmdmgpaafafiafibeabaaaamggmgm
kbaaagibdiehakafaabfgmmgobafabaamiahaabaaemalbbfolalakbamiafaaab
aalagmgmilikpppkajbeamaaaamdlogmnaaoafademicamanaablblmgoaababaa
miafaaabaamelalbmlabikplmiadaaaoaamelalbmlabikpkembnbcabaaonlbbl
obamamaiaiedbcafaegnblgmkaikplabemcnbcaiaaihddlbobabamaikabeaiaa
aagmbllbkdaiplifkacoaiafaaagpmgmobbdbcifemeiaiaiaamgblmgodaaaiai
lmehaabcabmalmaaibaipmplmiamaaabaakmkmmgmlbcaoplemebaaafaamgmgbl
obbcaaafdibdafabaelalagmofakakafmiabaaahaagmmgaaobafaaaamiamaaao
aaomblaaobahajaamiahaaaiaamabaaaobaoaiaamiagaaabaabglmlmolababai
beeaaaaaaaaaaalgocaaaaabbibbafabaalololgpabbbaabkielafafaamnmnec
ibafpnpnmiagaaabaamblbaakaafpnaamiagaaabaambaaaaoiabaaaamiadaaai
aamfblgmilabpkplmebcababaagmmggmkcabpkaimaceababaabllbgmobafabai
emibapanaamglbgmobabababmiapaaahaalappaaobanapaabeacaaabafblblmg
oaahadahaeebababaelbblbloaahacaemiapaaabaakgmnaapcababaaembeacac
aablblmgocababibmiadaaacaagngmblmlabacpnpmaiabniapbpppppaaaaaaaa
jadibaebcpbppeehaaaamaaabaaiaaabbpbppoiiaaaaeaaamiahaaadaamamaaa
kbaaabaamiahaaanaamamaaakbadaaaamiapaaacaadelbaaobanamaalaeaaaaa
aaaaaamdocaaaapomjacaaaaaablmggmmlalakafembbabaaaamglbmgobaiaaaa
miapaaaaaahbffaaobaaabaamiahaaaaaamagmaakbaaaeaamiahaaabaablmaaa
kbaaacaamiahaaabaalegmaaobabajaamiahaaaaaaleleaaobaaajaalmihaaaa
aalemaaeibaaaaplmiahaaaaaamamamaoladagaamaihababaalemalbkbabaaai
miaiaaaaaagmblblolahabaamiahaaabaamablleolacaaabmiipmaaaaaleblma
klabpoaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [_Reflective]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
"sce_fp_rsx // 181 instructions using 5 registers
[Configuration]
24
ffffffff001fc020007fff80000000000000840005000000
[Offsets]
8
_LightColor0 3 0
00000b4000000a8000000980
_Color 1 0
000006d0
cSpecular 1 0
00000a40
roughnessV 2 0
00000820000000d0
_Reflective 1 0
00000ac0
freBias 4 0
00000a10000009b0000005b000000580
frePow 2 0
0000093000000510
orenNayar 1 0
00000700
[Microcode]
2896
940217005c011c9dc8000001c8003fe106800440ce041c9d00020000aa020000
000040000000bf800000000000000000a4000500c8011c9dc8010001c800bfe1
10820240ab001c9cab000000c8000001108a044001001c9e01000000c9040003
ae043b00c8011c9daa000000c800bfe108800340ff141c9d00020000c8000001
00003f8000000000000000000000000008803b40c9003c9d55000001c8000001
0e803940c9001c9dc8000029c800000102040500c9001c9dc8080001c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
ae823940c8011c9dc8000029c800bfe110820540c9001c9dc9040001c8000001
2e843941c8011c9dc8000029c800bfe10e860340c9041c9dc9080001c8000001
108c0340c9043c9f00020000c800000100003f80000000000000000000000000
10840540c9001c9dc9080001c8000001108a8540c9001c9dc9080001c8000001
10860440c9083c9d00020000aa0200006000bc9920003d980000000000000000
0e863940c90c1c9dc8000029c8000001088a8540c9041c9dc90c0001c8000001
0e860440c9001c9fff080001c90800010e840440c9001c9fff040001c9040001
10800540c9081c9dc90c0001c800000102840440ff083c9dff0c000100020000
4000be5900000000000000000000000010860340c9083c9faa020000c8000001
0000000000003f80000000000000000008881b40ff181c9dc8000001c8000001
048a0440ff083c9d010800000002000000003fc9000000000000000000000000
028a0a40ff081c9d00020000c800000100000000000000000000000000000000
10840440c9043c9daa02000054020001000000006000bc9920003d9800000000
04841b40ff0c1c9dc8000001c800000102840440ff043c9dff08000100020000
4000be5900000000000000000000000010840240c9141c9dc9100001c8000001
02860240ff141c9dff080001c800000110020100c9141c9dc8001001c8000001
10840440c9043c9d010800000002000000003fc9000000000000000000000000
02840a40ff041c9daa020000c800000100000000000000000000000000000000
10820900c9041c9d00020000c800000100000000000000000000000000000000
108e8540c9001c9dc9040001c800000104060200fe041c9dff1c0001c8000001
04860340ff041c9f00020000c800000100003f80000000000000000000000000
10020100c8041c9dc8000001c800000102060200fe041c9dff140001c8000001
10021d00ff141c9dc8002001c800000110003a00000c1c9c55140001c8000001
04063a00c80c1c9d55140001c800000102060800aa0c1c9cfe000001c8000001
028e1d00ab0c1c9cc8000001c800000110001a00c90c1c9dc8000001c8000001
02820240ff141c9dff140001c800000110021c00fe041c9dc8000001c8000001
0802040001041c9cfe000001fe00000308020200c8041c9d00020000c8000001
aa3a3fb800000000000000000000000004843a40c9141c9dab080000c8000001
02080200ff101c9dfe042001c800000110021c0054041c9dc8000001c8000001
02863a40ff081c9d55100001c80000011084024001141c9cab081000c8000001
048a0340c9081c9dff080003c80000011084024001081c9c010c1000c8000001
10900340010c1c9cc9080003c800000104063a00fe041c9dc8100001c8000001
02920440c9081c9daa020000ff20000100000000000040490000000000000000
10900200011c1c9c00020000c800000100000000000000000000000000000000
10000800000c1c9c00020000c800000100003f80000000000000000000000000
02901c40ff201c9dc8000001c80000010490044001141c9c00020000c9140001
000040490000000000000000000000000806040001201c9c0002000201200000
000000000000000000000000000000009e021706c8011c9dc8000001c8003fe1
08068300c80c1c9d00020000c800000100000000000000000000000000000000
10080200c8041c9daa0c0000c800000104080900540c1c9d00020000c8000001
0000000000000000000000000000000008000200aa101c9cfe000001c8000001
0290020054001c9dfe100001c80000011082084001241c9cab200000c8000001
08822340ff041c9dc8000001c80000011e8c0141c8011c9dc8000001c8003fe1
10822240ff041c9dc8000001c8000001088e0540c9001c9dc9180001c8000001
04923a4055041c9dff040001c800000110000900c9001c9d00020000c8000001
000000000000000000000000000000001080090000081c9c00020000c8000001
000000000000000000000000000000008e041704c8011c9dc8000001c8003fe1
0e8a0240c8081c9dc8020001c800000100000000000000000000000000000000
fe880140c8011c9dc8000001c8003fe11090024000021c9c00020000c8000001
0000000000000000000000000000000008000300ff201c9d00020000c8000001
51ec3db8000000000000000000000000048c0140ff101c9dc8000001c8000001
08003a00ff201c9d54000001c80000011008020054001c9dc8000001c8000001
de820140c8011c9dc8000001c8003fe1028e0540c9041c9dc9000001c8000001
048e0540c9001c9dc9100001c800000110000100c8001c9dc8000001c8000001
028c0140ff041c9dc8000001c8000001088c0140ff181c9dc8000001c8000001
02000500c91c1c9dc9181001c80000011082094001241c9cab200000c8000001
0e060400c91c1c9f00000000c918000102802340ff041c9dc8000001c8000001
02880240ff141c9dff1c0001c800000102920240fe041c9d00020000c8000001
0000000000000000000000000000000006000100c8001c9dc8000001c8000001
0890024001001c9cab240000c800000102000900c9101c9d00020000c8000001
0000000000000000000000000000000002040200fe101c9d55200001c8000001
1088030000001c9c00020000c800000151ec3db8000000000000000000000000
02000300ff201c9daa020000c800000100000000eb853f110000000000000000
04083a00ff201c9dc8005001c800000110920340c9001c9f00020000c8000001
00003f8000000000000000000000000002801d00ff241c9dc8000001c8000001
0800040000081c9c00020000aa10000266663ee6000000000000000000000000
02800200c9001c9d00020000c800000100000000000000000000000000000000
10860900c9141c9daa020000c800000100000000000000000000000000000000
08861c40c9001c9dc8000001c80000010e800240c9141c9dc8020001c8000001
0000000000000000000000000000000010803a4001201c9cff100001c8000001
10000400550c1c9d00020002550c000100000000000000000000000000000000
0282030054001c9daa020000c80000010000000000003f800000000000000000
0e800240c9001c9dff0c0001c80000011080024000041c9cc9000001c8000001
10088300c8001c9d00020000c800000100000000000000000000000000000000
0e800240c9001c9d01040000c80000010e820240ff001c9dc8020001c8000001
000000000000000000000000000000001088024001241c9cc8020001c8000001
000000000000000000000000000040e00e880440c9041c9dc8021001c9000001
0000000000000000000000000000000010800900c8101c9dc8020001c8000001
0000000000000000000000000000000010800240c9001c9d00020000c8000001
000000000000000000000000000000004e800441c9141c9dc8010001c9103fe1
0e042f08c80c1c9dff100001c80000010e820240c8081c9dff000001c8000001
1080014000021c9cc8000001c800000100003f80000000000000000000000000
0e820240c9041c9dc8040001c80000010e810440c9041c9dc8020001c9000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 160 // 116 used size, 14 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Vector 80 [cSpecular] 4
Float 96 [roughnessV]
Float 100 [_Reflective]
Float 104 [freBias]
Float 108 [frePow]
Float 112 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 1
SetTexture 1 [_MainTex] 2D 0
SetTexture 2 [_SpecularMap] 2D 2
SetTexture 3 [_Cube] CUBE 3
// 120 instructions, 6 temp regs, 0 temp arrays:
// ALU 81 float, 0 int, 2 uint
// TEX 3 (1 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedgdamlfkjiocepknbbhnpcafhafnilodnabaaaaaahmbaaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefccmapaaaaeaaaaaaamladaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafidaaaaeaahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadpcbabaaaadaaaaaagcbaaaad
pcbabaaaaeaaaaaagcbaaaadpcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaa
gcbaaaadhcbabaaaahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaa
baaaaaahbcaabaaaaaaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaeeaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaa
aaaaaaaaagbjbaaaagaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaa
abaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialp
aaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaabaaaaaaakaabaiaebaaaaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaaabaaaaaa
bkaabaiaebaaaaaaabaaaaaabkaabaaaabaaaaaadkaabaaaabaaaaaaelaaaaaf
ecaabaaaabaaaaaadkaabaaaabaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaabaaaaaajgahbaaaaaaaaaaadcaaaaakocaabaaa
aaaaaaaaagajbaiaebaaaaaaabaaaaaapgapbaaaabaaaaaafgaobaaaaaaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaacaaaaaabaaaaaahbcaabaaaadaaaaaajgahbaaaacaaaaaa
egacbaaaabaaaaaadcaaaaakccaabaaaadaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaadaaaaaabkaabaaa
adaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
adaaaaaabkaabaaaadaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaadaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaadaaaaaackaabaaaadaaaaaadiaaaaahicaabaaaadaaaaaa
ckaabaaaadaaaaaabkaabaaaadaaaaaadcaaaaajicaabaaaadaaaaaadkaabaaa
adaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaibcaabaaaaeaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaaabaaaaahicaabaaaadaaaaaa
dkaabaaaadaaaaaaakaabaaaaeaaaaaadcaaaaajccaabaaaadaaaaaabkaabaaa
adaaaaaackaabaaaadaaaaaadkaabaaaadaaaaaaddaaaaahecaabaaaadaaaaaa
akaabaaaacaaaaaabkaabaaaadaaaaaadeaaaaahbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaadaaaaaaenaaaaagbcaabaaaacaaaaaaaanaaaaaakaabaaa
acaaaaaaenaaaaahbcaabaaaaeaaaaaabcaabaaaafaaaaaackaabaaaadaaaaaa
aoaaaaahccaabaaaadaaaaaaakaabaaaaeaaaaaaakaabaaaafaaaaaadiaaaaah
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaadaaaaaadiaaaaajccaabaaa
adaaaaaaakiacaaaaaaaaaaaahaaaaaaakiacaaaaaaaaaaaahaaaaaadcaaaaao
mcaabaaaadaaaaaaagiacaaaaaaaaaaaahaaaaaaagiacaaaaaaaaaaaahaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaifolbbdpomfblidnaoaaaaahgcaabaaaadaaaaaa
fgafbaaaadaaaaaakgalbaaaadaaaaaadcaaaaakccaabaaaadaaaaaabkaabaia
ebaaaaaaadaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahecaabaaa
adaaaaaackaabaaaadaaaaaaabeaaaaaggggogdodcaaaaakhcaabaaaaeaaaaaa
egacbaiaebaaaaaaabaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaadeaaaaah
bcaabaaaadaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaabaaaaaahccaabaaa
aaaaaaaaegacbaaaaeaaaaaajgahbaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackaabaaaadaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaaaacaaaaaabkaabaaaadaaaaaadcaaaaajncaabaaaaaaaaaaaagbjbaaa
agaaaaaaagaabaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaacaaaaaa
igadbaaaaaaaaaaaigadbaaaaaaaaaaaeeaaaaafbcaabaaaacaaaaaaakaabaaa
acaaaaaadiaaaaahncaabaaaaaaaaaaaagaobaaaaaaaaaaaagaabaaaacaaaaaa
bacaaaahbcaabaaaaaaaaaaajgahbaaaacaaaaaaigadbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaacaaaaaaakaabaaa
adaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaacaaaaaaakaabaiaebaaaaaa
adaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaaiccaabaaaacaaaaaabkaabaaaacaaaaaadkiacaaaaaaaaaaaagaaaaaa
bjaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaaaaaaaaadkaabaaa
aaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
agaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaacaaaaaackiacaaaaaaaaaaaagaaaaaadiaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahccaabaaaacaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajecaabaaaacaaaaaaakiacaaa
aaaaaaaaagaaaaaaakiacaaaaaaaaaaaagaaaaaadiaaaaahicaabaaaacaaaaaa
ckaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahccaabaaaacaaaaaabkaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaackaabaaaacaaaaaa
abeaaaaaaaaaiaeadiaaaaahccaabaaaacaaaaaabkaabaaaacaaaaaackaabaaa
acaaaaaaaoaaaaakccaabaaaacaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpbkaabaaaacaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaacaaaaaaefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaadkaabaaaadaaaaaadiaaaaahbcaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakaabaaaaaaaaaaaaoaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaagaabaaaaaaaaaaa
egiccaaaaaaaaaaaafaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaadaaaaaa
egacbaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaaaaaaaaadiaaaaaihcaabaaaaeaaaaaaegacbaaaaeaaaaaa
egiccaaaaaaaaaaaadaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaaeaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaa
egacbaaaafaaaaaadcaaaaajlcaabaaaaaaaaaaaegaibaaaafaaaaaafgafbaaa
aaaaaaaaegaibaaaacaaaaaaaaaaaaahlcaabaaaaaaaaaaaegambaaaaaaaaaaa
egambaaaaaaaaaaadcaaaaajlcaabaaaaaaaaaaaegaibaaaaeaaaaaaegbibaaa
ahaaaaaaegambaaaaaaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaadaaaaaa
egacbaaaabaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaaaeaaaaaaegacbaaa
abaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaafaaaaaaegacbaaaabaaaaaa
dgaaaaafbcaabaaaabaaaaaadkbabaaaadaaaaaadgaaaaafccaabaaaabaaaaaa
dkbabaaaaeaaaaaadgaaaaafecaabaaaabaaaaaadkbabaaaafaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaaaaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaacaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaadiaaaaai
icaabaaaabaaaaaadkaabaaaadaaaaaaakiacaaaaaaaaaaaagaaaaaadiaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaoaeaeiaaaaalpcaabaaa
abaaaaaaegacbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaafgifcaaaaaaaaaaaagaaaaaa
diaaaaahhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadcaaaaak
hccabaaaaaaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaaegadbaaa
aaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [roughnessV]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [unity_Lightmap] 2D
"ps_3_0
; 43 ALU, 6 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
def c6, 2.00000000, -1.00000000, 7.00000000, 1.00000000
def c7, 0.00000000, 8.00000000, 0, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3
dcl_texcoord4 v4
dcl_texcoord5 v5.xy
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c6.x, c6.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c6.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r0.xyz, r0.w, r0
dp3 r1.x, v1, v1
rsq r1.x, r1.x
mul r1.xyz, r1.x, v1
dp3 r0.w, r0, r1
max r0.w, r0, c7.x
add_pp r1.w, -r0, c6
dp3_pp r2.x, v2, r0
dp3_pp r2.y, r0, v3
dp3_pp r2.z, r0, v4
pow_pp r0, r1.w, c5.x
mov r1.w, c4.x
mov r1.x, v2.w
mov r1.z, v4.w
mov r1.y, v3.w
dp3 r2.w, r2, r1
mul r2.xyz, r2, r2.w
mad r1.xyz, -r2, c6.x, r1
mov_pp r2.x, r0
texld r0, v0, s3
add r1.w, c6, -r1
mad_sat r2.x, r1.w, r2, c4
mul_pp r0.w, r0, c2.x
mul_pp r1.w, r0, c6.z
max r0.w, r2.x, c7.x
texldl r1.xyz, r1, s4
mul_pp r1.xyz, r1, r0.w
mul_pp r1.xyz, r1, c3.x
mul_pp r0.xyz, r1, r0
mul_pp r2.xyz, r0, c0
texld r1.xyz, v0, s2
texld r0, v5, s5
mul_pp r1.xyz, r1, c1
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r0, r1
mad_pp oC0.xyz, r0, c7.y, r2
mov_pp oC0.w, c7.x
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
Float 2 [roughnessV]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_BumpMap] 2D
SetTexture 2 [_SpecularMap] 2D
SetTexture 3 [_Cube] CUBE
SetTexture 4 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 44.00 (33 instructions), vertex: 0, texture: 24,
//   sequencer: 16, interpolator: 24;    9 GPRs, 21 threads,
// Performance (if enough threads): ~44 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacemaaaaacfaaaaaaaaaaaaaaaceaaaaabomaaaaacbeaaaaaaaa
aaaaaaaaaaaaabmeaaaaaabmaaaaablfppppadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabkoaaaaaapiaaadaaabaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaaab
aaabaaaaaaaaabbmaaaaaaaaaaaaabcmaaadaaadaaabaaaaaaaaabdeaaaaaaaa
aaaaabeeaaacaaaaaaabaaaaaaaaabbmaaaaaaaaaaaaabfbaaadaaaaaaabaaaa
aaaaabaeaaaaaaaaaaaaabfkaaacaaadaaabaaaaaaaaabgiaaaaaaaaaaaaabhi
aaadaaacaaabaaaaaaaaabaeaaaaaaaaaaaaabifaaacaaaeaaabaaaaaaaaabgi
aaaaaaaaaaaaabinaaacaaafaaabaaaaaaaaabgiaaaaaaaaaaaaabjeaaacaaac
aaabaaaaaaaaabgiaaaaaaaaaaaaabjpaaadaaaeaaabaaaaaaaaabaeaaaaaaaa
fpechfgnhaengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfgcgfaaklklaaaeaaao
aaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpengbgjgofegf
hiaafpfcgfgggmgfgdhegjhggfaaklklaaaaaaadaaabaaabaaabaaaaaaaaaaaa
fpfdhagfgdhfgmgbhcengbhaaagghcgfecgjgbhdaagghcgffagphhaahcgphfgh
gigogfhdhdfgaahfgogjhehjfpemgjghgihegngbhaaahahdfpddfpdaaadccoda
codcdadddfddcodaaaklklklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabe
abpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacbabaaaaiaa
aaaaaaaeaaaaaaaaaaaafemgaadpaadpaaaaaaabaaaapafaaaaahbfbaaaapcfc
aaaapdfdaaaapefeaaaadfffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaeaoaaaaadpiaaaaaebaaaaaaaaaaaaaaeaaaaaaa
aaaaaaaalpiaaaaadpmaaaaaaacfgaaegaakbcaabcaaaaaaaaaagabagabgbcaa
bcaaaaaaaffagabmaaaabcaameaaaaaaaaaagaccdacibcaaccaaaaaabacagaab
bpbppgiiaaaaeaaadibifaabbpbppghpaaaaeaaamiaiaaabaaloloaapaababaa
miadaaahaamhgmmgilafppppmiaeaaafaegngnlbnbahahpomiamaaahaakmkmaa
obahahaafiieabaaaamgblbloaahahibkaieahaaaamgmgmgoaaaafiffiehahai
aablmamgobababiamiahaaahaamabgaaobahahaabeaeaaabaalologmnaahacac
amibababaalologmnaahaepobeaeaaaaaalologmpaaiahabameeafaaaamglbbl
kcaappaeliecaaabaaloloicnaahadpomiaeaaafaalbblmgolabadafmiaiaaaf
aamgblmgolabacafeaeeaaafaablblmgobabagiakiicabahaegmlbecaaaepoaf
diibabahaablblbloaafafabmiapaaahaakmaaaaobahabaabeacaaabaflbblgm
oaahadahaeebababaemgblbloaahacaemiapaaabaakgmnaapcababaaembeacac
aablblmgocababibmiadaaacaagngmblmlabacppkiaiaaliapbpppppaaaaaaaa
jadibaebcpbppfmbaaaamaaabaaicaabbpbppoiiaaaaeaaabaeiaakbbpbppemi
aaaaeaaamiaeaaabaamgmgaakbaapoaamiahaaacaamamaaakbacabaabfabaaad
aablgmmgkaahaeabambgabadaagmbmgmobadabaabeaoaaadaaebgmmgkbadadab
amcbabadaabllblbobadabaabeahaaadaamamamgobadagabamehabaaaamamabl
kbadaaaamiahmaaaaamamamaolacabaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [roughnessV]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [unity_Lightmap] 2D
"sce_fp_rsx // 57 instructions using 4 registers
[Configuration]
24
ffffffff000fc020003fffe0000000000000840004000000
[Offsets]
6
_LightColor0 1 0
00000380
_Color 1 0
00000080
roughnessV 1 0
000001e0
_Reflective 1 0
00000300
freBias 2 0
0000029000000260
frePow 1 0
00000210
[Microcode]
912
940017005c011c9dc8000001c8003fe106800440ce001c9d00020000aa020000
000040000000bf8000000000000000008e021704c8011c9dc8000001c8003fe1
08800240ab001c9cab000000c80000011088044001001c9e0100000055000003
a2040500c8011c9dc8010001c800bfe10e820240c8041c9dc8020001c8000001
000000000000000000000000000000003e02170bc8011c9dc8000001c8003fe1
08800340ff101c9d00020000c800000100003f80000000000000000000000000
ae043b00c8011c9dc8080001c800bfe10e820240fe041c9dc9040001c8000001
08803b40c9003c9d55000001c80000010e840240c9041c9dc8043001c8000001
0e803940c9001c9dc8000029c800000108020500c9001c9dc8080001c8000001
de880140c8011c9dc8000001c8003fe102880540c9101c9dc9000001c8000001
fe820140c8011c9dc8000001c8003fe104880540c9001c9dc9040001c8000001
1080090054041c9d00020000c800000100000000000000000000000000000000
1e860141c8011c9dc8000001c8003fe108880540c9001c9dc90c0001c8000001
108a0340c9001c9f00020000c800000100003f80000000000000000000000000
9e061706c8011c9dc8000001c8003fe102800240fe0c1c9d00020000c8000001
0000000000000000000000000000000004801d00ff141c9dc8000001c8000001
10800200ab001c9c00020000c800000100000000000000000000000000000000
028a0140ff101c9dc8000001c800000104801c40ff001c9dc8000001c8000001
048a0140ff041c9dc8000001c800000110000400ab001c9c00020002ab000000
00000000000000000000000000000000088a0140ff0c1c9dc8000001c8000001
04008300fe001c9d00020000c800000100000000000000000000000000000000
108a024001001c9caa020000c800000100000000000040e00000000000000000
02000500c9101c9dc9141001c800000110800900aa001c9c00020000c8000001
0000000000000000000000000000000010820240c9001c9d00020000c8000001
000000000000000000000000000000000e040400c9101c9f00000000c9140001
0e002f08c8081c9dff140001c80000010e800240c8001c9dff040001c8000001
1080014000021c9cc8000001c800000100000000000000000000000000000000
0e800240c9001c9dc80c0001c80000010e810440c9001c9dc8020001c9080001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
ConstBuffer "$Globals" 176 // 112 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Float 96 [roughnessV]
Float 100 [_Reflective]
Float 104 [freBias]
Float 108 [frePow]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 1
SetTexture 1 [_MainTex] 2D 0
SetTexture 2 [_SpecularMap] 2D 2
SetTexture 3 [_Cube] CUBE 3
SetTexture 4 [unity_Lightmap] 2D 4
// 44 instructions, 4 temp regs, 0 temp arrays:
// ALU 28 float, 0 int, 0 uint
// TEX 4 (1 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecededdlpgghcifelogcpoblbinmcablfncbabaaaaaafaahaaaaadaaaaaa
cmaaaaaapmaaaaaadaabaaaaejfdeheomiaaaaaaahaaaaaaaiaaaaaalaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaalmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaalmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalmaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaalmaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaalmaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaalmaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
adadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbiagaaaaeaaaaaaaigabaaaa
fjaaaaaeegiocaaaaaaaaaaaahaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafidaaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadpcbabaaaadaaaaaa
gcbaaaadpcbabaaaaeaaaaaagcbaaaadpcbabaaaafaaaaaagcbaaaaddcbabaaa
agaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaa
aaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaap
dcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadp
dcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaa
dkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaadaaaaaaegacbaaa
aaaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaaeaaaaaaegacbaaaaaaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaafaaaaaaegacbaaaaaaaaaaadgaaaaaf
bcaabaaaacaaaaaadkbabaaaadaaaaaadgaaaaafccaabaaaacaaaaaadkbabaaa
aeaaaaaadgaaaaafecaabaaaacaaaaaadkbabaaaafaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaaaaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaiaebaaaaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaai
icaabaaaaaaaaaaadkaabaaaacaaaaaaakiacaaaaaaaaaaaagaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaoaeaeiaaaaalpcaabaaa
abaaaaaaegacbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaaaaaaaaaibcaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpcpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaai
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaaagaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaackiacaia
ebaaaaaaaaaaaaaaagaaaaaaabeaaaaaaaaaiadpdccaaaakbcaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaackiacaaaaaaaaaaaagaaaaaadiaaaaah
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaagaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaagaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaa
egacbaaaacaaaaaaegiccaaaaaaaaaaaadaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [_Reflective]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [_ShadowMapTexture] 2D
"ps_3_0
; 174 ALU, 6 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
def c8, 2.00000000, -1.00000000, 7.00000000, 1.00000000
def c9, 0.00000000, 0.56999999, 0.09000000, 1.00000000
def c10, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c11, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c12, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3
dcl_texcoord4 v4
dcl_texcoord5 v5.xyz
dcl_texcoord6 v6.xyz
dcl_texcoord7 v7
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c8.x, c8.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r0.xyz, r0.w, r0
dp3_pp r0.w, v5, v5
rsq_pp r0.w, r0.w
mul_pp r2.xyz, r0.w, v5
dp3_pp r1.w, r0, r2
dp3_pp r1.x, v1, v1
rsq_pp r1.x, r1.x
mul_pp r4.xyz, r1.x, v1
dp3_pp r0.w, r0, r4
mad_pp r3.xyz, -r0, r1.w, r2
mad_pp r1.xyz, -r0, r0.w, r4
dp3_pp r1.x, r1, r3
abs_pp r3.x, r1.w
abs_pp r1.y, r0.w
add_pp r2.w, -r1.y, c8
mad_pp r1.z, r1.y, c10.x, c10.y
mad_pp r1.z, r1, r1.y, c10
add_pp r3.y, -r3.x, c8.w
rsq_pp r2.w, r2.w
rsq_pp r3.y, r3.y
mad_pp r1.y, r1.z, r1, c10.w
rcp_pp r2.w, r2.w
mul_pp r1.z, r1.y, r2.w
cmp_pp r1.y, r0.w, c9.x, c9.w
mul_pp r2.w, r1.y, r1.z
mad_pp r1.z, -r2.w, c8.x, r1
mad_pp r2.w, r3.x, c10.x, c10.y
mad_pp r2.w, r2, r3.x, c10.z
max_pp r0.w, r0, c9.x
mad_pp r1.y, r1, c11.x, r1.z
mad_pp r2.w, r2, r3.x, c10
rcp_pp r3.y, r3.y
mul_pp r2.w, r2, r3.y
cmp_pp r1.w, r1, c9.x, c9
mul_pp r3.x, r1.w, r2.w
mad_pp r1.z, -r3.x, c8.x, r2.w
mad_pp r1.w, r1, c11.x, r1.z
mul_pp r2.w, c7.x, c7.x
add r1.z, r2.w, c9
min_pp r3.x, r1.y, r1.w
rcp r1.z, r1.z
mul r1.z, r2.w, r1
max r1.x, r1, c9
mul r4.w, r1.z, r1.x
mad_pp r3.x, r3, c11.y, c11.z
frc_pp r1.z, r3.x
max_pp r1.x, r1.y, r1.w
mad_pp r3.y, r1.z, c12.x, c12
mad_pp r3.x, r1, c11.y, c11.z
sincos_pp r1.xy, r3.y
frc_pp r1.z, r3.x
mad_pp r1.z, r1, c12.x, c12.y
sincos_pp r3.xy, r1.z
rcp_pp r1.x, r1.x
mul_pp r1.x, r1.y, r1
mul_pp r1.w, r3.y, r1.x
add_pp r1.xyz, r2, r4
dp3_pp_sat r3.w, r0, r2
mul r1.w, r4, r1
dp3_pp r3.y, r1, r1
mul r3.x, r1.w, c11.w
rsq_pp r3.y, r3.y
mul_pp r1.xyz, r3.y, r1
dp3_pp_sat r1.y, r4, r1
add r1.w, r2, c9.y
rcp r1.w, r1.w
mul r1.x, r2.w, r1.w
mad r3.x, -r1, c11.z, r3
dp3_pp_sat r2.x, r0, r4
rcp r1.z, r1.y
mul r1.x, r3.w, c8
mul r1.y, r1.x, r2.x
mul r1.x, r3.w, r1
mul r2.y, r1, r1.z
mul r2.z, r1, r1.x
add_pp r0.w, -r0, c8
pow_pp r1, r0.w, c6.x
min r1.y, r2, r2.z
mov r0.w, c5.x
add r2.w, c8, -r0
mad_sat r0.w, r2, r1.x, c5.x
min r1.x, r1.y, c8.w
mul_pp r1.y, r3.w, r2.x
max_pp r1.y, r1, c9.x
add r2.x, r1.y, c9.z
max r0.w, r0, c9.x
mul r0.w, r0, r1.x
mul_pp r2.y, c3.x, c3.x
mul_pp r1.x, r3.w, r2.y
mul_pp r1.x, r3.w, r1
rcp r2.z, r1.x
pow_pp r1, r3.w, c12.z
mul_pp r1.y, r3.w, r3.w
add r1.y, r1, c8
mul r3.y, r1, r2.z
mov_pp r2.z, r1.x
pow r1, c12.w, r3.y
mul r1.y, r2, r2.z
mov r1.z, r1.x
mul r1.y, r1, c12.z
rcp r1.x, r1.y
mul r2.y, r1.x, r1.z
texld r1, v0, s3
mul r2.y, r1.w, r2
mul r0.w, r0, r2.y
rcp_pp r2.x, r2.x
mul_pp r2.x, r0.w, r2
add r0.w, r3.x, c8
mul_pp r2.xyz, r2.x, c2
dp3 r3.x, v1, v1
rsq r3.x, r3.x
mul r4.xyz, r3.x, v1
mul_pp r2.xyz, r1.x, r2
dp3 r4.w, r0, r4
texld r3.xyz, v0, s2
mul_pp r4.xyz, r3, c1
max r3.w, r3, c9.x
mul_pp r3.xyz, r4, c0
mul_pp r3.xyz, r3, r3.w
mul_pp r2.xyz, r2, c0
mad_pp r2.xyz, r3, r0.w, r2
max r0.w, r4, c9.x
texldp r3.x, v7, s5
mul_pp r5.xyz, r3.x, r2
dp3_pp r3.x, v2, r0
dp3_pp r3.y, r0, v3
dp3_pp r3.z, r0, v4
add_pp r3.w, -r0, c8
pow_pp r0, r3.w, c6.x
mov_pp r0.y, r0.x
mad_sat r0.y, r2.w, r0, c5.x
mul_pp r0.x, r1.w, c3
mov r2.x, v2.w
mov r2.z, v4.w
mov r2.y, v3.w
dp3 r4.w, r3, r2
mul r3.xyz, r3, r4.w
mad r2.xyz, -r3, c8.x, r2
max r0.w, r0.y, c9.x
mul_pp r2.w, r0.x, c8.z
texldl r0.xyz, r2, s4
mul_pp r0.xyz, r0, r0.w
mul_pp r2.xyz, r4, v6
mul_pp r0.xyz, r0, c4.x
mad_pp r2.xyz, r5, c8.x, r2
mul_pp r0.xyz, r0, r1
mad_pp oC0.xyz, r0, c0, r2
mov_pp oC0.w, c8
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Float 4 [_Reflective]
Vector 2 [cSpecular]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [_BumpMap] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 106.67 (80 instructions), vertex: 0, texture: 24,
//   sequencer: 32, interpolator: 32;    16 GPRs, 12 threads,
// Performance (if enough threads): ~106 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacjaaaaaaepeaaaaaaaaaaaaaaceaaaaacciaaaaacfaaaaaaaaa
aaaaaaaaaaaaacaaaaaaaabmaaaaabpeppppadaaaaaaaaanaaaaaabmaaaaaaaa
aaaaabonaaaaabcaaaadaaacaaabaaaaaaaaabcmaaaaaaaaaaaaabdmaaacaaab
aaabaaaaaaaaabeeaaaaaaaaaaaaabfeaaadaaaeaaabaaaaaaaaabfmaaaaaaaa
aaaaabgmaaacaaaaaaabaaaaaaaaabeeaaaaaaaaaaaaabhjaaadaaabaaabaaaa
aaaaabcmaaaaaaaaaaaaabicaaacaaaeaaabaaaaaaaaabjaaaaaaaaaaaaaabka
aaadaaaaaaabaaaaaaaaabcmaaaaaaaaaaaaablcaaadaaadaaabaaaaaaaaabcm
aaaaaaaaaaaaablpaaacaaacaaabaaaaaaaaabeeaaaaaaaaaaaaabmjaaacaaaf
aaabaaaaaaaaabjaaaaaaaaaaaaaabnbaaacaaagaaabaaaaaaaaabjaaaaaaaaa
aaaaabniaaacaaahaaabaaaaaaaaabjaaaaaaaaaaaaaabocaaacaaadaaabaaaa
aaaaabjaaaaaaaaafpechfgnhaengbhaaaklklklaaaeaaamaaabaaabaaabaaaa
aaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpedhfgc
gfaaklklaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcda
aafpengbgjgofegfhiaafpfcgfgggmgfgdhegjhggfaaklklaaaaaaadaaabaaab
aaabaaaaaaaaaaaafpfdgigbgegphhengbhafegfhihehfhcgfaafpfdhagfgdhf
gmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaagghcgffagphhaa
gphcgfgoeogbhjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodaco
dcdadddfddcodaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaaca
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaaehebaaaapaaaaaaaaae
aaaaaaaaaaaahfaiaappaappaaaaaaabaaaapafaaaaahbfbaaaapcfcaaaapdfd
aaaapefeaaaahfffaaaahgfgaaaaphfhaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
dnjibgchdpiaaaaadpmjankelmjjgodaeaiaaaaaeaoaaaaalofjdeieeaejapnl
maaaaaaadplikkdlmaejapnldpmaaaaalpiaaaaadpbbolifdnlifbomeamjapnl
doccpjiddpaaaaaadoogggggaaaaaaaaajfagaaigaaobcaabcaaaaaaaaaagabe
gabkbcaabcaaaaaaaaaagacagacgbcaabcaaaaaaaaaagacmgadcbcaabcaaaaaa
aaaagadigadobcaabcaaaaaaaaaagaeedaekbcaabcaaaabfaaaaaaaagaenmeaa
bcaaaaaaaaaagafdfafjbcaaccaaaaaaemiiabafaaloloblpaafafahmiadaaah
aabllaaaobabahaabadaiaabbpbppgiiaaaaeaaabaainaobbpbpppmhaaaaeaaa
dicaaaabbpbppghpaaaaeaaamiaiaaabaaloloaapaababaaaiegaoahaagmlmgm
abadpmahfiedaaaoaamhmhbloaaaaaifkmioaoajaamgpmefobaaafadmiapaaaf
aamapmaakaaopoaamiabaaakaegngnlbnbafafplfiimabaaaakmkmblobafafib
aaboajakaablpmmlobababaakaipaaalaaaaaagmoaajakikfiecaaabaamdmdgm
paalalilficfababaalamglbobafaaibbeahaaalaabflbmgobalabaaanieabaa
aamdloblpaakalaamjaiaaanaamdmpaapaakabaaajbcamamaampmdgmnaabajad
beacaaalabmpmdgmnaabajafaeibalalaamdmplbnaakabplmiahaaakaebegmbf
olabalakmiahaaajaebelbbfolabalajaaebamapaamplolbpaabacambeaeaaap
aamplogmpaabadapambeananaamgblblobapadacemicamabaamgblmgobamanaa
aaecaaapaamploggpaabaeanaainagabaaonlblbobamamanmiaiaaahaalbblmg
olapaeaaaiieakalaalologmpaakajabemcdakajaelalamgofalalafmiadaaac
aalablgmililplplememakaaaaomblblkcalppafliedaaafaegnlbiciailplpl
kabhakanaabfbdlbobabamifmiadaaacaalalamgmlacilpmkacoakafaaagabgm
obaoakifmiadaaalaalalamgmlacilpleaebaaacaamglbmgkdanpliaemeeakaa
aamggmlbkbaaagandiieakajaagmgmmgodacanaalmehalanabmalmiaibakpnpl
emehaaabaamamablobanalafdibdabaoaalablmgkaabpmabmiabaaahaagmmgaa
obabaaaamiamaaaoaaomblaaobahaiaamiahaaajaamamaaaobaoajaamiadaaab
aalalalaolalakajbibeafaaaagmlbgbocabababkicnafafaaononecibafpppp
miadaaabaamflbaakaafppaamiadaaabaalaaaaaoiabaaaamiadaaacaagnblaa
kbabpoaalabaabaaaaaaaamaocaaaapnmeecababaablblgmoaahahabmabiabab
aablblgmobafaaabemibapabaablgmmgobabababmiapaaahaalappaaobabapaa
beacaaabafblblmgoaahadahaeebababaelbblbloaahacaemiapaaabaakgmnaa
pcababaaemeeacadaablblmgocababibmiamaaacaahbmgaaobabacaamialaaad
aalkmlaakaacpnaapmaiabniapbpppppaaaaaaaajaeibagbcpbppeehaaaamaaa
babiaaabbpbppoiiaaaaeaaamiahaaaeaamamaaakbaaabaamiahaaanaamamaaa
kbaeaaaamiapaaacaaaalbaaobanamaalaeaaaaaaaaaaamdocaaaapomjacaaaa
aablblgmmlalakafembbabaaaamglbmgobajaaaamiapaaaaaahbffaaobaaabaa
miahaaaaaamagmaakbaaaeaamiahaaabaablmaaakbaaacaamiahaaabaamagmaa
obabaiaamiahaaaaaaleleaaobaaaiaalmihaaaaaalemaieibaaaaplmiahaaaa
aamamamaolaeagaamaihababaamamablkbabaaadmiaiaaaaaagmblblolahabaa
miahaaabaaleblleolacaaabmiipmaaaaaleblmaolabagaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [_Reflective]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [_ShadowMapTexture] 2D
"sce_fp_rsx // 185 instructions using 5 registers
[Configuration]
24
ffffffff003fc02000ffff00000000000000840005000000
[Offsets]
8
_LightColor0 3 0
00000b800000090000000860
_Color 1 0
00000800
cSpecular 1 0
000008e0
roughnessV 2 0
0000097000000040
_Reflective 1 0
00000b20
freBias 4 0
00000aa000000a70000004a000000450
frePow 2 0
00000a30000003d0
orenNayar 1 0
00000600
[Microcode]
2960
940017005c011c9dc8000001c8003fe106800440ce001c9daa02000054020001
00000000000040000000bf80000000001082024000021c9c00020000c8000001
00000000000000000000000000000000ae8a3940c8011c9dc8000029c800bfe1
08800240ab001c9cab000000c80000010880044001001c9e01000000c9000003
08800340c9001c9d00020000c800000100003f80000000000000000000000000
08803b40c9003c9d55000001c80000010e883940c9001c9dc8000029c8000001
02840540c9101c9dc9140001c80000012e823941c8011c9dc8000029c800bfe1
0e800340c9141c9dc9040001c800000104840540c9101c9dc9040001c8000001
02868540c9101c9dc9140001c80000011080034001083c9e00020000c8000001
00003f80000000000000000000000000108a090001081c9c00020000c8000001
0000000000000000000000000000000006020100c8041c9dc8000001c8000001
10888540c9101c9dc9040001c80000011086044001083c9c00020000aa020000
6000bc9920003d9800000000000000000e803940c9001c9dc8000029c8000001
028c8540c9141c9dc9000001c800000108861b40ff001c9dc8000001c8000001
0e820100c9041c9dc8000001c80000010e820440c9101c9fab080000c9040001
1086044001083c9cc90c0001000200004000be59000000000000000000000000
0e800440c9101c9f01080000c91400011086044001083c9cc90c000100020000
00003fc900000000000000000000000004860540c9001c9dc9040001c8000001
08001d00ff101c9dc8002001c8000001088a0240ff101c9dff040001c8000001
02000100ff101c9dc8001001c80000010804020000001c9c010c0000c8000001
08863a40ff0c1c9d550c0001c80000010402020000001c9cff100001c8000001
04061c0054001c9dc8000001c8000001a4000500c8011c9dc8010001c800bfe1
10000100c8001c9dc8000001c8000001028e0340ff141c9f00020000c8000001
00003f8000000000000000000000000010000200c9041c9daa0c2000c8000001
02003a0054081c9dc9180001c800000110860440ab083c9c00020000aa020000
6000bc9920003d98000000000000000010063a00aa041c9cc9180001c8000001
088c0a40ab081c9c00020000c800000100000000000000000000000000000000
028c0240ff101c9d55140001c800000102821d00c91c1c9dc8000001c8000001
02061a00c9181c9dc8000001c8000001028a0240ff101c9dff100001c8000001
02060400c9141c9dc80c0001c80c000302000800c8001c9dfe0c0001c8000001
1092020001041c9c00020000c800000100000000000000000000000000000000
02000800c8001c9d00020000c800000100003f80000000000000000000000000
ae083b00c8011c9daa000000c800bfe110080100c8101c9dc8000001c8000001
02080500c9101c9dc8100001c8000001028a1c40ff241c9dc8000001c8000001
1006040001141c9c000200020114000000000000000000000000000000000000
02060200c80c1c9daa020000c800000100000000aa3a3fb80000000000000000
08001c00c80c1c9dc8000001c800000104008300fe0c1c9d00020000c8000001
0000000000000000000000000000000010060900aa001c9c00020000c8000001
0000000000000000000000000000000004023a0054001c9dfe000001c8000001
02060200fe0c1c9dc8000001c80000019e001706c8011c9dc8000001c8003fe1
10060200c8001c9daa040000c8000001108c0200000c1c9cc80c0001c8000001
10840340ab083c9e00020000c800000100003f80000000000000000000000000
de8a0140c8011c9dc8000001c8003fe1028e0540c9141c9dc9100001c8000001
108e0a4001081c9c00020000c800000100000000000000000000000000000000
08841b40ff081c9dc8000001c800000102840240ff1c1c9d550c1001c8000001
048c0340550c1c9d01080002c800000102840440ab083c9cff0c000100020000
4000be59000000000000000000000000048c0440ff1c1c9daa020000c9180001
00000000000040490000000000000000108e024000021c9c00020000c8000001
0000000000000000000000000000000002840440ab083c9cc908000100020000
00003fc900000000000000000000000010020300c91c1c9daa020000c8000001
0000000051ec3db80000000000000000028c3a40c9081c9d55080001c8000001
1084024055181c9d01181000c800000102840340c9181c9dff080003c8000001
028c044055181c9d00020000c908000100004049000000000000000000000000
04023a00ff1c1c9dfe040001c800000110860940ab181c9c01180000c8000001
02020900ab0c1c9c00020000c800000100000000000000000000000000000000
04862340ff0c1c9dc8000001c800000102020200aa041c9cc8040001c8000001
10840840ab181c9c01180000c800000108842340ff081c9dc8000001c8000001
10020300c91c1c9d00020000c8000001eb853f11000000000000000000000000
10842240ff081c9dc8000001c800000108843a40c9081c9dff080001c8000001
04860240c90c1c9d55080001c800000102020200c8041c9dab0c0000c8000001
10023a00c91c1c9dfe045001c80000011002040000041c9c00020000c8040003
66663ee6000000000000000000000000108e0240c9101c9d010c0000c8000001
10060900c91c1c9d00020000c800000100000000000000000000000000000000
8e021704c8011c9dc8000001c8003fe10e8c0240c8041c9dc8020001c8000001
0000000000000000000000000000000002860300fe0c1c9d00020000c8000001
51ec3db8000000000000000000000000108e0900c9101c9daa020000c8000001
000000000000000000000000000000000e840240c9181c9dc8020001c8000001
0000000000000000000000000000000010840300c8041c9dc8020001c8000001
00000000000000000000000000003f8010863a40c9181c9dc90c0001c8000001
0e840240c9081c9dff1c0001c80000010e860240c9081c9dff080001c8000001
1084024000001c9cc90c0001c80000010e840240ff081c9dc8020001c8000001
000000000000000000000000000000000e8a0440c9081c9dc8020001c90c0001
000000000000000000000000000000001e860141c8011c9dc8000001c8003fe1
088e0540c9101c9dc90c0001c8000001fe840140c8011c9dc8000001c8003fe1
02860900c8101c9d00020000c800000100000000000000000000000000000000
04860240fe001c9d00020000c800000100000000000000000000000000000000
048e0540c9101c9dc9080001c800000104840140ff081c9dc8000001c8000001
10840340010c1c9e00020000c800000100003f80000000000000000000000000
10841d00ff081c9dc8000001c800000108840140ff0c1c9dc8000001c8000001
02840140ff141c9dc8000001c800000108860240ab0c1c9c00020000c8000001
000040e000000000000000000000000008020500c91c1c9dc9081001c8000001
10860200c9081c9d00020000c800000100000000000000000000000000000000
0e020400c91c1c9f54040001c908000108821c40ff0c1c9dc8000001c8000001
1000040055041c9d000200025504000100000000000000000000000000000000
4e8c0241c9181c9dc8015001c8003fe110068300c8001c9d00020000c8000001
0000000000000000000000000000000018040100c8081c9dc8000001c8000001
6204180bc8011c9dc8000001c8003fe110880900c80c1c9d00020000c8000001
000000000000000000000000000000000e88044000081c9cc9141001c9180001
0e022f08c8041c9d550c0001c800000110860240c9101c9d00020000c8000001
000000000000000000000000000000000e840240c8041c9dff0c0001c8000001
0e800240c9081c9dc8000001c80000011080014000021c9cc8000001c8000001
00003f800000000000000000000000000e810440c9001c9dc8020001c9100001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 164 [_Reflective]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 2
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_SpecularMap] 2D 3
SetTexture 3 [_Cube] CUBE 4
SetTexture 4 [_ShadowMapTexture] 2D 0
// 123 instructions, 6 temp regs, 0 temp arrays:
// ALU 83 float, 0 int, 2 uint
// TEX 4 (1 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedlpdpnjjbhegobcjchnccnaenanceknkiabaaaaaabibbaaaaadaaaaaa
cmaaaaaacmabaaaagaabaaaaejfdeheopiaaaaaaajaaaaaaaiaaaaaaoaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaomaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaomaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaomaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaaomaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaaomaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaaomaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
ahahaaaaomaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaahahaaaaomaaaaaa
ahaaaaaaaaaaaaaaadaaaaaaaiaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefclaapaaaaeaaaaaaaomadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafidaaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadpcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagcbaaaad
pcbabaaaafaaaaaagcbaaaadhcbabaaaagaaaaaagcbaaaadhcbabaaaahaaaaaa
gcbaaaadlcbabaaaaiaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaa
baaaaaahbcaabaaaaaaaaaaaegbcbaaaagaaaaaaegbcbaaaagaaaaaaeeaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaa
aaaaaaaaagbjbaaaagaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaa
abaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialp
aaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaabaaaaaaakaabaiaebaaaaaa
abaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaaabaaaaaa
bkaabaiaebaaaaaaabaaaaaabkaabaaaabaaaaaadkaabaaaabaaaaaaelaaaaaf
ecaabaaaabaaaaaadkaabaaaabaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaabaaaaaajgahbaaaaaaaaaaadcaaaaakocaabaaa
aaaaaaaaagajbaiaebaaaaaaabaaaaaapgapbaaaabaaaaaafgaobaaaaaaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaacaaaaaabaaaaaahbcaabaaaadaaaaaajgahbaaaacaaaaaa
egacbaaaabaaaaaadcaaaaakccaabaaaadaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaadaaaaaabkaabaaa
adaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
adaaaaaabkaabaaaadaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaadaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaadaaaaaackaabaaaadaaaaaadiaaaaahicaabaaaadaaaaaa
ckaabaaaadaaaaaabkaabaaaadaaaaaadcaaaaajicaabaaaadaaaaaadkaabaaa
adaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaibcaabaaaaeaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaaabaaaaahicaabaaaadaaaaaa
dkaabaaaadaaaaaaakaabaaaaeaaaaaadcaaaaajccaabaaaadaaaaaabkaabaaa
adaaaaaackaabaaaadaaaaaadkaabaaaadaaaaaaddaaaaahecaabaaaadaaaaaa
akaabaaaacaaaaaabkaabaaaadaaaaaadeaaaaahbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaadaaaaaaenaaaaagbcaabaaaacaaaaaaaanaaaaaakaabaaa
acaaaaaaenaaaaahbcaabaaaaeaaaaaabcaabaaaafaaaaaackaabaaaadaaaaaa
aoaaaaahccaabaaaadaaaaaaakaabaaaaeaaaaaaakaabaaaafaaaaaadiaaaaah
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaadaaaaaadiaaaaajccaabaaa
adaaaaaaakiacaaaaaaaaaaaalaaaaaaakiacaaaaaaaaaaaalaaaaaadcaaaaao
mcaabaaaadaaaaaaagiacaaaaaaaaaaaalaaaaaaagiacaaaaaaaaaaaalaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaifolbbdpomfblidnaoaaaaahgcaabaaaadaaaaaa
fgafbaaaadaaaaaakgalbaaaadaaaaaadcaaaaakccaabaaaadaaaaaabkaabaia
ebaaaaaaadaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahecaabaaa
adaaaaaackaabaaaadaaaaaaabeaaaaaggggogdodcaaaaakhcaabaaaaeaaaaaa
egacbaiaebaaaaaaabaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaadeaaaaah
bcaabaaaadaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaabaaaaaahccaabaaa
aaaaaaaaegacbaaaaeaaaaaajgahbaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaabeaaaaaaaaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaackaabaaaadaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaaaacaaaaaabkaabaaaadaaaaaadcaaaaajncaabaaaaaaaaaaaagbjbaaa
agaaaaaaagaabaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaacaaaaaa
igadbaaaaaaaaaaaigadbaaaaaaaaaaaeeaaaaafbcaabaaaacaaaaaaakaabaaa
acaaaaaadiaaaaahncaabaaaaaaaaaaaagaobaaaaaaaaaaaagaabaaaacaaaaaa
bacaaaahbcaabaaaaaaaaaaajgahbaaaacaaaaaaigadbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaacaaaaaaakaabaaa
adaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaacaaaaaaakaabaiaebaaaaaa
adaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaaiccaabaaaacaaaaaabkaabaaaacaaaaaadkiacaaaaaaaaaaaakaaaaaa
bjaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaaaaaaaaadkaabaaa
aaaaaaaaakaabaaaaaaaaaaaddaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaacaaaaaackiacaaaaaaaaaaaakaaaaaadiaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahccaabaaaacaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajecaabaaaacaaaaaaakiacaaa
aaaaaaaaakaaaaaaakiacaaaaaaaaaaaakaaaaaadiaaaaahicaabaaaacaaaaaa
ckaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahccaabaaaacaaaaaabkaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaackaabaaaacaaaaaa
abeaaaaaaaaaiaeadiaaaaahccaabaaaacaaaaaabkaabaaaacaaaaaackaabaaa
acaaaaaaaoaaaaakccaabaaaacaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpbkaabaaaacaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaacaaaaaaefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaadaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaadkaabaaaadaaaaaadiaaaaahbcaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakaabaaaaaaaaaaaaoaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaagaabaaaaaaaaaaa
egiccaaaaaaaaaaaajaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaadaaaaaa
egacbaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaaeaaaaaaegacbaaaaeaaaaaa
egiccaaaaaaaaaaaahaaaaaadiaaaaaihcaabaaaafaaaaaaegacbaaaaeaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaaeaaaaaaegacbaaaaeaaaaaa
egbcbaaaahaaaaaadiaaaaahhcaabaaaafaaaaaapgapbaaaabaaaaaaegacbaaa
afaaaaaadcaaaaajlcaabaaaaaaaaaaaegaibaaaafaaaaaafgafbaaaaaaaaaaa
egaibaaaacaaaaaaaoaaaaahdcaabaaaacaaaaaaegbabaaaaiaaaaaapgbpbaaa
aiaaaaaaefaaaaajpcaabaaaacaaaaaaegaabaaaacaaaaaaeghobaaaaeaaaaaa
aagabaaaaaaaaaaaaaaaaaahicaabaaaabaaaaaaakaabaaaacaaaaaaakaabaaa
acaaaaaadcaaaaajlcaabaaaaaaaaaaaegambaaaaaaaaaaapgapbaaaabaaaaaa
egaibaaaaeaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaadaaaaaaegacbaaa
abaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaaaeaaaaaaegacbaaaabaaaaaa
baaaaaahecaabaaaacaaaaaaegbcbaaaafaaaaaaegacbaaaabaaaaaadgaaaaaf
bcaabaaaabaaaaaadkbabaaaadaaaaaadgaaaaafccaabaaaabaaaaaadkbabaaa
aeaaaaaadgaaaaafecaabaaaabaaaaaadkbabaaaafaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaaaaaaaahicaabaaaabaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
acaaaaaapgapbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaadiaaaaaiicaabaaa
abaaaaaadkaabaaaadaaaaaaakiacaaaaaaaaaaaakaaaaaadiaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaoaeaeiaaaaalpcaabaaaabaaaaaa
egacbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaeaaaaaadkaabaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaafgifcaaaaaaaaaaaakaaaaaadiaaaaah
hcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaa
aaaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaaegadbaaaaaaaaaaa
dgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [roughnessV]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [_ShadowMapTexture] 2D
SetTexture 6 [unity_Lightmap] 2D
"ps_3_0
; 48 ALU, 7 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_2d s6
def c6, 8.00000000, 2.00000000, -1.00000000, 7.00000000
def c7, 1.00000000, 0.00000000, 0, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3
dcl_texcoord4 v4
dcl_texcoord5 v5.xy
dcl_texcoord6 v6
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c6.y, c6.z
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c7.x
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r0.xyz, r0.w, r0
dp3 r1.x, v1, v1
rsq r1.x, r1.x
mul r1.xyz, r1.x, v1
dp3 r0.w, r0, r1
max r0.w, r0, c7.y
add_pp r1.w, -r0, c7.x
dp3_pp r2.x, v2, r0
dp3_pp r2.y, r0, v3
dp3_pp r2.z, r0, v4
pow_pp r0, r1.w, c5.x
mov r1.w, c4.x
mov r1.x, v2.w
mov r1.z, v4.w
mov r1.y, v3.w
dp3 r2.w, r2, r1
mul r2.xyz, r2, r2.w
mad r1.xyz, -r2, c6.y, r1
mov_pp r2.x, r0
texld r0, v0, s3
add r1.w, c7.x, -r1
mad_sat r2.x, r1.w, r2, c4
mul_pp r0.w, r0, c2.x
mul_pp r1.w, r0, c6
max r0.w, r2.x, c7.y
texldl r1.xyz, r1, s4
mul_pp r1.xyz, r1, r0.w
mul_pp r1.xyz, r1, c3.x
mul_pp r0.xyz, r1, r0
mul_pp r2.xyz, r0, c0
texldp r3.x, v6, s5
texld r0, v5, s6
mul_pp r1.xyz, r0, r3.x
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r0, c6.x
mul_pp r1.xyz, r1, c6.y
min_pp r1.xyz, r0, r1
mul_pp r3.xyz, r0, r3.x
texld r0.xyz, v0, s2
max_pp r1.xyz, r1, r3
mul_pp r0.xyz, r0, c1
mad_pp oC0.xyz, r0, r1, r2
mov_pp oC0.w, c7.y
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
Float 2 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [_BumpMap] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [unity_Lightmap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 49.33 (37 instructions), vertex: 0, texture: 28,
//   sequencer: 18, interpolator: 28;    9 GPRs, 21 threads,
// Performance (if enough threads): ~49 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacheaaaaacjiaaaaaaaaaaaaaaceaaaaacbaaaaaacdiaaaaaaaa
aaaaaaaaaaaaaboiaaaaaabmaaaaabnlppppadaaaaaaaaamaaaaaabmaaaaaaaa
aaaaabneaaaaabamaaadaaacaaabaaaaaaaaabbiaaaaaaaaaaaaabciaaacaaab
aaabaaaaaaaaabdaaaaaaaaaaaaaabeaaaadaaaeaaabaaaaaaaaabeiaaaaaaaa
aaaaabfiaaacaaaaaaabaaaaaaaaabdaaaaaaaaaaaaaabgfaaadaaabaaabaaaa
aaaaabbiaaaaaaaaaaaaabgoaaacaaadaaabaaaaaaaaabhmaaaaaaaaaaaaabim
aaadaaaaaaabaaaaaaaaabbiaaaaaaaaaaaaabjoaaadaaadaaabaaaaaaaaabbi
aaaaaaaaaaaaabklaaacaaaeaaabaaaaaaaaabhmaaaaaaaaaaaaabldaaacaaaf
aaabaaaaaaaaabhmaaaaaaaaaaaaablkaaacaaacaaabaaaaaaaaabhmaaaaaaaa
aaaaabmfaaadaaafaaabaaaaaaaaabbiaaaaaaaafpechfgnhaengbhaaaklklkl
aaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpedhfgcgfaaklklaaaeaaaoaaabaaabaaabaaaaaaaaaaaa
fpemgjghgiheedgpgmgphcdaaafpengbgjgofegfhiaafpfcgfgggmgfgdhegjhg
gfaaklklaaaaaaadaaabaaabaaabaaaaaaaaaaaafpfdgigbgegphhengbhafegf
hihehfhcgfaafpfdhagfgdhfgmgbhcengbhaaagghcgfecgjgbhdaagghcgffagp
hhaahcgphfghgigogfhdhdfgaahfgogjhehjfpemgjghgihegngbhaaahahdfpdd
fpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeabpmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaacfi
baaaaiaaaaaaaaaeaaaaaaaaaaaageohaahpaahpaaaaaaabaaaapafaaaaahbfb
aaaapcfcaaaapdfdaaaapefeaaaadfffaaaapgfgaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaoaaaaadpiaaaaaebaaaaaa
aaaaaaaaeaaaaaaaaaaaaaaalpiaaaaadpmaaaaaajfagaafgaalbcaabcaaaaaa
aaaagabbgabhbcaabcaaaaaaafaagabncacdbcaabcaaaaafaaaaaaaagacfmeaa
bcaaaaaaaaaagaclaaaaccaaaaaaaaaaemeiafabaaloloblpaababagmiamaaaf
aamgkmaaobafagaaliaifakbbpbppbppaaaaeaaabadagaabbpbppgiiaaaaeaaa
dicihaabbpbpppnjaaaaeaaamiadaaahaagngmmgilahppppmiaeaaafaegngnlb
nbahahpomiamaaahaakmkmaaobahahaafiieabaaaamgblbloaahahibkaieahaa
aamgmgmgoaaaafiffiehahaiaablmamgobababiamiahaaahaamabgaaobahahaa
beaeaaabaalologmnaahacacamibababaalologmnaahaepobeaeaaaaaalologm
paaiahabameeafaaaamglbblkcaappaeliecaaabaaloloicnaahadpomiaeaaaf
aalbblmgolabadafmiaeaaafaamgblmgolabacafeaeiaaaiaablblmgobabagia
kiieabaiaegmlbecaaaepoafdiidabaiaabkbkbloaafafabmiapaaahaaomaaaa
obaiabaabeacaaabaflbblgmoaahadahaeebababaemgblbloaahacaemiapaaab
aakgmnaapcababaaembeacacaablblmgocababibmiadaaacaagngmblmlabacpp
pmaiabbiapbpppppaaaaaaaajaeibaebcpbppoiiaaaamaaababiaaabbpbppoec
aaaaeaaabaficakbbpbppgiiaaaaeaaakiiaaaaaaaaaaamdocaaaapomiahaaae
aablmaaaobaaacaamiahaaadaamablaaobaeafaamiahaaacaalbmaaaobaiacaa
beihaaacaamamablodaeacahlcbhadacaamamaedmcadacaemiagaaadaagmmbaa
obadabaamiaoaaabaaebgmaakbadadaakibbadabaablgmebmbabababkichadab
aamamaicmbabagabkiehadabaamamamaibabaaabmiahmaaaaamamamaoladacab
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Float 2 [roughnessV]
Float 3 [_Reflective]
Float 4 [freBias]
Float 5 [frePow]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_Cube] CUBE
SetTexture 5 [_ShadowMapTexture] 2D
SetTexture 6 [unity_Lightmap] 2D
"sce_fp_rsx // 66 instructions using 4 registers
[Configuration]
24
ffffffff001fc020007fffa0000000000000840004000000
[Offsets]
6
_LightColor0 1 0
00000410
_Color 2 0
000003a000000310
roughnessV 1 0
000002d0
_Reflective 1 0
00000360
freBias 2 0
0000027000000220
frePow 1 0
000001c0
[Microcode]
1056
940017005c011c9dc8000001c8003fe106800440ce001c9d00020000aa020000
000040000000bf80000000000000000010800240ab001c9cab000000c8000001
a8000500c8011c9dc8010001c800bfe10880044001001c9e01000000ff000003
1080034055001c9d00020000c800000100003f80000000000000000000000000
ae023b00c8011c9d54000001c800bfe1de8a0140c8011c9dc8000001c8003fe1
4206180bc8011c9dc8000001c8003fe108803b40ff003c9dff000001c8000001
0e803940c9001c9dc8000029c800000108000500c9001c9dc8040001c8000001
fe880140c8011c9dc8000001c8003fe102840540c9141c9dc9000001c8000001
1084090054001c9d00020000c800000100000000000000000000000000000000
1e860141c8011c9dc8000001c8003fe104840540c9001c9dc9100001c8000001
08840540c9001c9dc90c0001c800000110840340c9081c9f00020000c8000001
00003f800000000000000000000000003e00170dc8011c9dc8000001c8003fe1
0e860240fe001c9dc8003001c800000108821d00ff081c9dc8000001c8000001
0e8e0240c90c1c9d000c0000c80000010288020055041c9d00020000c8000001
000000000000000000000000000000000e8c0240c8001c9d000c1000c8000001
0e8c0840c90c1c9dc9180001c800000110841c40c9101c9dc8000001c8000001
02860140ff141c9dc8000001c800000110040400c9081c9d00020002c9080001
0000000000000000000000000000000004860140ff101c9dc8000001c8000001
08860140ff0c1c9dc8000001c800000102040500c9081c9dc90c1001c8000001
10048300c8081c9d00020000c800000100000000000000000000000000000000
108a0900c8081c9d00020000c800000100000000000000000000000000000000
0e040400c9081c9f00080000c90c00019e001706c8011c9dc8000001c8003fe1
10820240c8001c9d00020000c800000100000000000000000000000000000000
0e8c0940c9181c9dc91c0001c80000018e021704c8011c9dc8000001c8003fe1
06840240c8041c9d08020000c800000100000000000000000000000000000000
10820240c9041c9d54020001c80000010000000000000000000040e000000000
0e042f08c8081c9dff040001c8000001108a0240c9141c9d00020000c8000001
000000000000000000000000000000000e880240c8081c9dff140001c8000001
0e880240c9101c9dc8000001c80000011080024054041c9d54020001c8000001
0000000000000000000000000000000006020100c8041c9dc8000001c8000001
08800240ff001c9dc9180001c800000106800240c9081c9dc9180001c8000001
1080014000021c9cc8000001c800000100000000000000000000000000000000
0e810440c9101c9dc8020001c900000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 240 // 176 used size, 16 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Float 160 [roughnessV]
Float 164 [_Reflective]
Float 168 [freBias]
Float 172 [frePow]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 2
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_SpecularMap] 2D 3
SetTexture 3 [_Cube] CUBE 4
SetTexture 4 [_ShadowMapTexture] 2D 0
SetTexture 5 [unity_Lightmap] 2D 5
// 51 instructions, 4 temp regs, 0 temp arrays:
// ALU 34 float, 0 int, 0 uint
// TEX 5 (1 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedgamlafhalhdemglpgkmepdfeebjiaobdabaaaaaafmaiaaaaadaaaaaa
cmaaaaaabeabaaaaeiabaaaaejfdeheooaaaaaaaaiaaaaaaaiaaaaaamiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaneaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaneaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaneaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapapaaaaneaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaaneaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaaneaaaaaaafaaaaaaaaaaaaaaadaaaaaaagaaaaaa
adadaaaaneaaaaaaagaaaaaaaaaaaaaaadaaaaaaahaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcamahaaaaeaaaaaaamdabaaaafjaaaaaeegiocaaa
aaaaaaaaalaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fidaaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadpcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaa
gcbaaaadpcbabaaaafaaaaaagcbaaaaddcbabaaaagaaaaaagcbaaaadlcbabaaa
ahaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaa
aaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaap
dcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadp
dcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaa
dkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaadaaaaaaegacbaaa
aaaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaaeaaaaaaegacbaaaaaaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaafaaaaaaegacbaaaaaaaaaaadgaaaaaf
bcaabaaaacaaaaaadkbabaaaadaaaaaadgaaaaafccaabaaaacaaaaaadkbabaaa
aeaaaaaadgaaaaafecaabaaaacaaaaaadkbabaaaafaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaaaaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaiaebaaaaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaadaaaaaadiaaaaai
icaabaaaaaaaaaaadkaabaaaacaaaaaaakiacaaaaaaaaaaaakaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaoaeaeiaaaaalpcaabaaa
abaaaaaaegacbaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaeaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
adaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaaaaaaaaaibcaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpcpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaai
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaackiacaia
ebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdccaaaakbcaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaackiacaaaaaaaaaaaakaaaaaadiaaaaah
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
aaaaaaaaegacbaaaaaaaaaaafgifcaaaaaaaaaaaakaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaaaoaaaaahdcaabaaaabaaaaaa
egbabaaaahaaaaaapgbpbaaaahaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaaaaaaaaahicaabaaaaaaaaaaa
akaabaaaabaaaaaaakaabaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
agaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadiaaaaahocaabaaaabaaaaaa
pgapbaaaaaaaaaaaagajbaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaa
pgapbaaaaaaaaaaaddaaaaahocaabaaaabaaaaaafgaobaaaabaaaaaaagajbaaa
acaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaa
deaaaaahhcaabaaaabaaaaaajgahbaaaabaaaaaaegacbaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
dcaaaaajhccabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
aaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "SHADOWS_SCREEN" }
"!!GLES"
}

}
	}
	Pass {
		Name "FORWARD"
		Tags { "LightMode" = "ForwardAdd" }
		ZWrite Off Blend One One Fog { Color (0,0,0,0) }
Program "vp" {
// Vertex combos: 15
//   d3d9 - ALU: 32 to 45
//   d3d11 - ALU: 15 to 20, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(normalize(xlv_TEXCOORD1));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * (texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3))).w * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 18 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 19 [_MainTex_ST]
Vector 20 [_BumpMap_ST]
"vs_3_0
; 40 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c18.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 20 [_BumpMap_ST]
Matrix 15 [_LightMatrix0] 4
Vector 19 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Matrix 10 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 14 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 45.33 (34 instructions), vertex: 32, texture: 0,
//   sequencer: 18,  9 GPRs, 21 threads,
// Performance (if enough threads): ~45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdaaaaaacbaaaaaaaaaaaaaaaceaaaaaaaaaaaaabmmaaaaaaaa
aaaaaaaaaaaaabkeaaaaaabmaaaaabjhpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabjaaaaaaanaaaacaabeaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaap
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabdaaabaaaaaaaaaanmaaaaaaaa
aaaaabbiaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabcgaaacaaakaaaeaaaa
aaaaaapmaaaaaaaaaaaaabdeaaacaaaaaaabaaaaaaaaabemaaaaaaaaaaaaabfm
aaacaaabaaabaaaaaaaaaanmaaaaaaaaaaaaabhbaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabieaaacaaaoaaabaaaaaaaaaanmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphc
gmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaadaaabaaaa
aaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhdhegbhegf
fpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaacbaaadbaaaiaaaaaaaaaaaaaaaa
aaaadeieaaaaaaabaaaaaaaeaaaaaaahaaaaacjaaabaaaafaaaagaagaaaadaah
aacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaaaaacdaaaabaceaaaaaaca
aaaaaacbaaaabaccaaaabacjaaaabackpaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaagacfaaaaccaaaaaaaaaaafpieaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaamiapaaaa
aabliiaakbaeafaamiapaaaaaamgiiaaklaeaeaamiapaaaaaalbdejeklaeadaa
miapiadoaagmaadeklaeacaamiahaaabaamamgmaalamaaanmiahaaaaaaleblaa
cbanabaamiahaaahaamamgleclamabaamiahaaafaalogfaaobadagaamiapaaaa
aabliiaakbaeajaamiahaaabaalelbleclalaaabmiahaaabaamagmleclakaaab
miahaaafabgflomaoladagafmiapaaaaaamgiiaaklaeaiaamiahaaahaalelble
clalabahmiahaaahaamagmleclakabahmiapaaaaaalbdejeklaeahaamiahaaaf
aamablaaobafagaamiahaaaiabmablmaklabaoaemiacaaabaaloloaapaaiagaa
miaeaaabaaloloaapaafaiaamiaiaaabaaloloaapaaiadaamiapaaaaaagmejhk
klaeagaamiahaaaeabmablmaklahaoaemiabiaabaaloloaapaaeagaamiaciaab
aaloloaapaafaeaamiaeiaabaaloloaapaaeadaamiadiaaaaalalabkilacbdbd
miamiaaaaakmkmagilacbebemiabaaabaamdmdaapaababaafibhabacaalblegm
kbaabcibmiahaaacaamgmaleklaabbacmiahaaaaaagmleleklaabaacmiahiaac
aabfgmaaobababaamiahiaadaablmaleklaaapaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 465 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 35 instructions using 5 registers
[Configuration]
8
0000002341050500
[Microcode]
560
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d0e00d8086c0c360405fa8
401f9c6c01d0d00d8086c0c360409fa8401f9c6c01d0c00d8086c0c360411fa8
00001c6c011d100c02bfc0e30041dffc00009c6c00800e0c04bfc0836041dffc
00011c6c0140020c0106004360405ffc00011c6c01400e0c0106004360411ffc
00011c6c0140000c0286004360409ffc00001c6c011d100c08bfc0e30041dffc
00001c6c0140000c0486024360403ffc401f9c6c0140020c0106004360405fa0
401f9c6c21400e0c0086009fe02300a0401f9c6c0140000c0086014360409fa0
401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedmamleekneecpceeadhdpkdemebbpjfcnabaaaaaahaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneafaaaaeaaaabaa
hfabaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaa
kgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
ccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaa
aaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_11;
  highp float tmpvar_12;
  tmpvar_12 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTexture0, vec2(tmpvar_12));
  mediump vec3 lightDir_14;
  lightDir_14 = lightDir_2;
  mediump float atten_15;
  atten_15 = tmpvar_13.w;
  mediump vec4 c_16;
  mediump float B_17;
  mediump float A_18;
  highp float rough_sq_19;
  mediump vec3 Rs_numerator_20;
  highp float roughness_c_21;
  highp float roughness_b_22;
  highp float roughness_a_23;
  mediump float roughness_24;
  highp float geo_denominator_25;
  highp float geo_numerator_26;
  mediump vec3 n_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = normalize(lightDir_14);
  mediump vec3 tmpvar_30;
  tmpvar_30 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_31;
  tmpvar_31 = clamp (dot (n_27, tmpvar_29), 0.0, 1.0);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (n_27, tmpvar_30), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (tmpvar_30, normalize((tmpvar_29 + tmpvar_30))), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = (roughnessV * roughnessV);
  mediump float tmpvar_35;
  tmpvar_35 = (2.0 * tmpvar_31);
  geo_numerator_26 = tmpvar_35;
  geo_denominator_25 = tmpvar_33;
  mediump float tmpvar_36;
  tmpvar_36 = (1.0/(((4.0 * tmpvar_34) * pow (tmpvar_31, 4.0))));
  roughness_a_23 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_31 * tmpvar_31) - 1.0);
  roughness_b_22 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = ((tmpvar_34 * tmpvar_31) * tmpvar_31);
  roughness_c_21 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = ((roughness_a_23 * exp((roughness_b_22 / roughness_c_21))) * tmpvar_4);
  roughness_24 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_30, n_27), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_41;
  tmpvar_41 = vec3(((tmpvar_40 * min (1.0, min (((geo_numerator_26 * tmpvar_32) / geo_denominator_25), ((geo_numerator_26 * tmpvar_31) / geo_denominator_25)))) * roughness_24));
  Rs_numerator_20 = tmpvar_41;
  mediump float tmpvar_42;
  tmpvar_42 = (orenNayar * orenNayar);
  rough_sq_19 = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (1.0 - (0.5 * (rough_sq_19 / (rough_sq_19 + 0.57))));
  A_18 = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (0.45 * (rough_sq_19 / (rough_sq_19 + 0.09)));
  B_17 = tmpvar_44;
  mediump float x_45;
  x_45 = dot (tmpvar_30, n_27);
  mediump float x_46;
  x_46 = dot (tmpvar_29, n_27);
  mediump float x_47;
  x_47 = dot (tmpvar_30, n_27);
  mediump float x_48;
  x_48 = dot (tmpvar_29, n_27);
  mediump float tmpvar_49;
  tmpvar_49 = min ((1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))), (1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))));
  c_16.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_31))) * vec3((A_18 + ((B_17 * max (0.0, dot ((tmpvar_30 - (n_27 * dot (tmpvar_30, n_27))), (tmpvar_29 - (n_27 * dot (tmpvar_29, n_27)))))) * (sin(max ((1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))), (1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))))) * (sin(tmpvar_49) / cos(tmpvar_49))))))) + (((cSpecular.xyz * (Rs_numerator_20 / (max (0.0, (tmpvar_32 * tmpvar_31)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_15 * 2.0));
  c_16.w = 1.0;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13));
  mediump vec3 lightDir_15;
  lightDir_15 = lightDir_2;
  mediump float atten_16;
  atten_16 = tmpvar_14.w;
  mediump vec4 c_17;
  mediump float B_18;
  mediump float A_19;
  highp float rough_sq_20;
  mediump vec3 Rs_numerator_21;
  highp float roughness_c_22;
  highp float roughness_b_23;
  highp float roughness_a_24;
  mediump float roughness_25;
  highp float geo_denominator_26;
  highp float geo_numerator_27;
  mediump vec3 n_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = normalize(normal_7);
  n_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = normalize(lightDir_15);
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (n_28, tmpvar_30), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (n_28, tmpvar_31), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (tmpvar_31, normalize((tmpvar_30 + tmpvar_31))), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = (roughnessV * roughnessV);
  mediump float tmpvar_36;
  tmpvar_36 = (2.0 * tmpvar_32);
  geo_numerator_27 = tmpvar_36;
  geo_denominator_26 = tmpvar_34;
  mediump float tmpvar_37;
  tmpvar_37 = (1.0/(((4.0 * tmpvar_35) * pow (tmpvar_32, 4.0))));
  roughness_a_24 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = ((tmpvar_32 * tmpvar_32) - 1.0);
  roughness_b_23 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = ((tmpvar_35 * tmpvar_32) * tmpvar_32);
  roughness_c_22 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = ((roughness_a_24 * exp((roughness_b_23 / roughness_c_22))) * tmpvar_4);
  roughness_25 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_31, n_28), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_42;
  tmpvar_42 = vec3(((tmpvar_41 * min (1.0, min (((geo_numerator_27 * tmpvar_33) / geo_denominator_26), ((geo_numerator_27 * tmpvar_32) / geo_denominator_26)))) * roughness_25));
  Rs_numerator_21 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = (orenNayar * orenNayar);
  rough_sq_20 = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (1.0 - (0.5 * (rough_sq_20 / (rough_sq_20 + 0.57))));
  A_19 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = (0.45 * (rough_sq_20 / (rough_sq_20 + 0.09)));
  B_18 = tmpvar_45;
  mediump float x_46;
  x_46 = dot (tmpvar_31, n_28);
  mediump float x_47;
  x_47 = dot (tmpvar_30, n_28);
  mediump float x_48;
  x_48 = dot (tmpvar_31, n_28);
  mediump float x_49;
  x_49 = dot (tmpvar_30, n_28);
  mediump float tmpvar_50;
  tmpvar_50 = min ((1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))), (1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))));
  c_17.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_32))) * vec3((A_19 + ((B_18 * max (0.0, dot ((tmpvar_31 - (n_28 * dot (tmpvar_31, n_28))), (tmpvar_30 - (n_28 * dot (tmpvar_30, n_28)))))) * (sin(max ((1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))), (1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))))) * (sin(tmpvar_50) / cos(tmpvar_50))))))) + (((cSpecular.xyz * (Rs_numerator_21 / (max (0.0, (tmpvar_33 * tmpvar_32)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_16 * 2.0));
  c_17.w = 1.0;
  c_1.xyz = c_17.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;

uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * 2.0);
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_WorldSpaceLightPos0]
Matrix 4 [_World2Object]
Vector 10 [unity_Scale]
Vector 11 [_MainTex_ST]
Vector 12 [_BumpMap_ST]
"vs_3_0
; 32 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
def c13, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c13.x
mov r0.xyz, c8
dp4 r2.z, r0, c6
dp4 r2.x, r0, c4
dp4 r2.y, r0, c5
mad r0.xyz, r2, c10.w, -v0
mul r2.xyz, r1, v1.w
dp3 r1.y, r2, r0
dp3 r1.x, v1, r0
dp3 r1.z, v2, r0
dp3 r0.x, r1, r1
rsq r1.w, r0.x
mov r0, c6
dp4 r3.z, c9, r0
mul o3.xyz, r1.w, r1
mov r1, c4
mov r0, c5
dp4 r3.x, c9, r1
dp4 r3.y, c9, r0
dp3 o2.y, r3, r2
dp3 o2.z, v2, r3
dp3 o2.x, r3, v1
mad o1.zw, v3.xyxy, c12.xyxy, c12
mad o1.xy, v3, c11, c11.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 12 [_BumpMap_ST]
Vector 11 [_MainTex_ST]
Matrix 6 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 10 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 34.67 (26 instructions), vertex: 32, texture: 0,
//   sequencer: 16,  7 GPRs, 27 threads,
// Performance (if enough threads): ~34 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaaboeaaaaabkeaaaaaaaaaaaaaaceaaaaaaaaaaaaabiiaaaaaaaa
aaaaaaaaaaaaabgaaaaaaabmaaaaabfdpppoadaaaaaaaaahaaaaaabmaaaaaaaa
aaaaabemaaaaaakiaaacaaamaaabaaaaaaaaaaleaaaaaaaaaaaaaameaaacaaal
aaabaaaaaaaaaaleaaaaaaaaaaaaaanaaaacaaagaaaeaaaaaaaaaaoaaaaaaaaa
aaaaaapaaaacaaaaaaabaaaaaaaaabaiaaaaaaaaaaaaabbiaaacaaabaaabaaaa
aaaaaaleaaaaaaaaaaaaabcnaaacaaacaaaeaaaaaaaaaaoaaaaaaaaaaaaaabea
aaacaaakaaabaaaaaaaaaaleaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaad
aaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpfhgphcgmgedcep
gcgkgfgdheaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpfhgphcgmgefdha
gbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaadaaabaaaaaaaaaaaa
fpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhdhegbhegffpgngbhe
hcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadccodacodc
dadddfddcodaaaklaaaaaaaaaaaaabkeaacbaaagaaaaaaaaaaaaaaaaaaaacigd
aaaaaaabaaaaaaaeaaaaaaagaaaaacjaaabaaaaeaaaagaafaaaadaagaacafaah
aaaapafaaaachbfbaaafhcfcaaaaaabnaaaababoaaaaaabkaaaaaablaaaababm
aaaabacbpaffeaaeaaaabcaamcaaaaaaaaaaeaaiaaaabcaameaaaaaaaaaagaam
gabcbcaabcaaaaaaaaaagabieabobcaaccaaaaaaafpigaaaaaaaagiiaaaaaaaa
afpifaaaaaaaagiiaaaaaaaaafpicaaaaaaaaoiiaaaaaaaaafpibaaaaaaaapmi
aaaaaaaamiapaaaaaabliiaakbagafaamiapaaaaaamgiiaaklagaeaamiapaaaa
aalbdejeklagadaamiapiadoaagmaadeklagacaamiahaaaaaamamgmaalaiaaaj
miahaaadaaleblaacbajabaamiahaaadaamamgleclaiabadmiahaaaeaalogfaa
obacafaamiahaaaaaalelbleclahaaaamiahaaaaaamagmleclagaaaamiahaaae
abgflomaolacafaemiahaaadaalelbleclahabadmiahaaadaamagmleclagabad
miahaaaeaamablaaobaeafaamiahaaagabmablmaklaaakagmiacaaaaaaloloaa
paagafaamiaeaaaaaaloloaapaaeagaamiaiaaaaaaloloaapaagacaamiabiaab
aaloloaapaadafaamiaciaabaaloloaapaaeadaamiaeiaabaaloloaapaadacaa
miadiaaaaalalabkilabalalmiamiaaaaakmkmagilabamammiabaaaaaamdmdaa
paaaaaaafibaaaaaaaaaaagmocaaaaiamiahiaacaabfgmaaobaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_World2Object]
Vector 465 [unity_Scale]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 27 instructions using 5 registers
[Configuration]
8
0000001b41050500
[Microcode]
432
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c0190600c0686c0c360405ffc
00001c6c0190500c0686c0c360409ffc00001c6c0190400c0686c0c360411ffc
00021c6c01d0600d8286c0c360405ffc00021c6c01d0500d8286c0c360409ffc
00019c6c00800243011842436041dffc00011c6c010002308121826301a1dffc
00019c6c011d100c00bfc0e30041dffc00011c6c00800e0c04bfc0836041dffc
00001c6c0140020c0106034360405ffc00001c6c01400e0c0106034360411ffc
00001c6c0140000c0486034360409ffc00021c6c01d0400d8286c0c360411ffc
00001c6c0140000c0086004360403ffc401f9c6c0140020c0106044360405fa0
401f9c6c21400e0c0886009fe0230020401f9c6c0140000c0886024360409fa0
401f9c6c0080007f808600436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 160 // 160 used size, 14 vars
Vector 128 [_MainTex_ST] 4
Vector 144 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 28 instructions, 2 temp regs, 0 temp arrays:
// ALU 15 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedlnbdibmdlekigkhpadphhfikeomdpknaabaaaaaapaafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
gmaeaaaaeaaaabaablabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaaiaaaaaaogikcaaaaaaaaaaaaiaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaajaaaaaakgiocaaa
aaaaaaaaajaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  lightDir_2 = xlv_TEXCOORD1;
  mediump vec3 lightDir_11;
  lightDir_11 = lightDir_2;
  mediump vec4 c_12;
  mediump float B_13;
  mediump float A_14;
  highp float rough_sq_15;
  mediump vec3 Rs_numerator_16;
  highp float roughness_c_17;
  highp float roughness_b_18;
  highp float roughness_a_19;
  mediump float roughness_20;
  highp float geo_denominator_21;
  highp float geo_numerator_22;
  mediump vec3 n_23;
  lowp vec3 tmpvar_24;
  tmpvar_24 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_23 = tmpvar_24;
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(lightDir_11);
  mediump vec3 tmpvar_26;
  tmpvar_26 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_27;
  tmpvar_27 = clamp (dot (n_23, tmpvar_25), 0.0, 1.0);
  mediump float tmpvar_28;
  tmpvar_28 = clamp (dot (n_23, tmpvar_26), 0.0, 1.0);
  mediump float tmpvar_29;
  tmpvar_29 = clamp (dot (tmpvar_26, normalize((tmpvar_25 + tmpvar_26))), 0.0, 1.0);
  mediump float tmpvar_30;
  tmpvar_30 = (roughnessV * roughnessV);
  mediump float tmpvar_31;
  tmpvar_31 = (2.0 * tmpvar_27);
  geo_numerator_22 = tmpvar_31;
  geo_denominator_21 = tmpvar_29;
  mediump float tmpvar_32;
  tmpvar_32 = (1.0/(((4.0 * tmpvar_30) * pow (tmpvar_27, 4.0))));
  roughness_a_19 = tmpvar_32;
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_27 * tmpvar_27) - 1.0);
  roughness_b_18 = tmpvar_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_30 * tmpvar_27) * tmpvar_27);
  roughness_c_17 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = ((roughness_a_19 * exp((roughness_b_18 / roughness_c_17))) * tmpvar_4);
  roughness_20 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_26, n_23), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_37;
  tmpvar_37 = vec3(((tmpvar_36 * min (1.0, min (((geo_numerator_22 * tmpvar_28) / geo_denominator_21), ((geo_numerator_22 * tmpvar_27) / geo_denominator_21)))) * roughness_20));
  Rs_numerator_16 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = (orenNayar * orenNayar);
  rough_sq_15 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = (1.0 - (0.5 * (rough_sq_15 / (rough_sq_15 + 0.57))));
  A_14 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = (0.45 * (rough_sq_15 / (rough_sq_15 + 0.09)));
  B_13 = tmpvar_40;
  mediump float x_41;
  x_41 = dot (tmpvar_26, n_23);
  mediump float x_42;
  x_42 = dot (tmpvar_25, n_23);
  mediump float x_43;
  x_43 = dot (tmpvar_26, n_23);
  mediump float x_44;
  x_44 = dot (tmpvar_25, n_23);
  mediump float tmpvar_45;
  tmpvar_45 = min ((1.5708 - (sign(x_43) * (1.5708 - (sqrt((1.0 - abs(x_43))) * (1.5708 + (abs(x_43) * (-0.214602 + (abs(x_43) * (0.0865667 + (abs(x_43) * -0.0310296)))))))))), (1.5708 - (sign(x_44) * (1.5708 - (sqrt((1.0 - abs(x_44))) * (1.5708 + (abs(x_44) * (-0.214602 + (abs(x_44) * (0.0865667 + (abs(x_44) * -0.0310296)))))))))));
  c_12.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_27))) * vec3((A_14 + ((B_13 * max (0.0, dot ((tmpvar_26 - (n_23 * dot (tmpvar_26, n_23))), (tmpvar_25 - (n_23 * dot (tmpvar_25, n_23)))))) * (sin(max ((1.5708 - (sign(x_41) * (1.5708 - (sqrt((1.0 - abs(x_41))) * (1.5708 + (abs(x_41) * (-0.214602 + (abs(x_41) * (0.0865667 + (abs(x_41) * -0.0310296)))))))))), (1.5708 - (sign(x_42) * (1.5708 - (sqrt((1.0 - abs(x_42))) * (1.5708 + (abs(x_42) * (-0.214602 + (abs(x_42) * (0.0865667 + (abs(x_42) * -0.0310296)))))))))))) * (sin(tmpvar_45) / cos(tmpvar_45))))))) + (((cSpecular.xyz * (Rs_numerator_16 / (max (0.0, (tmpvar_28 * tmpvar_27)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * 2.0);
  c_12.w = 1.0;
  c_1.xyz = c_12.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  lightDir_2 = xlv_TEXCOORD1;
  mediump vec3 lightDir_12;
  lightDir_12 = lightDir_2;
  mediump vec4 c_13;
  mediump float B_14;
  mediump float A_15;
  highp float rough_sq_16;
  mediump vec3 Rs_numerator_17;
  highp float roughness_c_18;
  highp float roughness_b_19;
  highp float roughness_a_20;
  mediump float roughness_21;
  highp float geo_denominator_22;
  highp float geo_numerator_23;
  mediump vec3 n_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = normalize(normal_7);
  n_24 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = normalize(lightDir_12);
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_28;
  tmpvar_28 = clamp (dot (n_24, tmpvar_26), 0.0, 1.0);
  mediump float tmpvar_29;
  tmpvar_29 = clamp (dot (n_24, tmpvar_27), 0.0, 1.0);
  mediump float tmpvar_30;
  tmpvar_30 = clamp (dot (tmpvar_27, normalize((tmpvar_26 + tmpvar_27))), 0.0, 1.0);
  mediump float tmpvar_31;
  tmpvar_31 = (roughnessV * roughnessV);
  mediump float tmpvar_32;
  tmpvar_32 = (2.0 * tmpvar_28);
  geo_numerator_23 = tmpvar_32;
  geo_denominator_22 = tmpvar_30;
  mediump float tmpvar_33;
  tmpvar_33 = (1.0/(((4.0 * tmpvar_31) * pow (tmpvar_28, 4.0))));
  roughness_a_20 = tmpvar_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_28 * tmpvar_28) - 1.0);
  roughness_b_19 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_31 * tmpvar_28) * tmpvar_28);
  roughness_c_18 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = ((roughness_a_20 * exp((roughness_b_19 / roughness_c_18))) * tmpvar_4);
  roughness_21 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_27, n_24), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_38;
  tmpvar_38 = vec3(((tmpvar_37 * min (1.0, min (((geo_numerator_23 * tmpvar_29) / geo_denominator_22), ((geo_numerator_23 * tmpvar_28) / geo_denominator_22)))) * roughness_21));
  Rs_numerator_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = (orenNayar * orenNayar);
  rough_sq_16 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = (1.0 - (0.5 * (rough_sq_16 / (rough_sq_16 + 0.57))));
  A_15 = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = (0.45 * (rough_sq_16 / (rough_sq_16 + 0.09)));
  B_14 = tmpvar_41;
  mediump float x_42;
  x_42 = dot (tmpvar_27, n_24);
  mediump float x_43;
  x_43 = dot (tmpvar_26, n_24);
  mediump float x_44;
  x_44 = dot (tmpvar_27, n_24);
  mediump float x_45;
  x_45 = dot (tmpvar_26, n_24);
  mediump float tmpvar_46;
  tmpvar_46 = min ((1.5708 - (sign(x_44) * (1.5708 - (sqrt((1.0 - abs(x_44))) * (1.5708 + (abs(x_44) * (-0.214602 + (abs(x_44) * (0.0865667 + (abs(x_44) * -0.0310296)))))))))), (1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))));
  c_13.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_28))) * vec3((A_15 + ((B_14 * max (0.0, dot ((tmpvar_27 - (n_24 * dot (tmpvar_27, n_24))), (tmpvar_26 - (n_24 * dot (tmpvar_26, n_24)))))) * (sin(max ((1.5708 - (sign(x_42) * (1.5708 - (sqrt((1.0 - abs(x_42))) * (1.5708 + (abs(x_42) * (-0.214602 + (abs(x_42) * (0.0865667 + (abs(x_42) * -0.0310296)))))))))), (1.5708 - (sign(x_43) * (1.5708 - (sqrt((1.0 - abs(x_43))) * (1.5708 + (abs(x_43) * (-0.214602 + (abs(x_43) * (0.0865667 + (abs(x_43) * -0.0310296)))))))))))) * (sin(tmpvar_46) / cos(tmpvar_46))))))) + (((cSpecular.xyz * (Rs_numerator_17 / (max (0.0, (tmpvar_29 * tmpvar_28)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * 2.0);
  c_13.w = 1.0;
  c_1.xyz = c_13.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(normalize(xlv_TEXCOORD1));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * (((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz))).w) * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 18 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 19 [_MainTex_ST]
Vector 20 [_BumpMap_ST]
"vs_3_0
; 41 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c18.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp4 r0.w, v0, c7
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul o3.xyz, r2.w, r2
dp4 o4.w, r0, c15
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 20 [_BumpMap_ST]
Matrix 15 [_LightMatrix0] 4
Vector 19 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Matrix 10 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 14 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 45.33 (34 instructions), vertex: 32, texture: 0,
//   sequencer: 18,  9 GPRs, 21 threads,
// Performance (if enough threads): ~45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdaaaaaacbaaaaaaaaaaaaaaaceaaaaaaaaaaaaabmmaaaaaaaa
aaaaaaaaaaaaabkeaaaaaabmaaaaabjhpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabjaaaaaaanaaaacaabeaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaap
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabdaaabaaaaaaaaaanmaaaaaaaa
aaaaabbiaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabcgaaacaaakaaaeaaaa
aaaaaapmaaaaaaaaaaaaabdeaaacaaaaaaabaaaaaaaaabemaaaaaaaaaaaaabfm
aaacaaabaaabaaaaaaaaaanmaaaaaaaaaaaaabhbaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabieaaacaaaoaaabaaaaaaaaaanmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphc
gmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaadaaabaaaa
aaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhdhegbhegf
fpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaacbaaadbaaaiaaaaaaaaaaaaaaaa
aaaadiieaaaaaaabaaaaaaaeaaaaaaahaaaaacjaaabaaaafaaaagaagaaaadaah
aadafaaiaaaapafaaaachbfbaaafhcfcaaagpdfdaaaaaacdaaaabaceaaaaaaca
aaaaaacbaaaabaccaaaabacjaaaabackpaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaagacfaaaaccaaaaaaaaaaafpieaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaapmiaaaaaaaamiapaaab
aabliiaakbaeafaamiapaaabaamgiiaaklaeaeabmiapaaabaalbdejeklaeadab
miapiadoaagmaadeklaeacabmiahaaacaamamgmaalamaaanmiahaaabaaleblaa
cbanabaamiahaaahaamamgleclamababmiahaaafaalogfaaobadagaamiapaaab
aabliiaakbaeajaamiahaaacaalelbleclalaaacmiahaaacaamagmleclakaaac
miahaaafabgflomaoladagafmiapaaabaamgiiaaklaeaiabmiahaaahaalelble
clalabahmiahaaahaamagmleclakabahmiapaaabaalbdejeklaeahabmiahaaaf
aamablaaobafagaamiahaaaiabmablmaklacaoaemiacaaacaaloloaapaaiagaa
miaeaaacaaloloaapaafaiaamiaiaaacaaloloaapaaiadaamiapaaabaagmnaje
klaeagabmiahaaaeabmablmaklahaoaemiabiaabaaloloaapaaeagaamiaciaab
aaloloaapaafaeaamiaeiaabaaloloaapaaeadaamiadiaaaaalalabkilaabdbd
miamiaaaaakmkmagilaabebemiabaaacaamdmdaapaacacaafibpacaaaamgiigm
kbabbcicmiapaaaaaabliiaaklabbbaamiapaaaaaalbdejeklabbaaamiahiaac
aabfgmaaobacacaamiapiaadaagmaadeklabapaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 465 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 5 registers
[Configuration]
8
0000002441050500
[Microcode]
576
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d0f00d8086c0c360403fa8
401f9c6c01d0e00d8086c0c360405fa8401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa800001c6c011d100c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d100c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedlgafgjdippnnlmedjnmgdeinjgagbmgeabaaaaaahaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneafaaaaeaaaabaa
hfabaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaa
kgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
ccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaa
aaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaaaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpccabaaaaeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegaobaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_11;
  lowp vec4 tmpvar_12;
  highp vec2 P_13;
  P_13 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_12 = texture2D (_LightTexture0, P_13);
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  mediump vec3 lightDir_16;
  lightDir_16 = lightDir_2;
  mediump float atten_17;
  atten_17 = ((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_12.w) * tmpvar_15.w);
  mediump vec4 c_18;
  mediump float B_19;
  mediump float A_20;
  highp float rough_sq_21;
  mediump vec3 Rs_numerator_22;
  highp float roughness_c_23;
  highp float roughness_b_24;
  highp float roughness_a_25;
  mediump float roughness_26;
  highp float geo_denominator_27;
  highp float geo_numerator_28;
  mediump vec3 n_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(lightDir_16);
  mediump vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (n_29, tmpvar_31), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (n_29, tmpvar_32), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = clamp (dot (tmpvar_32, normalize((tmpvar_31 + tmpvar_32))), 0.0, 1.0);
  mediump float tmpvar_36;
  tmpvar_36 = (roughnessV * roughnessV);
  mediump float tmpvar_37;
  tmpvar_37 = (2.0 * tmpvar_33);
  geo_numerator_28 = tmpvar_37;
  geo_denominator_27 = tmpvar_35;
  mediump float tmpvar_38;
  tmpvar_38 = (1.0/(((4.0 * tmpvar_36) * pow (tmpvar_33, 4.0))));
  roughness_a_25 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = ((tmpvar_33 * tmpvar_33) - 1.0);
  roughness_b_24 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = ((tmpvar_36 * tmpvar_33) * tmpvar_33);
  roughness_c_23 = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = ((roughness_a_25 * exp((roughness_b_24 / roughness_c_23))) * tmpvar_4);
  roughness_26 = tmpvar_41;
  mediump float tmpvar_42;
  tmpvar_42 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_32, n_29), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_43;
  tmpvar_43 = vec3(((tmpvar_42 * min (1.0, min (((geo_numerator_28 * tmpvar_34) / geo_denominator_27), ((geo_numerator_28 * tmpvar_33) / geo_denominator_27)))) * roughness_26));
  Rs_numerator_22 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = (orenNayar * orenNayar);
  rough_sq_21 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = (1.0 - (0.5 * (rough_sq_21 / (rough_sq_21 + 0.57))));
  A_20 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (0.45 * (rough_sq_21 / (rough_sq_21 + 0.09)));
  B_19 = tmpvar_46;
  mediump float x_47;
  x_47 = dot (tmpvar_32, n_29);
  mediump float x_48;
  x_48 = dot (tmpvar_31, n_29);
  mediump float x_49;
  x_49 = dot (tmpvar_32, n_29);
  mediump float x_50;
  x_50 = dot (tmpvar_31, n_29);
  mediump float tmpvar_51;
  tmpvar_51 = min ((1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))), (1.5708 - (sign(x_50) * (1.5708 - (sqrt((1.0 - abs(x_50))) * (1.5708 + (abs(x_50) * (-0.214602 + (abs(x_50) * (0.0865667 + (abs(x_50) * -0.0310296)))))))))));
  c_18.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_33))) * vec3((A_20 + ((B_19 * max (0.0, dot ((tmpvar_32 - (n_29 * dot (tmpvar_32, n_29))), (tmpvar_31 - (n_29 * dot (tmpvar_31, n_29)))))) * (sin(max ((1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))), (1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))))) * (sin(tmpvar_51) / cos(tmpvar_51))))))) + (((cSpecular.xyz * (Rs_numerator_22 / (max (0.0, (tmpvar_34 * tmpvar_33)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_17 * 2.0));
  c_18.w = 1.0;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  mediump vec3 lightDir_17;
  lightDir_17 = lightDir_2;
  mediump float atten_18;
  atten_18 = ((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w);
  mediump vec4 c_19;
  mediump float B_20;
  mediump float A_21;
  highp float rough_sq_22;
  mediump vec3 Rs_numerator_23;
  highp float roughness_c_24;
  highp float roughness_b_25;
  highp float roughness_a_26;
  mediump float roughness_27;
  highp float geo_denominator_28;
  highp float geo_numerator_29;
  mediump vec3 n_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = normalize(normal_7);
  n_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = normalize(lightDir_17);
  mediump vec3 tmpvar_33;
  tmpvar_33 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (n_30, tmpvar_32), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = clamp (dot (n_30, tmpvar_33), 0.0, 1.0);
  mediump float tmpvar_36;
  tmpvar_36 = clamp (dot (tmpvar_33, normalize((tmpvar_32 + tmpvar_33))), 0.0, 1.0);
  mediump float tmpvar_37;
  tmpvar_37 = (roughnessV * roughnessV);
  mediump float tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_34);
  geo_numerator_29 = tmpvar_38;
  geo_denominator_28 = tmpvar_36;
  mediump float tmpvar_39;
  tmpvar_39 = (1.0/(((4.0 * tmpvar_37) * pow (tmpvar_34, 4.0))));
  roughness_a_26 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = ((tmpvar_34 * tmpvar_34) - 1.0);
  roughness_b_25 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = ((tmpvar_37 * tmpvar_34) * tmpvar_34);
  roughness_c_24 = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = ((roughness_a_26 * exp((roughness_b_25 / roughness_c_24))) * tmpvar_4);
  roughness_27 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_33, n_30), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_44;
  tmpvar_44 = vec3(((tmpvar_43 * min (1.0, min (((geo_numerator_29 * tmpvar_35) / geo_denominator_28), ((geo_numerator_29 * tmpvar_34) / geo_denominator_28)))) * roughness_27));
  Rs_numerator_23 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = (orenNayar * orenNayar);
  rough_sq_22 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (1.0 - (0.5 * (rough_sq_22 / (rough_sq_22 + 0.57))));
  A_21 = tmpvar_46;
  highp float tmpvar_47;
  tmpvar_47 = (0.45 * (rough_sq_22 / (rough_sq_22 + 0.09)));
  B_20 = tmpvar_47;
  mediump float x_48;
  x_48 = dot (tmpvar_33, n_30);
  mediump float x_49;
  x_49 = dot (tmpvar_32, n_30);
  mediump float x_50;
  x_50 = dot (tmpvar_33, n_30);
  mediump float x_51;
  x_51 = dot (tmpvar_32, n_30);
  mediump float tmpvar_52;
  tmpvar_52 = min ((1.5708 - (sign(x_50) * (1.5708 - (sqrt((1.0 - abs(x_50))) * (1.5708 + (abs(x_50) * (-0.214602 + (abs(x_50) * (0.0865667 + (abs(x_50) * -0.0310296)))))))))), (1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))));
  c_19.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_34))) * vec3((A_21 + ((B_20 * max (0.0, dot ((tmpvar_33 - (n_30 * dot (tmpvar_33, n_30))), (tmpvar_32 - (n_30 * dot (tmpvar_32, n_30)))))) * (sin(max ((1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))), (1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))))) * (sin(tmpvar_52) / cos(tmpvar_52))))))) + (((cSpecular.xyz * (Rs_numerator_23 / (max (0.0, (tmpvar_35 * tmpvar_34)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_18 * 2.0));
  c_19.w = 1.0;
  c_1.xyz = c_19.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(normalize(xlv_TEXCOORD1));
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * ((texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3))).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w) * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 18 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 19 [_MainTex_ST]
Vector 20 [_BumpMap_ST]
"vs_3_0
; 40 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c18.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 20 [_BumpMap_ST]
Matrix 15 [_LightMatrix0] 4
Vector 19 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Matrix 10 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 14 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 45.33 (34 instructions), vertex: 32, texture: 0,
//   sequencer: 18,  9 GPRs, 21 threads,
// Performance (if enough threads): ~45 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdaaaaaacbaaaaaaaaaaaaaaaceaaaaaaaaaaaaabmmaaaaaaaa
aaaaaaaaaaaaabkeaaaaaabmaaaaabjhpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabjaaaaaaanaaaacaabeaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaap
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabdaaabaaaaaaaaaanmaaaaaaaa
aaaaabbiaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabcgaaacaaakaaaeaaaa
aaaaaapmaaaaaaaaaaaaabdeaaacaaaaaaabaaaaaaaaabemaaaaaaaaaaaaabfm
aaacaaabaaabaaaaaaaaaanmaaaaaaaaaaaaabhbaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabieaaacaaaoaaabaaaaaaaaaanmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphc
gmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaadaaabaaaa
aaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhdhegbhegf
fpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaacbaaadbaaaiaaaaaaaaaaaaaaaa
aaaadeieaaaaaaabaaaaaaaeaaaaaaahaaaaacjaaabaaaafaaaagaagaaaadaah
aacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaaaaacdaaaabaceaaaaaaca
aaaaaacbaaaabaccaaaabacjaaaabackpaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaagacfaaaaccaaaaaaaaaaafpieaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaamiapaaaa
aabliiaakbaeafaamiapaaaaaamgiiaaklaeaeaamiapaaaaaalbdejeklaeadaa
miapiadoaagmaadeklaeacaamiahaaabaamamgmaalamaaanmiahaaaaaaleblaa
cbanabaamiahaaahaamamgleclamabaamiahaaafaalogfaaobadagaamiapaaaa
aabliiaakbaeajaamiahaaabaalelbleclalaaabmiahaaabaamagmleclakaaab
miahaaafabgflomaoladagafmiapaaaaaamgiiaaklaeaiaamiahaaahaalelble
clalabahmiahaaahaamagmleclakabahmiapaaaaaalbdejeklaeahaamiahaaaf
aamablaaobafagaamiahaaaiabmablmaklabaoaemiacaaabaaloloaapaaiagaa
miaeaaabaaloloaapaafaiaamiaiaaabaaloloaapaaiadaamiapaaaaaagmejhk
klaeagaamiahaaaeabmablmaklahaoaemiabiaabaaloloaapaaeagaamiaciaab
aaloloaapaafaeaamiaeiaabaaloloaapaaeadaamiadiaaaaalalabkilacbdbd
miamiaaaaakmkmagilacbebemiabaaabaamdmdaapaababaafibhabacaalblegm
kbaabcibmiahaaacaamgmaleklaabbacmiahaaaaaagmleleklaabaacmiahiaac
aabfgmaaobababaamiahiaadaablmaleklaaapaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 465 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 35 instructions using 5 registers
[Configuration]
8
0000002341050500
[Microcode]
560
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d0e00d8086c0c360405fa8
401f9c6c01d0d00d8086c0c360409fa8401f9c6c01d0c00d8086c0c360411fa8
00001c6c011d100c02bfc0e30041dffc00009c6c00800e0c04bfc0836041dffc
00011c6c0140020c0106004360405ffc00011c6c01400e0c0106004360411ffc
00011c6c0140000c0286004360409ffc00001c6c011d100c08bfc0e30041dffc
00001c6c0140000c0486024360403ffc401f9c6c0140020c0106004360405fa0
401f9c6c21400e0c0086009fe02300a0401f9c6c0140000c0086014360409fa0
401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 37 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedmamleekneecpceeadhdpkdemebbpjfcnabaaaaaahaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcneafaaaaeaaaabaa
hfabaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaa
kgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
ccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaa
aaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_11;
  highp float tmpvar_12;
  tmpvar_12 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_LightTextureB0, vec2(tmpvar_12));
  lowp vec4 tmpvar_14;
  tmpvar_14 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  mediump vec3 lightDir_15;
  lightDir_15 = lightDir_2;
  mediump float atten_16;
  atten_16 = (tmpvar_13.w * tmpvar_14.w);
  mediump vec4 c_17;
  mediump float B_18;
  mediump float A_19;
  highp float rough_sq_20;
  mediump vec3 Rs_numerator_21;
  highp float roughness_c_22;
  highp float roughness_b_23;
  highp float roughness_a_24;
  mediump float roughness_25;
  highp float geo_denominator_26;
  highp float geo_numerator_27;
  mediump vec3 n_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = normalize(lightDir_15);
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (n_28, tmpvar_30), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (n_28, tmpvar_31), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (tmpvar_31, normalize((tmpvar_30 + tmpvar_31))), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = (roughnessV * roughnessV);
  mediump float tmpvar_36;
  tmpvar_36 = (2.0 * tmpvar_32);
  geo_numerator_27 = tmpvar_36;
  geo_denominator_26 = tmpvar_34;
  mediump float tmpvar_37;
  tmpvar_37 = (1.0/(((4.0 * tmpvar_35) * pow (tmpvar_32, 4.0))));
  roughness_a_24 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = ((tmpvar_32 * tmpvar_32) - 1.0);
  roughness_b_23 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = ((tmpvar_35 * tmpvar_32) * tmpvar_32);
  roughness_c_22 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = ((roughness_a_24 * exp((roughness_b_23 / roughness_c_22))) * tmpvar_4);
  roughness_25 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_31, n_28), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_42;
  tmpvar_42 = vec3(((tmpvar_41 * min (1.0, min (((geo_numerator_27 * tmpvar_33) / geo_denominator_26), ((geo_numerator_27 * tmpvar_32) / geo_denominator_26)))) * roughness_25));
  Rs_numerator_21 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = (orenNayar * orenNayar);
  rough_sq_20 = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (1.0 - (0.5 * (rough_sq_20 / (rough_sq_20 + 0.57))));
  A_19 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = (0.45 * (rough_sq_20 / (rough_sq_20 + 0.09)));
  B_18 = tmpvar_45;
  mediump float x_46;
  x_46 = dot (tmpvar_31, n_28);
  mediump float x_47;
  x_47 = dot (tmpvar_30, n_28);
  mediump float x_48;
  x_48 = dot (tmpvar_31, n_28);
  mediump float x_49;
  x_49 = dot (tmpvar_30, n_28);
  mediump float tmpvar_50;
  tmpvar_50 = min ((1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))), (1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))));
  c_17.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_32))) * vec3((A_19 + ((B_18 * max (0.0, dot ((tmpvar_31 - (n_28 * dot (tmpvar_31, n_28))), (tmpvar_30 - (n_28 * dot (tmpvar_30, n_28)))))) * (sin(max ((1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))), (1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))))) * (sin(tmpvar_50) / cos(tmpvar_50))))))) + (((cSpecular.xyz * (Rs_numerator_21 / (max (0.0, (tmpvar_33 * tmpvar_32)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_16 * 2.0));
  c_17.w = 1.0;
  c_1.xyz = c_17.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTextureB0, vec2(tmpvar_13));
  lowp vec4 tmpvar_15;
  tmpvar_15 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  mediump vec3 lightDir_16;
  lightDir_16 = lightDir_2;
  mediump float atten_17;
  atten_17 = (tmpvar_14.w * tmpvar_15.w);
  mediump vec4 c_18;
  mediump float B_19;
  mediump float A_20;
  highp float rough_sq_21;
  mediump vec3 Rs_numerator_22;
  highp float roughness_c_23;
  highp float roughness_b_24;
  highp float roughness_a_25;
  mediump float roughness_26;
  highp float geo_denominator_27;
  highp float geo_numerator_28;
  mediump vec3 n_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = normalize(normal_7);
  n_29 = tmpvar_30;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(lightDir_16);
  mediump vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (n_29, tmpvar_31), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (n_29, tmpvar_32), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = clamp (dot (tmpvar_32, normalize((tmpvar_31 + tmpvar_32))), 0.0, 1.0);
  mediump float tmpvar_36;
  tmpvar_36 = (roughnessV * roughnessV);
  mediump float tmpvar_37;
  tmpvar_37 = (2.0 * tmpvar_33);
  geo_numerator_28 = tmpvar_37;
  geo_denominator_27 = tmpvar_35;
  mediump float tmpvar_38;
  tmpvar_38 = (1.0/(((4.0 * tmpvar_36) * pow (tmpvar_33, 4.0))));
  roughness_a_25 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = ((tmpvar_33 * tmpvar_33) - 1.0);
  roughness_b_24 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = ((tmpvar_36 * tmpvar_33) * tmpvar_33);
  roughness_c_23 = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = ((roughness_a_25 * exp((roughness_b_24 / roughness_c_23))) * tmpvar_4);
  roughness_26 = tmpvar_41;
  mediump float tmpvar_42;
  tmpvar_42 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_32, n_29), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_43;
  tmpvar_43 = vec3(((tmpvar_42 * min (1.0, min (((geo_numerator_28 * tmpvar_34) / geo_denominator_27), ((geo_numerator_28 * tmpvar_33) / geo_denominator_27)))) * roughness_26));
  Rs_numerator_22 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = (orenNayar * orenNayar);
  rough_sq_21 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = (1.0 - (0.5 * (rough_sq_21 / (rough_sq_21 + 0.57))));
  A_20 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (0.45 * (rough_sq_21 / (rough_sq_21 + 0.09)));
  B_19 = tmpvar_46;
  mediump float x_47;
  x_47 = dot (tmpvar_32, n_29);
  mediump float x_48;
  x_48 = dot (tmpvar_31, n_29);
  mediump float x_49;
  x_49 = dot (tmpvar_32, n_29);
  mediump float x_50;
  x_50 = dot (tmpvar_31, n_29);
  mediump float tmpvar_51;
  tmpvar_51 = min ((1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))), (1.5708 - (sign(x_50) * (1.5708 - (sqrt((1.0 - abs(x_50))) * (1.5708 + (abs(x_50) * (-0.214602 + (abs(x_50) * (0.0865667 + (abs(x_50) * -0.0310296)))))))))));
  c_18.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_33))) * vec3((A_20 + ((B_19 * max (0.0, dot ((tmpvar_32 - (n_29 * dot (tmpvar_32, n_29))), (tmpvar_31 - (n_29 * dot (tmpvar_31, n_29)))))) * (sin(max ((1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))), (1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))))) * (sin(tmpvar_51) / cos(tmpvar_51))))))) + (((cSpecular.xyz * (Rs_numerator_22 / (max (0.0, (tmpvar_34 * tmpvar_33)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_17 * 2.0));
  c_18.w = 1.0;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLSL
#ifdef VERTEX
varying vec2 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec2 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * (texture2D (_LightTexture0, xlv_TEXCOORD3).w * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 18 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 19 [_MainTex_ST]
Vector 20 [_BumpMap_ST]
"vs_3_0
; 38 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c18.w, -v0
mul r2.xyz, r1, v1.w
dp3 r1.y, r2, r0
dp3 r1.x, v1, r0
dp3 r1.z, v2, r0
dp3 r0.x, r1, r1
rsq r1.w, r0.x
mov r0, c10
dp4 r3.z, c17, r0
mov r0, c9
dp4 r3.y, c17, r0
mul o3.xyz, r1.w, r1
mov r1, c8
dp4 r3.x, c17, r1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 o2.y, r3, r2
dp3 o2.z, v2, r3
dp3 o2.x, r3, v1
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 20 [_BumpMap_ST]
Matrix 15 [_LightMatrix0] 4
Vector 19 [_MainTex_ST]
Matrix 6 [_Object2World] 4
Matrix 10 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 2 [glstate_matrix_mvp] 4
Vector 14 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 44.00 (33 instructions), vertex: 32, texture: 0,
//   sequencer: 18,  8 GPRs, 24 threads,
// Performance (if enough threads): ~44 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacdaaaaaacaeaaaaaaaaaaaaaaceaaaaaaaaaaaaabmmaaaaaaaa
aaaaaaaaaaaaabkeaaaaaabmaaaaabjhpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabjaaaaaaanaaaacaabeaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaap
aaaeaaaaaaaaaapmaaaaaaaaaaaaabamaaacaabdaaabaaaaaaaaaanmaaaaaaaa
aaaaabbiaaacaaagaaaeaaaaaaaaaapmaaaaaaaaaaaaabcgaaacaaakaaaeaaaa
aaaaaapmaaaaaaaaaaaaabdeaaacaaaaaaabaaaaaaaaabemaaaaaaaaaaaaabfm
aaacaaabaaabaaaaaaaaaanmaaaaaaaaaaaaabhbaaacaaacaaaeaaaaaaaaaapm
aaaaaaaaaaaaabieaaacaaaoaaabaaaaaaaaaanmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhi
daaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphc
gmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaadaaabaaaa
aaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhdhegbhegf
fpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaacaeaadbaaahaaaaaaaaaaaaaaaa
aaaadaieaaaaaaabaaaaaaaeaaaaaaahaaaaacjaaabaaaafaaaagaagaaaadaah
aacafaaiaaaapafaaaachbfbaaafhcfcaaagddfdaaaaaaccaaaabacdaaaaaabp
aaaaaacaaaaabacbaaaabaciaaaabacjpaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaafacfaaaaccaaaaaaaaaaafpibaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpidaaaaaaaaoiiaaaaaaaaafpicaaaaaaaapmiaaaaaaaamiapaaaa
aabliiaakbabafaamiapaaaaaamgiiaaklabaeaamiapaaaaaalbdejeklabadaa
miapiadoaagmaadeklabacaamiahaaahaamamgmaalamaaanmiahaaaaaaleblaa
cbanabaamiahaaaeaamamgleclamabaamiahaaafaalogfaaobadagaamiapaaaa
aabliiaakbabajaamiahaaahaalelbleclalaaahmiahaaahaamagmleclakaaah
miahaaafabgflomaoladagafmiapaaaaaamgiiaaklabaiaamiahaaaeaalelble
clalabaemiahaaaeaamagmleclakabaemiapaaaaaalbdejeklabahaamiahaaaf
aamablaaobafagaamiahaaahabmablmaklahaoabmiacaaabaaloloaapaahagaa
miaeaaabaaloloaapaafahaamiaiaaabaaloloaapaahadaamiapaaaaaagmojkk
klabagaamiabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaamiaeiaab
aaloloaapaaeadaamiadiaaaaalalabkilacbdbdmiamiaaaaakmkmagilacbebe
miabaaabaamdmdaapaababaafibdabacaalblagmkbaabcibmiadaaacaabllala
klaabbacmiadaaaaaagmlalaklaabaacmiahiaacaabfgmaaobababaamiadiaad
aamglalaklaaapaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 465 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 33 instructions using 5 registers
[Configuration]
8
0000002141050500
[Microcode]
528
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc00009c6c011d100c02bfc0e30041dffc
401f9c6c01d0d00d8086c0c360409fa800011c6c00800e0c04bfc0836041dffc
00019c6c0140020c0106014360405ffc00019c6c01400e0c0106014360411ffc
00019c6c0140000c0486014360409ffc401f9c6c01d0c00d8086c0c360411fa8
00001c6c0140000c0686034360411ffc401f9c6c0140020c0106044360405fa0
401f9c6c21400e0c0886008000310020401f9c6c0140000c0886024360409fa0
401f9c6c00800000008603436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 36 instructions, 2 temp regs, 0 temp arrays:
// ALU 17 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecednkgekihoaabbbajcbiaikjficpmnibmdabaaaaaaeeahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefckiafaaaaeaaaabaa
gkabaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaaddccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaa
kgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaidcaabaaaabaaaaaafgafbaaaaaaaaaaaegiacaaa
aaaaaaaaaeaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegaabaaaabaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaabaaaaaaaaaaadcaaaaakdccabaaa
aeaaaaaaegiacaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegaabaaaaaaaaaaa
doaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, xlv_TEXCOORD3);
  mediump vec3 lightDir_12;
  lightDir_12 = lightDir_2;
  mediump float atten_13;
  atten_13 = tmpvar_11.w;
  mediump vec4 c_14;
  mediump float B_15;
  mediump float A_16;
  highp float rough_sq_17;
  mediump vec3 Rs_numerator_18;
  highp float roughness_c_19;
  highp float roughness_b_20;
  highp float roughness_a_21;
  mediump float roughness_22;
  highp float geo_denominator_23;
  highp float geo_numerator_24;
  mediump vec3 n_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(lightDir_12);
  mediump vec3 tmpvar_28;
  tmpvar_28 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_29;
  tmpvar_29 = clamp (dot (n_25, tmpvar_27), 0.0, 1.0);
  mediump float tmpvar_30;
  tmpvar_30 = clamp (dot (n_25, tmpvar_28), 0.0, 1.0);
  mediump float tmpvar_31;
  tmpvar_31 = clamp (dot (tmpvar_28, normalize((tmpvar_27 + tmpvar_28))), 0.0, 1.0);
  mediump float tmpvar_32;
  tmpvar_32 = (roughnessV * roughnessV);
  mediump float tmpvar_33;
  tmpvar_33 = (2.0 * tmpvar_29);
  geo_numerator_24 = tmpvar_33;
  geo_denominator_23 = tmpvar_31;
  mediump float tmpvar_34;
  tmpvar_34 = (1.0/(((4.0 * tmpvar_32) * pow (tmpvar_29, 4.0))));
  roughness_a_21 = tmpvar_34;
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_29 * tmpvar_29) - 1.0);
  roughness_b_20 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = ((tmpvar_32 * tmpvar_29) * tmpvar_29);
  roughness_c_19 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = ((roughness_a_21 * exp((roughness_b_20 / roughness_c_19))) * tmpvar_4);
  roughness_22 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_28, n_25), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_39;
  tmpvar_39 = vec3(((tmpvar_38 * min (1.0, min (((geo_numerator_24 * tmpvar_30) / geo_denominator_23), ((geo_numerator_24 * tmpvar_29) / geo_denominator_23)))) * roughness_22));
  Rs_numerator_18 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = (orenNayar * orenNayar);
  rough_sq_17 = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = (1.0 - (0.5 * (rough_sq_17 / (rough_sq_17 + 0.57))));
  A_16 = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = (0.45 * (rough_sq_17 / (rough_sq_17 + 0.09)));
  B_15 = tmpvar_42;
  mediump float x_43;
  x_43 = dot (tmpvar_28, n_25);
  mediump float x_44;
  x_44 = dot (tmpvar_27, n_25);
  mediump float x_45;
  x_45 = dot (tmpvar_28, n_25);
  mediump float x_46;
  x_46 = dot (tmpvar_27, n_25);
  mediump float tmpvar_47;
  tmpvar_47 = min ((1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))), (1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))));
  c_14.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_29))) * vec3((A_16 + ((B_15 * max (0.0, dot ((tmpvar_28 - (n_25 * dot (tmpvar_28, n_25))), (tmpvar_27 - (n_25 * dot (tmpvar_27, n_25)))))) * (sin(max ((1.5708 - (sign(x_43) * (1.5708 - (sqrt((1.0 - abs(x_43))) * (1.5708 + (abs(x_43) * (-0.214602 + (abs(x_43) * (0.0865667 + (abs(x_43) * -0.0310296)))))))))), (1.5708 - (sign(x_44) * (1.5708 - (sqrt((1.0 - abs(x_44))) * (1.5708 + (abs(x_44) * (-0.214602 + (abs(x_44) * (0.0865667 + (abs(x_44) * -0.0310296)))))))))))) * (sin(tmpvar_47) / cos(tmpvar_47))))))) + (((cSpecular.xyz * (Rs_numerator_18 / (max (0.0, (tmpvar_30 * tmpvar_29)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_13 * 2.0));
  c_14.w = 1.0;
  c_1.xyz = c_14.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, xlv_TEXCOORD3);
  mediump vec3 lightDir_13;
  lightDir_13 = lightDir_2;
  mediump float atten_14;
  atten_14 = tmpvar_12.w;
  mediump vec4 c_15;
  mediump float B_16;
  mediump float A_17;
  highp float rough_sq_18;
  mediump vec3 Rs_numerator_19;
  highp float roughness_c_20;
  highp float roughness_b_21;
  highp float roughness_a_22;
  mediump float roughness_23;
  highp float geo_denominator_24;
  highp float geo_numerator_25;
  mediump vec3 n_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_7);
  n_26 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = normalize(lightDir_13);
  mediump vec3 tmpvar_29;
  tmpvar_29 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_30;
  tmpvar_30 = clamp (dot (n_26, tmpvar_28), 0.0, 1.0);
  mediump float tmpvar_31;
  tmpvar_31 = clamp (dot (n_26, tmpvar_29), 0.0, 1.0);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (tmpvar_29, normalize((tmpvar_28 + tmpvar_29))), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = (roughnessV * roughnessV);
  mediump float tmpvar_34;
  tmpvar_34 = (2.0 * tmpvar_30);
  geo_numerator_25 = tmpvar_34;
  geo_denominator_24 = tmpvar_32;
  mediump float tmpvar_35;
  tmpvar_35 = (1.0/(((4.0 * tmpvar_33) * pow (tmpvar_30, 4.0))));
  roughness_a_22 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = ((tmpvar_30 * tmpvar_30) - 1.0);
  roughness_b_21 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_33 * tmpvar_30) * tmpvar_30);
  roughness_c_20 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = ((roughness_a_22 * exp((roughness_b_21 / roughness_c_20))) * tmpvar_4);
  roughness_23 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_29, n_26), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_40;
  tmpvar_40 = vec3(((tmpvar_39 * min (1.0, min (((geo_numerator_25 * tmpvar_31) / geo_denominator_24), ((geo_numerator_25 * tmpvar_30) / geo_denominator_24)))) * roughness_23));
  Rs_numerator_19 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = (orenNayar * orenNayar);
  rough_sq_18 = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = (1.0 - (0.5 * (rough_sq_18 / (rough_sq_18 + 0.57))));
  A_17 = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (0.45 * (rough_sq_18 / (rough_sq_18 + 0.09)));
  B_16 = tmpvar_43;
  mediump float x_44;
  x_44 = dot (tmpvar_29, n_26);
  mediump float x_45;
  x_45 = dot (tmpvar_28, n_26);
  mediump float x_46;
  x_46 = dot (tmpvar_29, n_26);
  mediump float x_47;
  x_47 = dot (tmpvar_28, n_26);
  mediump float tmpvar_48;
  tmpvar_48 = min ((1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))), (1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))));
  c_15.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_30))) * vec3((A_17 + ((B_16 * max (0.0, dot ((tmpvar_29 - (n_26 * dot (tmpvar_29, n_26))), (tmpvar_28 - (n_26 * dot (tmpvar_28, n_26)))))) * (sin(max ((1.5708 - (sign(x_44) * (1.5708 - (sqrt((1.0 - abs(x_44))) * (1.5708 + (abs(x_44) * (-0.214602 + (abs(x_44) * (0.0865667 + (abs(x_44) * -0.0310296)))))))))), (1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))))) * (sin(tmpvar_48) / cos(tmpvar_48))))))) + (((cSpecular.xyz * (Rs_numerator_19 / (max (0.0, (tmpvar_31 * tmpvar_30)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_14 * 2.0));
  c_15.w = 1.0;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform mat4 unity_World2Shadow[4];
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5));
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz)));
  vec4 tmpvar_8;
  tmpvar_8 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  float tmpvar_9;
  if ((tmpvar_8.x < (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))) {
    tmpvar_9 = _LightShadowData.x;
  } else {
    tmpvar_9 = 1.0;
  };
  vec4 c_10;
  vec3 tmpvar_11;
  tmpvar_11 = normalize(normal_2);
  vec3 tmpvar_12;
  tmpvar_12 = normalize(tmpvar_5);
  vec3 tmpvar_13;
  tmpvar_13 = normalize(xlv_TEXCOORD2);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, tmpvar_12), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = clamp (dot (tmpvar_11, tmpvar_13), 0.0, 1.0);
  float tmpvar_16;
  tmpvar_16 = clamp (dot (tmpvar_13, normalize((tmpvar_12 + tmpvar_13))), 0.0, 1.0);
  float tmpvar_17;
  tmpvar_17 = (roughnessV * roughnessV);
  float tmpvar_18;
  tmpvar_18 = (2.0 * tmpvar_14);
  float tmpvar_19;
  tmpvar_19 = (orenNayar * orenNayar);
  float x_20;
  x_20 = dot (tmpvar_13, tmpvar_11);
  float x_21;
  x_21 = dot (tmpvar_12, tmpvar_11);
  float x_22;
  x_22 = dot (tmpvar_13, tmpvar_11);
  float x_23;
  x_23 = dot (tmpvar_12, tmpvar_11);
  float tmpvar_24;
  tmpvar_24 = min ((1.5708 - (sign(x_22) * (1.5708 - (sqrt((1.0 - abs(x_22))) * (1.5708 + (abs(x_22) * (-0.214602 + (abs(x_22) * (0.0865667 + (abs(x_22) * -0.0310296)))))))))), (1.5708 - (sign(x_23) * (1.5708 - (sqrt((1.0 - abs(x_23))) * (1.5708 + (abs(x_23) * (-0.214602 + (abs(x_23) * (0.0865667 + (abs(x_23) * -0.0310296)))))))))));
  c_10.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_14))) * vec3(((1.0 - (0.5 * (tmpvar_19 / (tmpvar_19 + 0.57)))) + (((0.45 * (tmpvar_19 / (tmpvar_19 + 0.09))) * max (0.0, dot ((tmpvar_13 - (tmpvar_11 * dot (tmpvar_13, tmpvar_11))), (tmpvar_12 - (tmpvar_11 * dot (tmpvar_12, tmpvar_11)))))) * (sin(max ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))))) * (sin(tmpvar_24) / cos(tmpvar_24))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_13, tmpvar_11), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_18 * tmpvar_15) / tmpvar_16), ((tmpvar_18 * tmpvar_14) / tmpvar_16)))) * (((1.0/(((4.0 * tmpvar_17) * pow (tmpvar_14, 4.0)))) * exp((((tmpvar_14 * tmpvar_14) - 1.0) / ((tmpvar_17 * tmpvar_14) * tmpvar_14)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_15 * tmpvar_14)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * ((((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_6.w) * tmpvar_7.w) * tmpvar_9) * 2.0));
  c_10.w = 1.0;
  c_1.xyz = c_10.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_WorldSpaceCameraPos]
Vector 21 [_WorldSpaceLightPos0]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 22 [unity_Scale]
Matrix 16 [_LightMatrix0]
Vector 23 [_MainTex_ST]
Vector 24 [_BumpMap_ST]
"vs_3_0
; 45 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c25, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c25.x
mov r0.xyz, c20
dp4 r2.z, r0, c14
dp4 r2.x, r0, c12
dp4 r2.y, r0, c13
mad r0.xyz, r2, c22.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c14
dp4 r4.z, c21, r0
mov r0, c13
dp4 r4.y, c21, r0
mov r1, c12
dp4 r4.x, c21, r1
mad r0.xyz, r4, c22.w, -v0
dp4 r0.w, v0, c11
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mul o3.xyz, r2.w, r2
dp4 o4.w, r0, c19
dp4 o4.z, r0, c18
dp4 o4.y, r0, c17
dp4 o4.x, r0, c16
dp4 o5.w, r0, c7
dp4 o5.z, r0, c6
dp4 o5.y, r0, c5
dp4 o5.x, r0, c4
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 24 [_BumpMap_ST]
Matrix 19 [_LightMatrix0] 4
Vector 23 [_MainTex_ST]
Matrix 10 [_Object2World] 4
Matrix 14 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 6 [glstate_matrix_mvp] 4
Vector 18 [unity_Scale]
Matrix 2 [unity_World2Shadow0] 4
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 50.67 (38 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~50 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaachaaaaaaceaaaaaaaaaaaaaaaceaaaaaaaaaaaaacaeaaaaaaaa
aaaaaaaaaaaaabnmaaaaaabmaaaaabmppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabmiaaaaaaoeaaacaabiaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaabd
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaabhaaabaaaaaaaaaapaaaaaaaaa
aaaaabcmaaacaaakaaaeaaaaaaaaabbaaaaaaaaaaaaaabdkaaacaaaoaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeiaaacaaaaaaabaaaaaaaaabgaaaaaaaaaaaaaabha
aaacaaabaaabaaaaaaaaaapaaaaaaaaaaaaaabifaaacaaagaaaeaaaaaaaaabba
aaaaaaaaaaaaabjiaaacaabcaaabaaaaaaaaaapaaaaaaaaaaaaaabkeaaacaaac
aaaeaaaaaaaaabliaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgm
geaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhc
gbfagphdaaklklklaaabaaadaaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdha
gbgdgfemgjghgihefagphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpfdgdgbgmgfaahfgogjhehjfpfhgphcgmgedcfdgigbgegphhaakl
aaadaaadaaaeaaaeaaaeaaaaaaaaaaaahghdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaceaaaebaaaiaaaaaaaaaaaaaaaaaaaaeikfaaaaaaab
aaaaaaaeaaaaaaaiaaaaacjaaabaaaafaaaagaagaaaadaahaadafaaiaaaapafa
aaachbfbaaafhcfcaaagpdfdaaahpefeaaaaaacdaaaabaceaaaaaacaaaaaaacb
aaaabaccaaaabacmaaaabacnaaaabacopaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaagacfeaclbcaaccaaaaaaafpieaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpicaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaapmiaaaaaaaamiapaaab
aabliiaakbaeajaamiapaaabaamgiiaaklaeaiabmiapaaabaalbdejeklaeahab
miapiadoaagmaadeklaeagabmiahaaadaamamgmaalbaaabbmiahaaabaaleblaa
cbbbabaamiahaaahaamamgleclbaababmiahaaafaalogfaaobacagaamiapaaab
aablaaaakbaeanaamiahaaadaalelbleclapaaadmiahaaadaamagmleclaoaaad
miahaaafabgflomaolacagafmiapaaabaamgaaaaklaeamabmiahaaahaalelble
clapabahmiahaaahaamagmleclaoabahmiapaaabaalbjejeklaealabmiahaaaf
aamablaaobafagaamiahaaaiabmablmakladbcaemiacaaadaaloloaapaaiagaa
miaeaaadaaloloaapaafaiaamiaiaaadaaloloaapaaiacaamiapaaabaagmpije
klaeakabmiahaaaeabmablmaklahbcaemiabiaabaaloloaapaaeagaamiaciaab
aaloloaapaafaeaamiaeiaabaaloloaapaaeacaamiadiaaaaalalabkilaabhbh
miamiaaaaakmkmagilaabibimiapaaaaaalbiiaakbabbgaamiabaaadaamdmdaa
paadadaamiapaaacaabliiaaklabbfaafibpadaaaalbiigmkbabafidmiapaaaa
aabliiaaklabaeaamiapaaaaaamgdejeklabadaamiapaaacaamgdejeklabbeac
miahiaacaabfgmaaobadadaamiapiaadaagmaadeklabbdacmiapiaaeaagmaade
klabacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [unity_World2Shadow0]
Matrix 264 [_Object2World]
Matrix 268 [_World2Object]
Vector 465 [unity_Scale]
Matrix 272 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 40 instructions using 5 registers
[Configuration]
8
0000002841050500
[Microcode]
640
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0b00d8106c0c360403ffc
00001c6c01d0a00d8106c0c360405ffc00001c6c01d0900d8106c0c360409ffc
00001c6c01d0800d8106c0c360411ffc00021c6c01d0e00d8286c0c360405ffc
00021c6c01d0d00d8286c0c360409ffc00021c6c01d0c00d8286c0c360411ffc
00009c6c0190e00c0686c0c360405ffc00009c6c0190d00c0686c0c360409ffc
00009c6c0190c00c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d1300d8086c0c360403fa8
401f9c6c01d1200d8086c0c360405fa8401f9c6c01d1100d8086c0c360409fa8
401f9c6c01d1000d8086c0c360411fa8401f9c6c01d0700d8086c0c360403fac
401f9c6c01d0600d8086c0c360405fac401f9c6c01d0500d8086c0c360409fac
401f9c6c01d0400d8086c0c360411fac00001c6c011d100c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d100c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityShadows" 3
BindCB "UnityPerDraw" 4
// 41 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedgbkmfmjfghfnnaefdmapgaeegkdomeababaaaaaadmaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefciiagaaaaeaaaabaakcabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaamaaaaaafjaaaaae
egiocaaaaeaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaaeaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaakgiocaaaaaaaaaaaanaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaaeaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
aeaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaaeaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
aeaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaaeaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaaeaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaeaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaaeaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaeaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaajaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaiaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaakaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaafaaaaaaegiocaaa
adaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump float shadow_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp float tmpvar_20;
  if ((tmpvar_19.x < (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  shadow_18 = tmpvar_20;
  tmpvar_17 = shadow_18;
  mediump vec3 lightDir_21;
  lightDir_21 = lightDir_2;
  mediump float atten_22;
  atten_22 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17);
  mediump vec4 c_23;
  mediump float B_24;
  mediump float A_25;
  highp float rough_sq_26;
  mediump vec3 Rs_numerator_27;
  highp float roughness_c_28;
  highp float roughness_b_29;
  highp float roughness_a_30;
  mediump float roughness_31;
  highp float geo_denominator_32;
  highp float geo_numerator_33;
  mediump vec3 n_34;
  lowp vec3 tmpvar_35;
  tmpvar_35 = normalize(tmpvar_7);
  n_34 = tmpvar_35;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(lightDir_21);
  mediump vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_34, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (n_34, tmpvar_37), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = clamp (dot (tmpvar_37, normalize((tmpvar_36 + tmpvar_37))), 0.0, 1.0);
  mediump float tmpvar_41;
  tmpvar_41 = (roughnessV * roughnessV);
  mediump float tmpvar_42;
  tmpvar_42 = (2.0 * tmpvar_38);
  geo_numerator_33 = tmpvar_42;
  geo_denominator_32 = tmpvar_40;
  mediump float tmpvar_43;
  tmpvar_43 = (1.0/(((4.0 * tmpvar_41) * pow (tmpvar_38, 4.0))));
  roughness_a_30 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_38 * tmpvar_38) - 1.0);
  roughness_b_29 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = ((tmpvar_41 * tmpvar_38) * tmpvar_38);
  roughness_c_28 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = ((roughness_a_30 * exp((roughness_b_29 / roughness_c_28))) * tmpvar_4);
  roughness_31 = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_37, n_34), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_48;
  tmpvar_48 = vec3(((tmpvar_47 * min (1.0, min (((geo_numerator_33 * tmpvar_39) / geo_denominator_32), ((geo_numerator_33 * tmpvar_38) / geo_denominator_32)))) * roughness_31));
  Rs_numerator_27 = tmpvar_48;
  mediump float tmpvar_49;
  tmpvar_49 = (orenNayar * orenNayar);
  rough_sq_26 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (1.0 - (0.5 * (rough_sq_26 / (rough_sq_26 + 0.57))));
  A_25 = tmpvar_50;
  highp float tmpvar_51;
  tmpvar_51 = (0.45 * (rough_sq_26 / (rough_sq_26 + 0.09)));
  B_24 = tmpvar_51;
  mediump float x_52;
  x_52 = dot (tmpvar_37, n_34);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_34);
  mediump float x_54;
  x_54 = dot (tmpvar_37, n_34);
  mediump float x_55;
  x_55 = dot (tmpvar_36, n_34);
  mediump float tmpvar_56;
  tmpvar_56 = min ((1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))), (1.5708 - (sign(x_55) * (1.5708 - (sqrt((1.0 - abs(x_55))) * (1.5708 + (abs(x_55) * (-0.214602 + (abs(x_55) * (0.0865667 + (abs(x_55) * -0.0310296)))))))))));
  c_23.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_38))) * vec3((A_25 + ((B_24 * max (0.0, dot ((tmpvar_37 - (n_34 * dot (tmpvar_37, n_34))), (tmpvar_36 - (n_34 * dot (tmpvar_36, n_34)))))) * (sin(max ((1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))), (1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))))) * (sin(tmpvar_56) / cos(tmpvar_56))))))) + (((cSpecular.xyz * (Rs_numerator_27 / (max (0.0, (tmpvar_39 * tmpvar_38)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_22 * 2.0));
  c_23.w = 1.0;
  c_1.xyz = c_23.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump float shadow_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp float tmpvar_20;
  if ((tmpvar_19.x < (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  shadow_18 = tmpvar_20;
  tmpvar_17 = shadow_18;
  mediump vec3 lightDir_21;
  lightDir_21 = lightDir_2;
  mediump float atten_22;
  atten_22 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17);
  mediump vec4 c_23;
  mediump float B_24;
  mediump float A_25;
  highp float rough_sq_26;
  mediump vec3 Rs_numerator_27;
  highp float roughness_c_28;
  highp float roughness_b_29;
  highp float roughness_a_30;
  mediump float roughness_31;
  highp float geo_denominator_32;
  highp float geo_numerator_33;
  mediump vec3 n_34;
  lowp vec3 tmpvar_35;
  tmpvar_35 = normalize(normal_7);
  n_34 = tmpvar_35;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(lightDir_21);
  mediump vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_34, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (n_34, tmpvar_37), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = clamp (dot (tmpvar_37, normalize((tmpvar_36 + tmpvar_37))), 0.0, 1.0);
  mediump float tmpvar_41;
  tmpvar_41 = (roughnessV * roughnessV);
  mediump float tmpvar_42;
  tmpvar_42 = (2.0 * tmpvar_38);
  geo_numerator_33 = tmpvar_42;
  geo_denominator_32 = tmpvar_40;
  mediump float tmpvar_43;
  tmpvar_43 = (1.0/(((4.0 * tmpvar_41) * pow (tmpvar_38, 4.0))));
  roughness_a_30 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_38 * tmpvar_38) - 1.0);
  roughness_b_29 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = ((tmpvar_41 * tmpvar_38) * tmpvar_38);
  roughness_c_28 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = ((roughness_a_30 * exp((roughness_b_29 / roughness_c_28))) * tmpvar_4);
  roughness_31 = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_37, n_34), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_48;
  tmpvar_48 = vec3(((tmpvar_47 * min (1.0, min (((geo_numerator_33 * tmpvar_39) / geo_denominator_32), ((geo_numerator_33 * tmpvar_38) / geo_denominator_32)))) * roughness_31));
  Rs_numerator_27 = tmpvar_48;
  mediump float tmpvar_49;
  tmpvar_49 = (orenNayar * orenNayar);
  rough_sq_26 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (1.0 - (0.5 * (rough_sq_26 / (rough_sq_26 + 0.57))));
  A_25 = tmpvar_50;
  highp float tmpvar_51;
  tmpvar_51 = (0.45 * (rough_sq_26 / (rough_sq_26 + 0.09)));
  B_24 = tmpvar_51;
  mediump float x_52;
  x_52 = dot (tmpvar_37, n_34);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_34);
  mediump float x_54;
  x_54 = dot (tmpvar_37, n_34);
  mediump float x_55;
  x_55 = dot (tmpvar_36, n_34);
  mediump float tmpvar_56;
  tmpvar_56 = min ((1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))), (1.5708 - (sign(x_55) * (1.5708 - (sqrt((1.0 - abs(x_55))) * (1.5708 + (abs(x_55) * (-0.214602 + (abs(x_55) * (0.0865667 + (abs(x_55) * -0.0310296)))))))))));
  c_23.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_38))) * vec3((A_25 + ((B_24 * max (0.0, dot ((tmpvar_37 - (n_34 * dot (tmpvar_37, n_34))), (tmpvar_36 - (n_34 * dot (tmpvar_36, n_34)))))) * (sin(max ((1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))), (1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))))) * (sin(tmpvar_56) / cos(tmpvar_56))))))) + (((cSpecular.xyz * (Rs_numerator_27 / (max (0.0, (tmpvar_39 * tmpvar_38)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_22 * 2.0));
  c_23.w = 1.0;
  c_1.xyz = c_23.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_WorldSpaceCameraPos]
Vector 21 [_WorldSpaceLightPos0]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 22 [unity_Scale]
Matrix 16 [_LightMatrix0]
Vector 23 [_MainTex_ST]
Vector 24 [_BumpMap_ST]
"vs_3_0
; 45 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c25, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c25.x
mov r0.xyz, c20
dp4 r2.z, r0, c14
dp4 r2.x, r0, c12
dp4 r2.y, r0, c13
mad r0.xyz, r2, c22.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c14
dp4 r4.z, c21, r0
mov r0, c13
dp4 r4.y, c21, r0
mov r1, c12
dp4 r4.x, c21, r1
mad r0.xyz, r4, c22.w, -v0
dp4 r0.w, v0, c11
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mul o3.xyz, r2.w, r2
dp4 o4.w, r0, c19
dp4 o4.z, r0, c18
dp4 o4.y, r0, c17
dp4 o4.x, r0, c16
dp4 o5.w, r0, c7
dp4 o5.z, r0, c6
dp4 o5.y, r0, c5
dp4 o5.x, r0, c4
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [unity_World2Shadow0]
Matrix 264 [_Object2World]
Matrix 268 [_World2Object]
Vector 465 [unity_Scale]
Matrix 272 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 40 instructions using 5 registers
[Configuration]
8
0000002841050500
[Microcode]
640
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0b00d8106c0c360403ffc
00001c6c01d0a00d8106c0c360405ffc00001c6c01d0900d8106c0c360409ffc
00001c6c01d0800d8106c0c360411ffc00021c6c01d0e00d8286c0c360405ffc
00021c6c01d0d00d8286c0c360409ffc00021c6c01d0c00d8286c0c360411ffc
00009c6c0190e00c0686c0c360405ffc00009c6c0190d00c0686c0c360409ffc
00009c6c0190c00c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d1300d8086c0c360403fa8
401f9c6c01d1200d8086c0c360405fa8401f9c6c01d1100d8086c0c360409fa8
401f9c6c01d1000d8086c0c360411fa8401f9c6c01d0700d8086c0c360403fac
401f9c6c01d0600d8086c0c360405fac401f9c6c01d0500d8086c0c360409fac
401f9c6c01d0400d8086c0c360411fac00001c6c011d100c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d100c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityShadows" 3
BindCB "UnityPerDraw" 4
// 41 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedgbkmfmjfghfnnaefdmapgaeegkdomeababaaaaaadmaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefciiagaaaaeaaaabaakcabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaamaaaaaafjaaaaae
egiocaaaaeaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaaeaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaakgiocaaaaaaaaaaaanaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaaeaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
aeaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaaeaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
aeaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaaeaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaaeaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaeaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaaeaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaeaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaajaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaiaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaakaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaafaaaaaaegiocaaa
adaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_11;
  lowp vec4 tmpvar_12;
  highp vec2 P_13;
  P_13 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_12 = texture2D (_LightTexture0, P_13);
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp float tmpvar_16;
  mediump float shadow_17;
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DProjEXT (_ShadowMapTexture, xlv_TEXCOORD4);
  shadow_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (shadow_17 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_19;
  tmpvar_16 = shadow_17;
  mediump vec3 lightDir_20;
  lightDir_20 = lightDir_2;
  mediump float atten_21;
  atten_21 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_12.w) * tmpvar_15.w) * tmpvar_16);
  mediump vec4 c_22;
  mediump float B_23;
  mediump float A_24;
  highp float rough_sq_25;
  mediump vec3 Rs_numerator_26;
  highp float roughness_c_27;
  highp float roughness_b_28;
  highp float roughness_a_29;
  mediump float roughness_30;
  highp float geo_denominator_31;
  highp float geo_numerator_32;
  mediump vec3 n_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = normalize(lightDir_20);
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_37;
  tmpvar_37 = clamp (dot (n_33, tmpvar_35), 0.0, 1.0);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_33, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (tmpvar_36, normalize((tmpvar_35 + tmpvar_36))), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = (roughnessV * roughnessV);
  mediump float tmpvar_41;
  tmpvar_41 = (2.0 * tmpvar_37);
  geo_numerator_32 = tmpvar_41;
  geo_denominator_31 = tmpvar_39;
  mediump float tmpvar_42;
  tmpvar_42 = (1.0/(((4.0 * tmpvar_40) * pow (tmpvar_37, 4.0))));
  roughness_a_29 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = ((tmpvar_37 * tmpvar_37) - 1.0);
  roughness_b_28 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_40 * tmpvar_37) * tmpvar_37);
  roughness_c_27 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = ((roughness_a_29 * exp((roughness_b_28 / roughness_c_27))) * tmpvar_4);
  roughness_30 = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_36, n_33), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_47;
  tmpvar_47 = vec3(((tmpvar_46 * min (1.0, min (((geo_numerator_32 * tmpvar_38) / geo_denominator_31), ((geo_numerator_32 * tmpvar_37) / geo_denominator_31)))) * roughness_30));
  Rs_numerator_26 = tmpvar_47;
  mediump float tmpvar_48;
  tmpvar_48 = (orenNayar * orenNayar);
  rough_sq_25 = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (1.0 - (0.5 * (rough_sq_25 / (rough_sq_25 + 0.57))));
  A_24 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (0.45 * (rough_sq_25 / (rough_sq_25 + 0.09)));
  B_23 = tmpvar_50;
  mediump float x_51;
  x_51 = dot (tmpvar_36, n_33);
  mediump float x_52;
  x_52 = dot (tmpvar_35, n_33);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_33);
  mediump float x_54;
  x_54 = dot (tmpvar_35, n_33);
  mediump float tmpvar_55;
  tmpvar_55 = min ((1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))), (1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))));
  c_22.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_37))) * vec3((A_24 + ((B_23 * max (0.0, dot ((tmpvar_36 - (n_33 * dot (tmpvar_36, n_33))), (tmpvar_35 - (n_33 * dot (tmpvar_35, n_33)))))) * (sin(max ((1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))), (1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))))) * (sin(tmpvar_55) / cos(tmpvar_55))))))) + (((cSpecular.xyz * (Rs_numerator_26 / (max (0.0, (tmpvar_38 * tmpvar_37)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_21 * 2.0));
  c_22.w = 1.0;
  c_1.xyz = c_22.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;

uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _ProjectionParams;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_3 = TANGENT.xyz;
  tmpvar_4 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_3.x;
  tmpvar_5[0].y = tmpvar_4.x;
  tmpvar_5[0].z = gl_Normal.x;
  tmpvar_5[1].x = tmpvar_3.y;
  tmpvar_5[1].y = tmpvar_4.y;
  tmpvar_5[1].z = gl_Normal.y;
  tmpvar_5[2].x = tmpvar_3.z;
  tmpvar_5[2].y = tmpvar_4.z;
  tmpvar_5[2].z = gl_Normal.z;
  vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = _WorldSpaceCameraPos;
  vec4 o_7;
  vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_2 * 0.5);
  vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_5 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = normalize((tmpvar_5 * (((_World2Object * tmpvar_6).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = o_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * (texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [_WorldSpaceLightPos0]
Matrix 4 [_World2Object]
Vector 12 [unity_Scale]
Vector 13 [_MainTex_ST]
Vector 14 [_BumpMap_ST]
"vs_3_0
; 37 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c15, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c15.x
mov r0.xyz, c8
dp4 r2.z, r0, c6
dp4 r2.x, r0, c4
dp4 r2.y, r0, c5
mad r0.xyz, r2, c12.w, -v0
mul r2.xyz, r1, v1.w
dp3 r1.y, r2, r0
dp3 r1.x, v1, r0
dp3 r1.z, v2, r0
dp3 r0.x, r1, r1
rsq r1.w, r0.x
mov r0, c6
dp4 r3.z, c11, r0
mov r0, c5
dp4 r3.y, c11, r0
mul o3.xyz, r1.w, r1
mov r1, c4
dp4 r3.x, c11, r1
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c15.y
mul r1.y, r1, c9.x
dp3 o2.y, r3, r2
dp3 o2.z, v2, r3
dp3 o2.x, r3, v1
mad o4.xy, r1.z, c10.zwzw, r1
mov o0, r0
mov o4.zw, r0
mad o1.zw, v3.xyxy, c14.xyxy, c14
mad o1.xy, v3, c13, c13.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 14 [_BumpMap_ST]
Vector 13 [_MainTex_ST]
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Matrix 8 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 3 [_WorldSpaceLightPos0]
Matrix 4 [glstate_matrix_mvp] 4
Vector 12 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 40.00 (30 instructions), vertex: 32, texture: 0,
//   sequencer: 18,  8 GPRs, 24 threads,
// Performance (if enough threads): ~40 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacgaaaaaaccaaaaaaaaaaaaaaaceaaaaabnaaaaaabpiaaaaaaaa
aaaaaaaaaaaaabkiaaaaaabmaaaaabjlpppoadaaaaaaaaajaaaaaabmaaaaaaaa
aaaaabjeaaaaaanaaaacaaaoaaabaaaaaaaaaanmaaaaaaaaaaaaaaomaaacaaan
aaabaaaaaaaaaanmaaaaaaaaaaaaaapiaaacaaabaaabaaaaaaaaaanmaaaaaaaa
aaaaabakaaacaaacaaabaaaaaaaaaanmaaaaaaaaaaaaabbiaaacaaaiaaaeaaaa
aaaaabciaaaaaaaaaaaaabdiaaacaaaaaaabaaaaaaaaabfaaaaaaaaaaaaaabga
aaacaaadaaabaaaaaaaaaanmaaaaaaaaaaaaabhfaaacaaaeaaaeaaaaaaaaabci
aaaaaaaaaaaaabiiaaacaaamaaabaaaaaaaaaanmaaaaaaaafpechfgnhaengbha
fpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaa
fpfahcgpgkgfgdhegjgpgofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaa
fpfhgphcgmgedcepgcgkgfgdheaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaa
fpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaadaaabaaad
aaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphddaaaghgmhd
hegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaahghdfpdd
fpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaa
aaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaboa
aadbaaahaaaaaaaaaaaaaaaaaaaadiieaaaaaaabaaaaaaaeaaaaaaaiaaaaacja
aabaaaafaaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfcaaagpdfd
aaaaaacbaaaabaccaaaaaaboaaaaaabpaaaabacaaaaabacfaaaaaabnaaaabacg
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
paffeaafaaaabcaamcaaaaaaaaaafaajaaaabcaameaaaaaaaaaagaaogabebcaa
bcaaaaaaaaaagabkgacabcaabcaaaaaaaaaabacgaaaaccaaaaaaaaaaafpibaaa
aaaaagiiaaaaaaaaafpigaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaa
afpicaaaaaaaapmiaaaaaaaamiapaaaaaabliiaakbabahaamiapaaaaaamgnapi
klabagaamiapaaaaaalbdepiklabafaamiapaaahaagmnajeklabaeaamiapiado
aananaaaocahahaamiahaaaaaamamgmaalakaaalmiahaaaeaaleblaacbaladaa
miahaaaeaamamgleclakadaemiahaaafaalogfaaobadagaamiahaaaaaalelble
clajaaaamiahaaaaaamagmleclaiaaaamiahaaafabgflomaoladagafmiahaaae
aalelbleclajadaemiahaaaeaamagmleclaiadaemiahaaafaamablaaobafagaa
miahaaaaabmablmaklaaamabmiacaaabaaloloaapaaaagaamiaeaaabaaloloaa
paafaaaamiaiaaabaaloloaapaaaadaamiahaaaaaamagmaakbahppaamiamiaad
aanlnlaaocahahaamiabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaa
miaeiaabaaloloaapaaeadaamiadiaaaaalalabkilacananmiamiaaaaakmkmag
ilacaoaomiabaaabaamdmdaapaababaafibiabaaaalbgmgmkbaaabibmiahiaac
aabfgmaaobababaamiadiaadaamgbkbiklaaacaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_ProjectionParams]
Vector 465 [_WorldSpaceLightPos0]
Matrix 260 [_World2Object]
Vector 464 [unity_Scale]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 32 instructions using 5 registers
[Configuration]
8
0000002041050500
[Defaults]
1
461 1
3f000000
[Microcode]
512
00009c6c005d100d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c00001c6c01d0300d8106c0c360403ffc
00001c6c01d0200d8106c0c360405ffc00001c6c01d0100d8106c0c360409ffc
00001c6c01d0000d8106c0c360411ffc00021c6c01d0600d8286c0c360405ffc
00021c6c01d0500d8286c0c360409ffc00021c6c01d0400d8286c0c360411ffc
00009c6c0190600c0686c0c360405ffc00009c6c0190500c0686c0c360409ffc
00009c6c0190400c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c0040000d8086c0836041ff80
401f9c6c004000558086c08360407fa800009c6c011d000c02bfc0e30041dffc
00001c6c009cd00e008000c36041dffc401f9c6c0140020c0106044360405fa0
00011c6c00800e0c04bfc0836041dffc00019c6c0140020c0106014360405ffc
00019c6c01400e0c0106014360411ffc00019c6c0140000c0486014360409ffc
00001c6c009d202a808000c360409ffc00001c6c0140000c0686034360403ffc
401f9c6c00c000080086c09540219fa8401f9c6c21400e0c0886009fe0310020
401f9c6c0140000c0886024360409fa0401f9c6c00800000008603436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 33 instructions, 3 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhponokkmfmpjpofofgmfhkpakepmafopabaaaaaakaagaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcaeafaaaaeaaaabaa
ebabaaaafjaaaaaeegiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaamaaaaaaogikcaaaaaaaaaaaamaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaanaaaaaakgiocaaaaaaaaaaaanaaaaaa
diaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaj
hcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaa
bcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
ecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  lightDir_2 = xlv_TEXCOORD1;
  lowp float tmpvar_11;
  mediump float lightShadowDataX_12;
  highp float dist_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = _LightShadowData.x;
  lightShadowDataX_12 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = max (float((dist_13 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_12);
  tmpvar_11 = tmpvar_16;
  mediump vec3 lightDir_17;
  lightDir_17 = lightDir_2;
  mediump float atten_18;
  atten_18 = tmpvar_11;
  mediump vec4 c_19;
  mediump float B_20;
  mediump float A_21;
  highp float rough_sq_22;
  mediump vec3 Rs_numerator_23;
  highp float roughness_c_24;
  highp float roughness_b_25;
  highp float roughness_a_26;
  mediump float roughness_27;
  highp float geo_denominator_28;
  highp float geo_numerator_29;
  mediump vec3 n_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_30 = tmpvar_31;
  mediump vec3 tmpvar_32;
  tmpvar_32 = normalize(lightDir_17);
  mediump vec3 tmpvar_33;
  tmpvar_33 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_34;
  tmpvar_34 = clamp (dot (n_30, tmpvar_32), 0.0, 1.0);
  mediump float tmpvar_35;
  tmpvar_35 = clamp (dot (n_30, tmpvar_33), 0.0, 1.0);
  mediump float tmpvar_36;
  tmpvar_36 = clamp (dot (tmpvar_33, normalize((tmpvar_32 + tmpvar_33))), 0.0, 1.0);
  mediump float tmpvar_37;
  tmpvar_37 = (roughnessV * roughnessV);
  mediump float tmpvar_38;
  tmpvar_38 = (2.0 * tmpvar_34);
  geo_numerator_29 = tmpvar_38;
  geo_denominator_28 = tmpvar_36;
  mediump float tmpvar_39;
  tmpvar_39 = (1.0/(((4.0 * tmpvar_37) * pow (tmpvar_34, 4.0))));
  roughness_a_26 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = ((tmpvar_34 * tmpvar_34) - 1.0);
  roughness_b_25 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = ((tmpvar_37 * tmpvar_34) * tmpvar_34);
  roughness_c_24 = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = ((roughness_a_26 * exp((roughness_b_25 / roughness_c_24))) * tmpvar_4);
  roughness_27 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_33, n_30), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_44;
  tmpvar_44 = vec3(((tmpvar_43 * min (1.0, min (((geo_numerator_29 * tmpvar_35) / geo_denominator_28), ((geo_numerator_29 * tmpvar_34) / geo_denominator_28)))) * roughness_27));
  Rs_numerator_23 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = (orenNayar * orenNayar);
  rough_sq_22 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (1.0 - (0.5 * (rough_sq_22 / (rough_sq_22 + 0.57))));
  A_21 = tmpvar_46;
  highp float tmpvar_47;
  tmpvar_47 = (0.45 * (rough_sq_22 / (rough_sq_22 + 0.09)));
  B_20 = tmpvar_47;
  mediump float x_48;
  x_48 = dot (tmpvar_33, n_30);
  mediump float x_49;
  x_49 = dot (tmpvar_32, n_30);
  mediump float x_50;
  x_50 = dot (tmpvar_33, n_30);
  mediump float x_51;
  x_51 = dot (tmpvar_32, n_30);
  mediump float tmpvar_52;
  tmpvar_52 = min ((1.5708 - (sign(x_50) * (1.5708 - (sqrt((1.0 - abs(x_50))) * (1.5708 + (abs(x_50) * (-0.214602 + (abs(x_50) * (0.0865667 + (abs(x_50) * -0.0310296)))))))))), (1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))));
  c_19.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_34))) * vec3((A_21 + ((B_20 * max (0.0, dot ((tmpvar_33 - (n_30 * dot (tmpvar_33, n_30))), (tmpvar_32 - (n_30 * dot (tmpvar_32, n_30)))))) * (sin(max ((1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))), (1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))))) * (sin(tmpvar_52) / cos(tmpvar_52))))))) + (((cSpecular.xyz * (Rs_numerator_23 / (max (0.0, (tmpvar_35 * tmpvar_34)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_18 * 2.0));
  c_19.w = 1.0;
  c_1.xyz = c_19.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _ProjectionParams;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (gl_ModelViewProjectionMatrix * _glesVertex);
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_8;
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_14;
  highp vec4 o_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = o_15;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  lightDir_2 = xlv_TEXCOORD1;
  lowp float tmpvar_12;
  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  mediump vec3 lightDir_13;
  lightDir_13 = lightDir_2;
  mediump float atten_14;
  atten_14 = tmpvar_12;
  mediump vec4 c_15;
  mediump float B_16;
  mediump float A_17;
  highp float rough_sq_18;
  mediump vec3 Rs_numerator_19;
  highp float roughness_c_20;
  highp float roughness_b_21;
  highp float roughness_a_22;
  mediump float roughness_23;
  highp float geo_denominator_24;
  highp float geo_numerator_25;
  mediump vec3 n_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = normalize(normal_7);
  n_26 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = normalize(lightDir_13);
  mediump vec3 tmpvar_29;
  tmpvar_29 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_30;
  tmpvar_30 = clamp (dot (n_26, tmpvar_28), 0.0, 1.0);
  mediump float tmpvar_31;
  tmpvar_31 = clamp (dot (n_26, tmpvar_29), 0.0, 1.0);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (tmpvar_29, normalize((tmpvar_28 + tmpvar_29))), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = (roughnessV * roughnessV);
  mediump float tmpvar_34;
  tmpvar_34 = (2.0 * tmpvar_30);
  geo_numerator_25 = tmpvar_34;
  geo_denominator_24 = tmpvar_32;
  mediump float tmpvar_35;
  tmpvar_35 = (1.0/(((4.0 * tmpvar_33) * pow (tmpvar_30, 4.0))));
  roughness_a_22 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = ((tmpvar_30 * tmpvar_30) - 1.0);
  roughness_b_21 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_33 * tmpvar_30) * tmpvar_30);
  roughness_c_20 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = ((roughness_a_22 * exp((roughness_b_21 / roughness_c_20))) * tmpvar_4);
  roughness_23 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_29, n_26), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_40;
  tmpvar_40 = vec3(((tmpvar_39 * min (1.0, min (((geo_numerator_25 * tmpvar_31) / geo_denominator_24), ((geo_numerator_25 * tmpvar_30) / geo_denominator_24)))) * roughness_23));
  Rs_numerator_19 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = (orenNayar * orenNayar);
  rough_sq_18 = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = (1.0 - (0.5 * (rough_sq_18 / (rough_sq_18 + 0.57))));
  A_17 = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (0.45 * (rough_sq_18 / (rough_sq_18 + 0.09)));
  B_16 = tmpvar_43;
  mediump float x_44;
  x_44 = dot (tmpvar_29, n_26);
  mediump float x_45;
  x_45 = dot (tmpvar_28, n_26);
  mediump float x_46;
  x_46 = dot (tmpvar_29, n_26);
  mediump float x_47;
  x_47 = dot (tmpvar_28, n_26);
  mediump float tmpvar_48;
  tmpvar_48 = min ((1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))), (1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))));
  c_15.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_30))) * vec3((A_17 + ((B_16 * max (0.0, dot ((tmpvar_29 - (n_26 * dot (tmpvar_29, n_26))), (tmpvar_28 - (n_26 * dot (tmpvar_28, n_26)))))) * (sin(max ((1.5708 - (sign(x_44) * (1.5708 - (sqrt((1.0 - abs(x_44))) * (1.5708 + (abs(x_44) * (-0.214602 + (abs(x_44) * (0.0865667 + (abs(x_44) * -0.0310296)))))))))), (1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))))) * (sin(tmpvar_48) / cos(tmpvar_48))))))) + (((cSpecular.xyz * (Rs_numerator_19 / (max (0.0, (tmpvar_31 * tmpvar_30)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_14 * 2.0));
  c_15.w = 1.0;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD4;
varying vec2 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _WorldSpaceLightPos0;
uniform vec4 _ProjectionParams;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_3 = TANGENT.xyz;
  tmpvar_4 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_3.x;
  tmpvar_5[0].y = tmpvar_4.x;
  tmpvar_5[0].z = gl_Normal.x;
  tmpvar_5[1].x = tmpvar_3.y;
  tmpvar_5[1].y = tmpvar_4.y;
  tmpvar_5[1].z = gl_Normal.y;
  tmpvar_5[2].x = tmpvar_3.z;
  tmpvar_5[2].y = tmpvar_4.z;
  tmpvar_5[2].z = gl_Normal.z;
  vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = _WorldSpaceCameraPos;
  vec4 o_7;
  vec4 tmpvar_8;
  tmpvar_8 = (tmpvar_2 * 0.5);
  vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = (tmpvar_8.y * _ProjectionParams.x);
  o_7.xy = (tmpvar_9 + tmpvar_8.w);
  o_7.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_5 * (_World2Object * _WorldSpaceLightPos0).xyz);
  xlv_TEXCOORD2 = normalize((tmpvar_5 * (((_World2Object * tmpvar_6).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  xlv_TEXCOORD4 = o_7;
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD4;
varying vec2 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec4 tmpvar_3;
  tmpvar_3 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec4 c_4;
  vec3 tmpvar_5;
  tmpvar_5 = normalize(normal_2);
  vec3 tmpvar_6;
  tmpvar_6 = normalize(xlv_TEXCOORD1);
  vec3 tmpvar_7;
  tmpvar_7 = normalize(xlv_TEXCOORD2);
  float tmpvar_8;
  tmpvar_8 = clamp (dot (tmpvar_5, tmpvar_6), 0.0, 1.0);
  float tmpvar_9;
  tmpvar_9 = clamp (dot (tmpvar_5, tmpvar_7), 0.0, 1.0);
  float tmpvar_10;
  tmpvar_10 = clamp (dot (tmpvar_7, normalize((tmpvar_6 + tmpvar_7))), 0.0, 1.0);
  float tmpvar_11;
  tmpvar_11 = (roughnessV * roughnessV);
  float tmpvar_12;
  tmpvar_12 = (2.0 * tmpvar_8);
  float tmpvar_13;
  tmpvar_13 = (orenNayar * orenNayar);
  float x_14;
  x_14 = dot (tmpvar_7, tmpvar_5);
  float x_15;
  x_15 = dot (tmpvar_6, tmpvar_5);
  float x_16;
  x_16 = dot (tmpvar_7, tmpvar_5);
  float x_17;
  x_17 = dot (tmpvar_6, tmpvar_5);
  float tmpvar_18;
  tmpvar_18 = min ((1.5708 - (sign(x_16) * (1.5708 - (sqrt((1.0 - abs(x_16))) * (1.5708 + (abs(x_16) * (-0.214602 + (abs(x_16) * (0.0865667 + (abs(x_16) * -0.0310296)))))))))), (1.5708 - (sign(x_17) * (1.5708 - (sqrt((1.0 - abs(x_17))) * (1.5708 + (abs(x_17) * (-0.214602 + (abs(x_17) * (0.0865667 + (abs(x_17) * -0.0310296)))))))))));
  c_4.xyz = ((((((texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz * _LightColor0.xyz) * vec3(max (0.0, tmpvar_8))) * vec3(((1.0 - (0.5 * (tmpvar_13 / (tmpvar_13 + 0.57)))) + (((0.45 * (tmpvar_13 / (tmpvar_13 + 0.09))) * max (0.0, dot ((tmpvar_7 - (tmpvar_5 * dot (tmpvar_7, tmpvar_5))), (tmpvar_6 - (tmpvar_5 * dot (tmpvar_6, tmpvar_5)))))) * (sin(max ((1.5708 - (sign(x_14) * (1.5708 - (sqrt((1.0 - abs(x_14))) * (1.5708 + (abs(x_14) * (-0.214602 + (abs(x_14) * (0.0865667 + (abs(x_14) * -0.0310296)))))))))), (1.5708 - (sign(x_15) * (1.5708 - (sqrt((1.0 - abs(x_15))) * (1.5708 + (abs(x_15) * (-0.214602 + (abs(x_15) * (0.0865667 + (abs(x_15) * -0.0310296)))))))))))) * (sin(tmpvar_18) / cos(tmpvar_18))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_7, tmpvar_5), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_12 * tmpvar_9) / tmpvar_10), ((tmpvar_12 * tmpvar_8) / tmpvar_10)))) * (((1.0/(((4.0 * tmpvar_11) * pow (tmpvar_8, 4.0)))) * exp((((tmpvar_8 * tmpvar_8) - 1.0) / ((tmpvar_11 * tmpvar_8) * tmpvar_8)))) * tmpvar_3.w))) / (max (0.0, (tmpvar_9 * tmpvar_8)) + 0.09))) * tmpvar_3.x) * _LightColor0.xyz)) * ((texture2D (_LightTexture0, xlv_TEXCOORD3).w * texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x) * 2.0));
  c_4.w = 1.0;
  c_1.xyz = c_4.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_ProjectionParams]
Vector 18 [_ScreenParams]
Vector 19 [_WorldSpaceLightPos0]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 20 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 21 [_MainTex_ST]
Vector 22 [_BumpMap_ST]
"vs_3_0
; 43 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c23, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c23.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c20.w, -v0
mul r2.xyz, r1, v1.w
dp3 r1.y, r2, r0
dp3 r1.x, v1, r0
dp3 r1.z, v2, r0
dp3 r0.x, r1, r1
rsq r1.w, r0.x
mov r0, c10
dp4 r3.z, c19, r0
mov r0, c9
dp4 r3.y, c19, r0
mul o3.xyz, r1.w, r1
mov r1, c8
dp4 r3.x, c19, r1
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c23.y
mul r1.y, r1, c17.x
mad o5.xy, r1.z, c18.zwzw, r1
dp4 r1.w, v0, c7
dp4 r1.z, v0, c6
dp4 r1.x, v0, c4
dp4 r1.y, v0, c5
dp3 o2.y, r3, r2
dp3 o2.z, v2, r3
dp3 o2.x, r3, v1
mov o0, r0
dp4 o4.y, r1, c13
dp4 o4.x, r1, c12
mov o5.zw, r0
mad o1.zw, v3.xyxy, c22.xyxy, c22
mad o1.xy, v3, c21, c21.zwzw
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 22 [_BumpMap_ST]
Matrix 17 [_LightMatrix0] 4
Vector 21 [_MainTex_ST]
Matrix 8 [_Object2World] 4
Vector 1 [_ProjectionParams]
Vector 2 [_ScreenParams]
Matrix 12 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 3 [_WorldSpaceLightPos0]
Matrix 4 [glstate_matrix_mvp] 4
Vector 16 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 49.33 (37 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~49 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaackmaaaaacheaaaaaaaaaaaaaaceaaaaacbeaaaaacdmaaaaaaaa
aaaaaaaaaaaaabomaaaaaabmaaaaabnppppoadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabniaaaaaapiaaacaabgaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaabb
aaaeaaaaaaaaabceaaaaaaaaaaaaabdeaaacaabfaaabaaaaaaaaabaeaaaaaaaa
aaaaabeaaaacaaaiaaaeaaaaaaaaabceaaaaaaaaaaaaabeoaaacaaabaaabaaaa
aaaaabaeaaaaaaaaaaaaabgaaaacaaacaaabaaaaaaaaabaeaaaaaaaaaaaaabgo
aaacaaamaaaeaaaaaaaaabceaaaaaaaaaaaaabhmaaacaaaaaaabaaaaaaaaabje
aaaaaaaaaaaaabkeaaacaaadaaabaaaaaaaaabaeaaaaaaaaaaaaabljaaacaaae
aaaeaaaaaaaaabceaaaaaaaaaaaaabmmaaacaabaaaabaaaaaaaaabaeaaaaaaaa
fpechfgnhaengbhafpfdfeaaaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjgh
giheengbhehcgjhidaaaklklaaadaaadaaaeaaaeaaabaaaaaaaaaaaafpengbgj
gofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaafpfahcgpgkgfgdhegjgp
gofagbhcgbgnhdaafpfdgdhcgfgfgofagbhcgbgnhdaafpfhgphcgmgedcepgcgk
gfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaabaaaaaaaa
aaaaaaaaaaaaaabeaapmaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaea
aaaaacdeaaebaaaiaaaaaaaaaaaaaaaaaaaaeakfaaaaaaabaaaaaaaeaaaaaaaj
aaaaacjaaabaaaafaaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfc
aaagddfdaaahpefeaaaaaacfaaaabacgaaaaaaccaaaaaacdaaaabaceaaaabacl
aaaabacmaaaaaacbaaaabacnaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadpaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaapaffeaafaaaabcaamcaaaaaaaaaafaajaaaabcaa
meaaaaaaaaaagaaogabebcaabcaaaaaaaaaagabkgacabcaabcaaaaaaaaaagacg
cacmbcaaccaaaaaaafpicaaaaaaaaanbaaaaaaaaafpihaaaaaaaagiiaaaaaaaa
afpieaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaacdpaaaaaaaamiapaaabaamgiiaa
kbacahaamiapaaabaalbnapiklacagabmiapaaabaagmdepiklacafabmiapaaai
aablnajeklacaeabmiapiadoaananaaaocaiaiaamiahaaadaamamgmaalaoaaap
miahaaabaaleblaacbapadaamiahaaafaamamgleclaoadabmiahaaagaalogfaa
obaeahaamiapaaabaamgiiaakbacalaamiahaaadaalelbleclanaaadmiahaaad
aamagmleclamaaadmiahaaagabgflomaolaeahagmiapaaabaalbiiaaklacakab
miahaaafaalelbleclanadafmiahaaafaamagmleclamadafmiapaaabaagmdeje
klacajabmiahaaagaamablaaobagahaamiahaaacabmabllpkladbaacmiabaaad
aaloloaapaacahaamiacaaadaaloloaapaagacaamiapaaabaablppipklacaiab
beceaaadaalologmpaacaeabkibhaaacaamagmebibaippbemiamiaaeaanlnlaa
ocaiaiaamiabiaabaaloloaapaafahaamiaciaabaaloloaapaagafaamiaeiaab
aaloloaapaafaeaamiadiaaaaabklabkilaabfbfmiamiaaaaaagkmagilaabgbg
kmceaaaaaaloloianaadadbemiadaaaaaabllalaklabbdaamiadaaaaaamglala
klabbcaafieiaaacaalbgmmgkbacabiamiahiaacaamamgaaobadaaaamiadiaad
aalblalaklabbbaamiadiaaeaamgbkbiklacacacaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_ProjectionParams]
Vector 465 [_WorldSpaceLightPos0]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 464 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 38 instructions using 6 registers
[Configuration]
8
0000002641050600
[Defaults]
1
461 1
3f000000
[Microcode]
608
00011c6c005d100d8186c0836041fffc00019c6c00400e0c0106c0836041dffc
00021c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c00009c6c01d0300d8106c0c360403ffc
00009c6c01d0200d8106c0c360405ffc00009c6c01d0100d8106c0c360409ffc
00009c6c01d0000d8106c0c360411ffc00001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00029c6c01d0a00d8486c0c360405ffc
00029c6c01d0900d8486c0c360409ffc00029c6c01d0800d8486c0c360411ffc
00011c6c0190a00c0886c0c360405ffc00011c6c0190900c0886c0c360409ffc
00011c6c0190800c0886c0c360411ffc00021c6c00800243011843436041dffc
00019c6c01000230812183630221dffc401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa8401f9c6c0040000d8286c0836041ff80
401f9c6c004000558286c08360407fac00001c6c011d000c04bfc0e30041dffc
00009c6c009cd00e028000c36041dffc401f9c6c0140020c0106054360405fa0
00011c6c00800e0c06bfc0836041dffc00019c6c0140020c0106004360405ffc
00019c6c01400e0c0106004360411ffc00019c6c0140000c0486004360409ffc
00009c6c009d202a828000c360409ffc00001c6c0140000c0686034360411ffc
401f9c6c00c000080286c09540a19fac401f9c6c21400e0c0a86008000310020
401f9c6c0140000c0a86024360409fa0401f9c6c00800000008603436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 288 // 288 used size, 16 vars
Matrix 112 [_LightMatrix0] 4
Vector 256 [_MainTex_ST] 4
Vector 272 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 96 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams] 4
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 41 instructions, 3 temp regs, 0 temp arrays:
// ALU 20 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhobijjoodimnclbfgnfloihmfdeiikmcabaaaaaapeahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefceaagaaaaeaaaabaajaabaaaafjaaaaae
egiocaaaaaaaaaaabcaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaaddccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacadaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaabaaaaaaaogikcaaaaaaaaaaabaaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaabbaaaaaakgiocaaaaaaaaaaa
bbaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaa
aaaaaaaaegacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahccaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahecaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaadiaaaaaipcaabaaaabaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaanaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaamaaaaaa
agbabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
adaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaa
abaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaabaaaaaa
diaaaaaidcaabaaaacaaaaaafgafbaaaabaaaaaaegiacaaaaaaaaaaaaiaaaaaa
dcaaaaakdcaabaaaabaaaaaaegiacaaaaaaaaaaaahaaaaaaagaabaaaabaaaaaa
egaabaaaacaaaaaadcaaaaakdcaabaaaabaaaaaaegiacaaaaaaaaaaaajaaaaaa
kgakbaaaabaaaaaaegaabaaaabaaaaaadcaaaaakdccabaaaaeaaaaaaegiacaaa
aaaaaaaaakaaaaaapgapbaaaabaaaaaaegaabaaaabaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaafaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaafaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_LightTexture0, xlv_TEXCOORD3);
  lowp float tmpvar_12;
  mediump float lightShadowDataX_13;
  highp float dist_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_14 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = _LightShadowData.x;
  lightShadowDataX_13 = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = max (float((dist_14 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_13);
  tmpvar_12 = tmpvar_17;
  mediump vec3 lightDir_18;
  lightDir_18 = lightDir_2;
  mediump float atten_19;
  atten_19 = (tmpvar_11.w * tmpvar_12);
  mediump vec4 c_20;
  mediump float B_21;
  mediump float A_22;
  highp float rough_sq_23;
  mediump vec3 Rs_numerator_24;
  highp float roughness_c_25;
  highp float roughness_b_26;
  highp float roughness_a_27;
  mediump float roughness_28;
  highp float geo_denominator_29;
  highp float geo_numerator_30;
  mediump vec3 n_31;
  lowp vec3 tmpvar_32;
  tmpvar_32 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_31 = tmpvar_32;
  mediump vec3 tmpvar_33;
  tmpvar_33 = normalize(lightDir_18);
  mediump vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_35;
  tmpvar_35 = clamp (dot (n_31, tmpvar_33), 0.0, 1.0);
  mediump float tmpvar_36;
  tmpvar_36 = clamp (dot (n_31, tmpvar_34), 0.0, 1.0);
  mediump float tmpvar_37;
  tmpvar_37 = clamp (dot (tmpvar_34, normalize((tmpvar_33 + tmpvar_34))), 0.0, 1.0);
  mediump float tmpvar_38;
  tmpvar_38 = (roughnessV * roughnessV);
  mediump float tmpvar_39;
  tmpvar_39 = (2.0 * tmpvar_35);
  geo_numerator_30 = tmpvar_39;
  geo_denominator_29 = tmpvar_37;
  mediump float tmpvar_40;
  tmpvar_40 = (1.0/(((4.0 * tmpvar_38) * pow (tmpvar_35, 4.0))));
  roughness_a_27 = tmpvar_40;
  mediump float tmpvar_41;
  tmpvar_41 = ((tmpvar_35 * tmpvar_35) - 1.0);
  roughness_b_26 = tmpvar_41;
  mediump float tmpvar_42;
  tmpvar_42 = ((tmpvar_38 * tmpvar_35) * tmpvar_35);
  roughness_c_25 = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = ((roughness_a_27 * exp((roughness_b_26 / roughness_c_25))) * tmpvar_4);
  roughness_28 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_34, n_31), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_45;
  tmpvar_45 = vec3(((tmpvar_44 * min (1.0, min (((geo_numerator_30 * tmpvar_36) / geo_denominator_29), ((geo_numerator_30 * tmpvar_35) / geo_denominator_29)))) * roughness_28));
  Rs_numerator_24 = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = (orenNayar * orenNayar);
  rough_sq_23 = tmpvar_46;
  highp float tmpvar_47;
  tmpvar_47 = (1.0 - (0.5 * (rough_sq_23 / (rough_sq_23 + 0.57))));
  A_22 = tmpvar_47;
  highp float tmpvar_48;
  tmpvar_48 = (0.45 * (rough_sq_23 / (rough_sq_23 + 0.09)));
  B_21 = tmpvar_48;
  mediump float x_49;
  x_49 = dot (tmpvar_34, n_31);
  mediump float x_50;
  x_50 = dot (tmpvar_33, n_31);
  mediump float x_51;
  x_51 = dot (tmpvar_34, n_31);
  mediump float x_52;
  x_52 = dot (tmpvar_33, n_31);
  mediump float tmpvar_53;
  tmpvar_53 = min ((1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))), (1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))));
  c_20.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_35))) * vec3((A_22 + ((B_21 * max (0.0, dot ((tmpvar_34 - (n_31 * dot (tmpvar_34, n_31))), (tmpvar_33 - (n_31 * dot (tmpvar_33, n_31)))))) * (sin(max ((1.5708 - (sign(x_49) * (1.5708 - (sqrt((1.0 - abs(x_49))) * (1.5708 + (abs(x_49) * (-0.214602 + (abs(x_49) * (0.0865667 + (abs(x_49) * -0.0310296)))))))))), (1.5708 - (sign(x_50) * (1.5708 - (sqrt((1.0 - abs(x_50))) * (1.5708 + (abs(x_50) * (-0.214602 + (abs(x_50) * (0.0865667 + (abs(x_50) * -0.0310296)))))))))))) * (sin(tmpvar_53) / cos(tmpvar_53))))))) + (((cSpecular.xyz * (Rs_numerator_24 / (max (0.0, (tmpvar_36 * tmpvar_35)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_19 * 2.0));
  c_20.w = 1.0;
  c_1.xyz = c_20.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _ProjectionParams;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (gl_ModelViewProjectionMatrix * _glesVertex);
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_8;
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_14;
  highp vec4 o_15;
  highp vec4 tmpvar_16;
  tmpvar_16 = (tmpvar_6 * 0.5);
  highp vec2 tmpvar_17;
  tmpvar_17.x = tmpvar_16.x;
  tmpvar_17.y = (tmpvar_16.y * _ProjectionParams.x);
  o_15.xy = (tmpvar_17 + tmpvar_16.w);
  o_15.zw = tmpvar_6.zw;
  gl_Position = tmpvar_6;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  xlv_TEXCOORD4 = o_15;
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec2 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_LightTexture0, xlv_TEXCOORD3);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  mediump vec3 lightDir_14;
  lightDir_14 = lightDir_2;
  mediump float atten_15;
  atten_15 = (tmpvar_12.w * tmpvar_13.x);
  mediump vec4 c_16;
  mediump float B_17;
  mediump float A_18;
  highp float rough_sq_19;
  mediump vec3 Rs_numerator_20;
  highp float roughness_c_21;
  highp float roughness_b_22;
  highp float roughness_a_23;
  mediump float roughness_24;
  highp float geo_denominator_25;
  highp float geo_numerator_26;
  mediump vec3 n_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = normalize(normal_7);
  n_27 = tmpvar_28;
  mediump vec3 tmpvar_29;
  tmpvar_29 = normalize(lightDir_14);
  mediump vec3 tmpvar_30;
  tmpvar_30 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_31;
  tmpvar_31 = clamp (dot (n_27, tmpvar_29), 0.0, 1.0);
  mediump float tmpvar_32;
  tmpvar_32 = clamp (dot (n_27, tmpvar_30), 0.0, 1.0);
  mediump float tmpvar_33;
  tmpvar_33 = clamp (dot (tmpvar_30, normalize((tmpvar_29 + tmpvar_30))), 0.0, 1.0);
  mediump float tmpvar_34;
  tmpvar_34 = (roughnessV * roughnessV);
  mediump float tmpvar_35;
  tmpvar_35 = (2.0 * tmpvar_31);
  geo_numerator_26 = tmpvar_35;
  geo_denominator_25 = tmpvar_33;
  mediump float tmpvar_36;
  tmpvar_36 = (1.0/(((4.0 * tmpvar_34) * pow (tmpvar_31, 4.0))));
  roughness_a_23 = tmpvar_36;
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_31 * tmpvar_31) - 1.0);
  roughness_b_22 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = ((tmpvar_34 * tmpvar_31) * tmpvar_31);
  roughness_c_21 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = ((roughness_a_23 * exp((roughness_b_22 / roughness_c_21))) * tmpvar_4);
  roughness_24 = tmpvar_39;
  mediump float tmpvar_40;
  tmpvar_40 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_30, n_27), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_41;
  tmpvar_41 = vec3(((tmpvar_40 * min (1.0, min (((geo_numerator_26 * tmpvar_32) / geo_denominator_25), ((geo_numerator_26 * tmpvar_31) / geo_denominator_25)))) * roughness_24));
  Rs_numerator_20 = tmpvar_41;
  mediump float tmpvar_42;
  tmpvar_42 = (orenNayar * orenNayar);
  rough_sq_19 = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (1.0 - (0.5 * (rough_sq_19 / (rough_sq_19 + 0.57))));
  A_18 = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (0.45 * (rough_sq_19 / (rough_sq_19 + 0.09)));
  B_17 = tmpvar_44;
  mediump float x_45;
  x_45 = dot (tmpvar_30, n_27);
  mediump float x_46;
  x_46 = dot (tmpvar_29, n_27);
  mediump float x_47;
  x_47 = dot (tmpvar_30, n_27);
  mediump float x_48;
  x_48 = dot (tmpvar_29, n_27);
  mediump float tmpvar_49;
  tmpvar_49 = min ((1.5708 - (sign(x_47) * (1.5708 - (sqrt((1.0 - abs(x_47))) * (1.5708 + (abs(x_47) * (-0.214602 + (abs(x_47) * (0.0865667 + (abs(x_47) * -0.0310296)))))))))), (1.5708 - (sign(x_48) * (1.5708 - (sqrt((1.0 - abs(x_48))) * (1.5708 + (abs(x_48) * (-0.214602 + (abs(x_48) * (0.0865667 + (abs(x_48) * -0.0310296)))))))))));
  c_16.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_31))) * vec3((A_18 + ((B_17 * max (0.0, dot ((tmpvar_30 - (n_27 * dot (tmpvar_30, n_27))), (tmpvar_29 - (n_27 * dot (tmpvar_29, n_27)))))) * (sin(max ((1.5708 - (sign(x_45) * (1.5708 - (sqrt((1.0 - abs(x_45))) * (1.5708 + (abs(x_45) * (-0.214602 + (abs(x_45) * (0.0865667 + (abs(x_45) * -0.0310296)))))))))), (1.5708 - (sign(x_46) * (1.5708 - (sqrt((1.0 - abs(x_46))) * (1.5708 + (abs(x_46) * (-0.214602 + (abs(x_46) * (0.0865667 + (abs(x_46) * -0.0310296)))))))))))) * (sin(tmpvar_49) / cos(tmpvar_49))))))) + (((cSpecular.xyz * (Rs_numerator_20 / (max (0.0, (tmpvar_32 * tmpvar_31)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_15 * 2.0));
  c_16.w = 1.0;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _LightPositionRange;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
uniform vec4 _LightPositionRange;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)));
  float tmpvar_7;
  tmpvar_7 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  float tmpvar_8;
  tmpvar_8 = dot (textureCube (_ShadowMapTexture, xlv_TEXCOORD4), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  float tmpvar_9;
  if ((tmpvar_8 < tmpvar_7)) {
    tmpvar_9 = _LightShadowData.x;
  } else {
    tmpvar_9 = 1.0;
  };
  vec4 c_10;
  vec3 tmpvar_11;
  tmpvar_11 = normalize(normal_2);
  vec3 tmpvar_12;
  tmpvar_12 = normalize(tmpvar_5);
  vec3 tmpvar_13;
  tmpvar_13 = normalize(xlv_TEXCOORD2);
  float tmpvar_14;
  tmpvar_14 = clamp (dot (tmpvar_11, tmpvar_12), 0.0, 1.0);
  float tmpvar_15;
  tmpvar_15 = clamp (dot (tmpvar_11, tmpvar_13), 0.0, 1.0);
  float tmpvar_16;
  tmpvar_16 = clamp (dot (tmpvar_13, normalize((tmpvar_12 + tmpvar_13))), 0.0, 1.0);
  float tmpvar_17;
  tmpvar_17 = (roughnessV * roughnessV);
  float tmpvar_18;
  tmpvar_18 = (2.0 * tmpvar_14);
  float tmpvar_19;
  tmpvar_19 = (orenNayar * orenNayar);
  float x_20;
  x_20 = dot (tmpvar_13, tmpvar_11);
  float x_21;
  x_21 = dot (tmpvar_12, tmpvar_11);
  float x_22;
  x_22 = dot (tmpvar_13, tmpvar_11);
  float x_23;
  x_23 = dot (tmpvar_12, tmpvar_11);
  float tmpvar_24;
  tmpvar_24 = min ((1.5708 - (sign(x_22) * (1.5708 - (sqrt((1.0 - abs(x_22))) * (1.5708 + (abs(x_22) * (-0.214602 + (abs(x_22) * (0.0865667 + (abs(x_22) * -0.0310296)))))))))), (1.5708 - (sign(x_23) * (1.5708 - (sqrt((1.0 - abs(x_23))) * (1.5708 + (abs(x_23) * (-0.214602 + (abs(x_23) * (0.0865667 + (abs(x_23) * -0.0310296)))))))))));
  c_10.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_14))) * vec3(((1.0 - (0.5 * (tmpvar_19 / (tmpvar_19 + 0.57)))) + (((0.45 * (tmpvar_19 / (tmpvar_19 + 0.09))) * max (0.0, dot ((tmpvar_13 - (tmpvar_11 * dot (tmpvar_13, tmpvar_11))), (tmpvar_12 - (tmpvar_11 * dot (tmpvar_12, tmpvar_11)))))) * (sin(max ((1.5708 - (sign(x_20) * (1.5708 - (sqrt((1.0 - abs(x_20))) * (1.5708 + (abs(x_20) * (-0.214602 + (abs(x_20) * (0.0865667 + (abs(x_20) * -0.0310296)))))))))), (1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))))) * (sin(tmpvar_24) / cos(tmpvar_24))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_13, tmpvar_11), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_18 * tmpvar_15) / tmpvar_16), ((tmpvar_18 * tmpvar_14) / tmpvar_16)))) * (((1.0/(((4.0 * tmpvar_17) * pow (tmpvar_14, 4.0)))) * exp((((tmpvar_14 * tmpvar_14) - 1.0) / ((tmpvar_17 * tmpvar_14) * tmpvar_14)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_15 * tmpvar_14)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * ((tmpvar_6.w * tmpvar_9) * 2.0));
  c_10.w = 1.0;
  c_1.xyz = c_10.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [_LightPositionRange]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 19 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 20 [_MainTex_ST]
Vector 21 [_BumpMap_ST]
"vs_3_0
; 41 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c22, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c22.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c19.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c19.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
add o5.xyz, r0, -c18
mad o1.zw, v3.xyxy, c21.xyxy, c21
mad o1.xy, v3, c20, c20.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 21 [_BumpMap_ST]
Matrix 16 [_LightMatrix0] 4
Vector 2 [_LightPositionRange]
Vector 20 [_MainTex_ST]
Matrix 7 [_Object2World] 4
Matrix 11 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 3 [glstate_matrix_mvp] 4
Vector 15 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67 (35 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~46 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacgaaaaaacbmaaaaaaaaaaaaaaceaaaaaaaaaaaaabpeaaaaaaaa
aaaaaaaaaaaaabmmaaaaaabmaaaaablppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabliaaaaaaoeaaacaabfaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaba
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaaacaaabaaaaaaaaaapaaaaaaaaa
aaaaabdeaaacaabeaaabaaaaaaaaaapaaaaaaaaaaaaaabeaaaacaaahaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeoaaacaaalaaaeaaaaaaaaabbaaaaaaaaaaaaaabfm
aaacaaaaaaabaaaaaaaaabheaaaaaaaaaaaaabieaaacaaabaaabaaaaaaaaaapa
aaaaaaaaaaaaabjjaaacaaadaaaeaaaaaaaaabbaaaaaaaaaaaaaabkmaaacaaap
aaabaaaaaaaaaapaaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaafpengbgj
gofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgk
gfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaacbmaaebaaai
aaaaaaaaaaaaaaaaaaaaeakfaaaaaaabaaaaaaaeaaaaaaaiaaaaacjaaabaaaaf
aaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaahhefe
aaaaaaceaaaabacfaaaaaacaaaaaaacbaaaabaccaaaabackaaaabaclaaaabacd
paffeaafaaaabcaamcaaaaaaaaaaeaajaaaabcaameaaaaaaaaaagaangabdbcaa
bcaaaaaaaaaagabjgabpbcaabcaaaaaaaaaagacfbaclbcaaccaaaaaaafpieaaa
aaaaagiiaaaaaaaaafpigaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaa
afpicaaaaaaaapmiaaaaaaaamiapaaaaaabliiaakbaeagaamiapaaaaaamgiiaa
klaeafaamiapaaaaaalbdejeklaeaeaamiapiadoaagmaadeklaeadaamiahaaab
aamamgmaalanaaaomiahaaaaaaleblaacbaoabaamiahaaahaamamgleclanabaa
miahaaafaalogfaaobadagaamiapaaaaaablaaaakbaeakaamiahaaabaalelble
clamaaabmiahaaabaamagmleclalaaabmiahaaafabgflomaoladagafmiapaaaa
aamgaaaaklaeajaamiahaaahaalelbleclamabahmiahaaahaamagmleclalabah
miapaaaaaalbaaaaklaeaiaamiahaaafaamablaaobafagaamiahaaaiabmablma
klabapaemiacaaabaaloloaapaaiagaamiaeaaabaaloloaapaafaiaamiaiaaab
aaloloaapaaiadaamiapaaaaaagmffffklaeahaamiahaaaeabmablmaklahapae
miabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaamiaeiaabaaloloaa
paaeadaamiahiaaeaclpmaaakaaaacaamiadiaaaaalalabkilacbebemiamiaaa
aakmkmagilacbfbfmiabaaabaamdmdaapaababaafibhabacaamglegmkbaabdib
miahaaacaalbmaleklaabcacmiahaaaaaagmleleklaabbacmiahiaacaabfgmaa
obababaamiahiaadaablmaleklaabaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [_LightPositionRange]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 464 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 5 registers
[Configuration]
8
0000002441050500
[Microcode]
576
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc401f9c6c00dd108c0186c0830021dfac
00019c6c00800243011842436041dffc00011c6c010002308121826301a1dffc
401f9c6c01d0e00d8086c0c360405fa8401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa800001c6c011d000c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d000c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 38 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhdmbofobgiaefdkemcpfodjidnmkpojgabaaaaaaliahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcaeagaaaaeaaaabaaibabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacacaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaajhccabaaaafaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13));
  highp float tmpvar_15;
  tmpvar_15 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = textureCube (_ShadowMapTexture, xlv_TEXCOORD4);
  packDist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (packDist_16, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp float tmpvar_19;
  if ((tmpvar_18 < tmpvar_15)) {
    tmpvar_19 = _LightShadowData.x;
  } else {
    tmpvar_19 = 1.0;
  };
  mediump vec3 lightDir_20;
  lightDir_20 = lightDir_2;
  mediump float atten_21;
  atten_21 = (tmpvar_14.w * tmpvar_19);
  mediump vec4 c_22;
  mediump float B_23;
  mediump float A_24;
  highp float rough_sq_25;
  mediump vec3 Rs_numerator_26;
  highp float roughness_c_27;
  highp float roughness_b_28;
  highp float roughness_a_29;
  mediump float roughness_30;
  highp float geo_denominator_31;
  highp float geo_numerator_32;
  mediump vec3 n_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = normalize(tmpvar_7);
  n_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = normalize(lightDir_20);
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_37;
  tmpvar_37 = clamp (dot (n_33, tmpvar_35), 0.0, 1.0);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_33, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (tmpvar_36, normalize((tmpvar_35 + tmpvar_36))), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = (roughnessV * roughnessV);
  mediump float tmpvar_41;
  tmpvar_41 = (2.0 * tmpvar_37);
  geo_numerator_32 = tmpvar_41;
  geo_denominator_31 = tmpvar_39;
  mediump float tmpvar_42;
  tmpvar_42 = (1.0/(((4.0 * tmpvar_40) * pow (tmpvar_37, 4.0))));
  roughness_a_29 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = ((tmpvar_37 * tmpvar_37) - 1.0);
  roughness_b_28 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_40 * tmpvar_37) * tmpvar_37);
  roughness_c_27 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = ((roughness_a_29 * exp((roughness_b_28 / roughness_c_27))) * tmpvar_4);
  roughness_30 = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_36, n_33), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_47;
  tmpvar_47 = vec3(((tmpvar_46 * min (1.0, min (((geo_numerator_32 * tmpvar_38) / geo_denominator_31), ((geo_numerator_32 * tmpvar_37) / geo_denominator_31)))) * roughness_30));
  Rs_numerator_26 = tmpvar_47;
  mediump float tmpvar_48;
  tmpvar_48 = (orenNayar * orenNayar);
  rough_sq_25 = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (1.0 - (0.5 * (rough_sq_25 / (rough_sq_25 + 0.57))));
  A_24 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (0.45 * (rough_sq_25 / (rough_sq_25 + 0.09)));
  B_23 = tmpvar_50;
  mediump float x_51;
  x_51 = dot (tmpvar_36, n_33);
  mediump float x_52;
  x_52 = dot (tmpvar_35, n_33);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_33);
  mediump float x_54;
  x_54 = dot (tmpvar_35, n_33);
  mediump float tmpvar_55;
  tmpvar_55 = min ((1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))), (1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))));
  c_22.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_37))) * vec3((A_24 + ((B_23 * max (0.0, dot ((tmpvar_36 - (n_33 * dot (tmpvar_36, n_33))), (tmpvar_35 - (n_33 * dot (tmpvar_35, n_33)))))) * (sin(max ((1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))), (1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))))) * (sin(tmpvar_55) / cos(tmpvar_55))))))) + (((cSpecular.xyz * (Rs_numerator_26 / (max (0.0, (tmpvar_38 * tmpvar_37)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_21 * 2.0));
  c_22.w = 1.0;
  c_1.xyz = c_22.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13));
  highp float tmpvar_15;
  tmpvar_15 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = textureCube (_ShadowMapTexture, xlv_TEXCOORD4);
  packDist_16 = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (packDist_16, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp float tmpvar_19;
  if ((tmpvar_18 < tmpvar_15)) {
    tmpvar_19 = _LightShadowData.x;
  } else {
    tmpvar_19 = 1.0;
  };
  mediump vec3 lightDir_20;
  lightDir_20 = lightDir_2;
  mediump float atten_21;
  atten_21 = (tmpvar_14.w * tmpvar_19);
  mediump vec4 c_22;
  mediump float B_23;
  mediump float A_24;
  highp float rough_sq_25;
  mediump vec3 Rs_numerator_26;
  highp float roughness_c_27;
  highp float roughness_b_28;
  highp float roughness_a_29;
  mediump float roughness_30;
  highp float geo_denominator_31;
  highp float geo_numerator_32;
  mediump vec3 n_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = normalize(normal_7);
  n_33 = tmpvar_34;
  mediump vec3 tmpvar_35;
  tmpvar_35 = normalize(lightDir_20);
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_37;
  tmpvar_37 = clamp (dot (n_33, tmpvar_35), 0.0, 1.0);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_33, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (tmpvar_36, normalize((tmpvar_35 + tmpvar_36))), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = (roughnessV * roughnessV);
  mediump float tmpvar_41;
  tmpvar_41 = (2.0 * tmpvar_37);
  geo_numerator_32 = tmpvar_41;
  geo_denominator_31 = tmpvar_39;
  mediump float tmpvar_42;
  tmpvar_42 = (1.0/(((4.0 * tmpvar_40) * pow (tmpvar_37, 4.0))));
  roughness_a_29 = tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = ((tmpvar_37 * tmpvar_37) - 1.0);
  roughness_b_28 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_40 * tmpvar_37) * tmpvar_37);
  roughness_c_27 = tmpvar_44;
  highp float tmpvar_45;
  tmpvar_45 = ((roughness_a_29 * exp((roughness_b_28 / roughness_c_27))) * tmpvar_4);
  roughness_30 = tmpvar_45;
  mediump float tmpvar_46;
  tmpvar_46 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_36, n_33), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_47;
  tmpvar_47 = vec3(((tmpvar_46 * min (1.0, min (((geo_numerator_32 * tmpvar_38) / geo_denominator_31), ((geo_numerator_32 * tmpvar_37) / geo_denominator_31)))) * roughness_30));
  Rs_numerator_26 = tmpvar_47;
  mediump float tmpvar_48;
  tmpvar_48 = (orenNayar * orenNayar);
  rough_sq_25 = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (1.0 - (0.5 * (rough_sq_25 / (rough_sq_25 + 0.57))));
  A_24 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (0.45 * (rough_sq_25 / (rough_sq_25 + 0.09)));
  B_23 = tmpvar_50;
  mediump float x_51;
  x_51 = dot (tmpvar_36, n_33);
  mediump float x_52;
  x_52 = dot (tmpvar_35, n_33);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_33);
  mediump float x_54;
  x_54 = dot (tmpvar_35, n_33);
  mediump float tmpvar_55;
  tmpvar_55 = min ((1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))), (1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))));
  c_22.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_37))) * vec3((A_24 + ((B_23 * max (0.0, dot ((tmpvar_36 - (n_33 * dot (tmpvar_36, n_33))), (tmpvar_35 - (n_33 * dot (tmpvar_35, n_33)))))) * (sin(max ((1.5708 - (sign(x_51) * (1.5708 - (sqrt((1.0 - abs(x_51))) * (1.5708 + (abs(x_51) * (-0.214602 + (abs(x_51) * (0.0865667 + (abs(x_51) * -0.0310296)))))))))), (1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))))) * (sin(tmpvar_55) / cos(tmpvar_55))))))) + (((cSpecular.xyz * (Rs_numerator_26 / (max (0.0, (tmpvar_38 * tmpvar_37)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_21 * 2.0));
  c_22.w = 1.0;
  c_1.xyz = c_22.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _LightPositionRange;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
uniform vec4 _LightPositionRange;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)));
  vec4 tmpvar_7;
  tmpvar_7 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  float tmpvar_8;
  tmpvar_8 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  float tmpvar_9;
  tmpvar_9 = dot (textureCube (_ShadowMapTexture, xlv_TEXCOORD4), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  float tmpvar_10;
  if ((tmpvar_9 < tmpvar_8)) {
    tmpvar_10 = _LightShadowData.x;
  } else {
    tmpvar_10 = 1.0;
  };
  vec4 c_11;
  vec3 tmpvar_12;
  tmpvar_12 = normalize(normal_2);
  vec3 tmpvar_13;
  tmpvar_13 = normalize(tmpvar_5);
  vec3 tmpvar_14;
  tmpvar_14 = normalize(xlv_TEXCOORD2);
  float tmpvar_15;
  tmpvar_15 = clamp (dot (tmpvar_12, tmpvar_13), 0.0, 1.0);
  float tmpvar_16;
  tmpvar_16 = clamp (dot (tmpvar_12, tmpvar_14), 0.0, 1.0);
  float tmpvar_17;
  tmpvar_17 = clamp (dot (tmpvar_14, normalize((tmpvar_13 + tmpvar_14))), 0.0, 1.0);
  float tmpvar_18;
  tmpvar_18 = (roughnessV * roughnessV);
  float tmpvar_19;
  tmpvar_19 = (2.0 * tmpvar_15);
  float tmpvar_20;
  tmpvar_20 = (orenNayar * orenNayar);
  float x_21;
  x_21 = dot (tmpvar_14, tmpvar_12);
  float x_22;
  x_22 = dot (tmpvar_13, tmpvar_12);
  float x_23;
  x_23 = dot (tmpvar_14, tmpvar_12);
  float x_24;
  x_24 = dot (tmpvar_13, tmpvar_12);
  float tmpvar_25;
  tmpvar_25 = min ((1.5708 - (sign(x_23) * (1.5708 - (sqrt((1.0 - abs(x_23))) * (1.5708 + (abs(x_23) * (-0.214602 + (abs(x_23) * (0.0865667 + (abs(x_23) * -0.0310296)))))))))), (1.5708 - (sign(x_24) * (1.5708 - (sqrt((1.0 - abs(x_24))) * (1.5708 + (abs(x_24) * (-0.214602 + (abs(x_24) * (0.0865667 + (abs(x_24) * -0.0310296)))))))))));
  c_11.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_15))) * vec3(((1.0 - (0.5 * (tmpvar_20 / (tmpvar_20 + 0.57)))) + (((0.45 * (tmpvar_20 / (tmpvar_20 + 0.09))) * max (0.0, dot ((tmpvar_14 - (tmpvar_12 * dot (tmpvar_14, tmpvar_12))), (tmpvar_13 - (tmpvar_12 * dot (tmpvar_13, tmpvar_12)))))) * (sin(max ((1.5708 - (sign(x_21) * (1.5708 - (sqrt((1.0 - abs(x_21))) * (1.5708 + (abs(x_21) * (-0.214602 + (abs(x_21) * (0.0865667 + (abs(x_21) * -0.0310296)))))))))), (1.5708 - (sign(x_22) * (1.5708 - (sqrt((1.0 - abs(x_22))) * (1.5708 + (abs(x_22) * (-0.214602 + (abs(x_22) * (0.0865667 + (abs(x_22) * -0.0310296)))))))))))) * (sin(tmpvar_25) / cos(tmpvar_25))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_14, tmpvar_12), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_19 * tmpvar_16) / tmpvar_17), ((tmpvar_19 * tmpvar_15) / tmpvar_17)))) * (((1.0/(((4.0 * tmpvar_18) * pow (tmpvar_15, 4.0)))) * exp((((tmpvar_15 * tmpvar_15) - 1.0) / ((tmpvar_18 * tmpvar_15) * tmpvar_15)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_16 * tmpvar_15)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * (((tmpvar_6.w * tmpvar_7.w) * tmpvar_10) * 2.0));
  c_11.w = 1.0;
  c_1.xyz = c_11.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [_LightPositionRange]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 19 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 20 [_MainTex_ST]
Vector 21 [_BumpMap_ST]
"vs_3_0
; 41 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c22, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c22.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c19.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c19.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
add o5.xyz, r0, -c18
mad o1.zw, v3.xyxy, c21.xyxy, c21
mad o1.xy, v3, c20, c20.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 21 [_BumpMap_ST]
Matrix 16 [_LightMatrix0] 4
Vector 2 [_LightPositionRange]
Vector 20 [_MainTex_ST]
Matrix 7 [_Object2World] 4
Matrix 11 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 3 [glstate_matrix_mvp] 4
Vector 15 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67 (35 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~46 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacgaaaaaacbmaaaaaaaaaaaaaaceaaaaaaaaaaaaabpeaaaaaaaa
aaaaaaaaaaaaabmmaaaaaabmaaaaablppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabliaaaaaaoeaaacaabfaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaba
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaaacaaabaaaaaaaaaapaaaaaaaaa
aaaaabdeaaacaabeaaabaaaaaaaaaapaaaaaaaaaaaaaabeaaaacaaahaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeoaaacaaalaaaeaaaaaaaaabbaaaaaaaaaaaaaabfm
aaacaaaaaaabaaaaaaaaabheaaaaaaaaaaaaabieaaacaaabaaabaaaaaaaaaapa
aaaaaaaaaaaaabjjaaacaaadaaaeaaaaaaaaabbaaaaaaaaaaaaaabkmaaacaaap
aaabaaaaaaaaaapaaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaafpengbgj
gofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgk
gfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaacbmaaebaaai
aaaaaaaaaaaaaaaaaaaaeakfaaaaaaabaaaaaaaeaaaaaaaiaaaaacjaaabaaaaf
aaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaahhefe
aaaaaaceaaaabacfaaaaaacaaaaaaacbaaaabaccaaaabackaaaabaclaaaabacd
paffeaafaaaabcaamcaaaaaaaaaaeaajaaaabcaameaaaaaaaaaagaangabdbcaa
bcaaaaaaaaaagabjgabpbcaabcaaaaaaaaaagacfbaclbcaaccaaaaaaafpieaaa
aaaaagiiaaaaaaaaafpigaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaa
afpicaaaaaaaapmiaaaaaaaamiapaaaaaabliiaakbaeagaamiapaaaaaamgiiaa
klaeafaamiapaaaaaalbdejeklaeaeaamiapiadoaagmaadeklaeadaamiahaaab
aamamgmaalanaaaomiahaaaaaaleblaacbaoabaamiahaaahaamamgleclanabaa
miahaaafaalogfaaobadagaamiapaaaaaablaaaakbaeakaamiahaaabaalelble
clamaaabmiahaaabaamagmleclalaaabmiahaaafabgflomaoladagafmiapaaaa
aamgaaaaklaeajaamiahaaahaalelbleclamabahmiahaaahaamagmleclalabah
miapaaaaaalbaaaaklaeaiaamiahaaafaamablaaobafagaamiahaaaiabmablma
klabapaemiacaaabaaloloaapaaiagaamiaeaaabaaloloaapaafaiaamiaiaaab
aaloloaapaaiadaamiapaaaaaagmffffklaeahaamiahaaaeabmablmaklahapae
miabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaamiaeiaabaaloloaa
paaeadaamiahiaaeaclpmaaakaaaacaamiadiaaaaalalabkilacbebemiamiaaa
aakmkmagilacbfbfmiabaaabaamdmdaapaababaafibhabacaamglegmkbaabdib
miahaaacaalbmaleklaabcacmiahaaaaaagmleleklaabbacmiahiaacaabfgmaa
obababaamiahiaadaablmaleklaabaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [_LightPositionRange]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 464 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 5 registers
[Configuration]
8
0000002441050500
[Microcode]
576
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc401f9c6c00dd108c0186c0830021dfac
00019c6c00800243011842436041dffc00011c6c010002308121826301a1dffc
401f9c6c01d0e00d8086c0c360405fa8401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa800001c6c011d000c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d000c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 38 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhdmbofobgiaefdkemcpfodjidnmkpojgabaaaaaaliahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcaeagaaaaeaaaabaaibabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacacaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaajhccabaaaafaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTextureB0, vec2(tmpvar_13));
  lowp vec4 tmpvar_15;
  tmpvar_15 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  highp float tmpvar_16;
  tmpvar_16 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = textureCube (_ShadowMapTexture, xlv_TEXCOORD4);
  packDist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (packDist_17, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp float tmpvar_20;
  if ((tmpvar_19 < tmpvar_16)) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  mediump vec3 lightDir_21;
  lightDir_21 = lightDir_2;
  mediump float atten_22;
  atten_22 = ((tmpvar_14.w * tmpvar_15.w) * tmpvar_20);
  mediump vec4 c_23;
  mediump float B_24;
  mediump float A_25;
  highp float rough_sq_26;
  mediump vec3 Rs_numerator_27;
  highp float roughness_c_28;
  highp float roughness_b_29;
  highp float roughness_a_30;
  mediump float roughness_31;
  highp float geo_denominator_32;
  highp float geo_numerator_33;
  mediump vec3 n_34;
  lowp vec3 tmpvar_35;
  tmpvar_35 = normalize(tmpvar_7);
  n_34 = tmpvar_35;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(lightDir_21);
  mediump vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_34, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (n_34, tmpvar_37), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = clamp (dot (tmpvar_37, normalize((tmpvar_36 + tmpvar_37))), 0.0, 1.0);
  mediump float tmpvar_41;
  tmpvar_41 = (roughnessV * roughnessV);
  mediump float tmpvar_42;
  tmpvar_42 = (2.0 * tmpvar_38);
  geo_numerator_33 = tmpvar_42;
  geo_denominator_32 = tmpvar_40;
  mediump float tmpvar_43;
  tmpvar_43 = (1.0/(((4.0 * tmpvar_41) * pow (tmpvar_38, 4.0))));
  roughness_a_30 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_38 * tmpvar_38) - 1.0);
  roughness_b_29 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = ((tmpvar_41 * tmpvar_38) * tmpvar_38);
  roughness_c_28 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = ((roughness_a_30 * exp((roughness_b_29 / roughness_c_28))) * tmpvar_4);
  roughness_31 = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_37, n_34), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_48;
  tmpvar_48 = vec3(((tmpvar_47 * min (1.0, min (((geo_numerator_33 * tmpvar_39) / geo_denominator_32), ((geo_numerator_33 * tmpvar_38) / geo_denominator_32)))) * roughness_31));
  Rs_numerator_27 = tmpvar_48;
  mediump float tmpvar_49;
  tmpvar_49 = (orenNayar * orenNayar);
  rough_sq_26 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (1.0 - (0.5 * (rough_sq_26 / (rough_sq_26 + 0.57))));
  A_25 = tmpvar_50;
  highp float tmpvar_51;
  tmpvar_51 = (0.45 * (rough_sq_26 / (rough_sq_26 + 0.09)));
  B_24 = tmpvar_51;
  mediump float x_52;
  x_52 = dot (tmpvar_37, n_34);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_34);
  mediump float x_54;
  x_54 = dot (tmpvar_37, n_34);
  mediump float x_55;
  x_55 = dot (tmpvar_36, n_34);
  mediump float tmpvar_56;
  tmpvar_56 = min ((1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))), (1.5708 - (sign(x_55) * (1.5708 - (sqrt((1.0 - abs(x_55))) * (1.5708 + (abs(x_55) * (-0.214602 + (abs(x_55) * (0.0865667 + (abs(x_55) * -0.0310296)))))))))));
  c_23.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_38))) * vec3((A_25 + ((B_24 * max (0.0, dot ((tmpvar_37 - (n_34 * dot (tmpvar_37, n_34))), (tmpvar_36 - (n_34 * dot (tmpvar_36, n_34)))))) * (sin(max ((1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))), (1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))))) * (sin(tmpvar_56) / cos(tmpvar_56))))))) + (((cSpecular.xyz * (Rs_numerator_27 / (max (0.0, (tmpvar_39 * tmpvar_38)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_22 * 2.0));
  c_23.w = 1.0;
  c_1.xyz = c_23.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTextureB0, vec2(tmpvar_13));
  lowp vec4 tmpvar_15;
  tmpvar_15 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  highp float tmpvar_16;
  tmpvar_16 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec4 packDist_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = textureCube (_ShadowMapTexture, xlv_TEXCOORD4);
  packDist_17 = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (packDist_17, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp float tmpvar_20;
  if ((tmpvar_19 < tmpvar_16)) {
    tmpvar_20 = _LightShadowData.x;
  } else {
    tmpvar_20 = 1.0;
  };
  mediump vec3 lightDir_21;
  lightDir_21 = lightDir_2;
  mediump float atten_22;
  atten_22 = ((tmpvar_14.w * tmpvar_15.w) * tmpvar_20);
  mediump vec4 c_23;
  mediump float B_24;
  mediump float A_25;
  highp float rough_sq_26;
  mediump vec3 Rs_numerator_27;
  highp float roughness_c_28;
  highp float roughness_b_29;
  highp float roughness_a_30;
  mediump float roughness_31;
  highp float geo_denominator_32;
  highp float geo_numerator_33;
  mediump vec3 n_34;
  lowp vec3 tmpvar_35;
  tmpvar_35 = normalize(normal_7);
  n_34 = tmpvar_35;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(lightDir_21);
  mediump vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_38;
  tmpvar_38 = clamp (dot (n_34, tmpvar_36), 0.0, 1.0);
  mediump float tmpvar_39;
  tmpvar_39 = clamp (dot (n_34, tmpvar_37), 0.0, 1.0);
  mediump float tmpvar_40;
  tmpvar_40 = clamp (dot (tmpvar_37, normalize((tmpvar_36 + tmpvar_37))), 0.0, 1.0);
  mediump float tmpvar_41;
  tmpvar_41 = (roughnessV * roughnessV);
  mediump float tmpvar_42;
  tmpvar_42 = (2.0 * tmpvar_38);
  geo_numerator_33 = tmpvar_42;
  geo_denominator_32 = tmpvar_40;
  mediump float tmpvar_43;
  tmpvar_43 = (1.0/(((4.0 * tmpvar_41) * pow (tmpvar_38, 4.0))));
  roughness_a_30 = tmpvar_43;
  mediump float tmpvar_44;
  tmpvar_44 = ((tmpvar_38 * tmpvar_38) - 1.0);
  roughness_b_29 = tmpvar_44;
  mediump float tmpvar_45;
  tmpvar_45 = ((tmpvar_41 * tmpvar_38) * tmpvar_38);
  roughness_c_28 = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = ((roughness_a_30 * exp((roughness_b_29 / roughness_c_28))) * tmpvar_4);
  roughness_31 = tmpvar_46;
  mediump float tmpvar_47;
  tmpvar_47 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_37, n_34), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_48;
  tmpvar_48 = vec3(((tmpvar_47 * min (1.0, min (((geo_numerator_33 * tmpvar_39) / geo_denominator_32), ((geo_numerator_33 * tmpvar_38) / geo_denominator_32)))) * roughness_31));
  Rs_numerator_27 = tmpvar_48;
  mediump float tmpvar_49;
  tmpvar_49 = (orenNayar * orenNayar);
  rough_sq_26 = tmpvar_49;
  highp float tmpvar_50;
  tmpvar_50 = (1.0 - (0.5 * (rough_sq_26 / (rough_sq_26 + 0.57))));
  A_25 = tmpvar_50;
  highp float tmpvar_51;
  tmpvar_51 = (0.45 * (rough_sq_26 / (rough_sq_26 + 0.09)));
  B_24 = tmpvar_51;
  mediump float x_52;
  x_52 = dot (tmpvar_37, n_34);
  mediump float x_53;
  x_53 = dot (tmpvar_36, n_34);
  mediump float x_54;
  x_54 = dot (tmpvar_37, n_34);
  mediump float x_55;
  x_55 = dot (tmpvar_36, n_34);
  mediump float tmpvar_56;
  tmpvar_56 = min ((1.5708 - (sign(x_54) * (1.5708 - (sqrt((1.0 - abs(x_54))) * (1.5708 + (abs(x_54) * (-0.214602 + (abs(x_54) * (0.0865667 + (abs(x_54) * -0.0310296)))))))))), (1.5708 - (sign(x_55) * (1.5708 - (sqrt((1.0 - abs(x_55))) * (1.5708 + (abs(x_55) * (-0.214602 + (abs(x_55) * (0.0865667 + (abs(x_55) * -0.0310296)))))))))));
  c_23.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_38))) * vec3((A_25 + ((B_24 * max (0.0, dot ((tmpvar_37 - (n_34 * dot (tmpvar_37, n_34))), (tmpvar_36 - (n_34 * dot (tmpvar_36, n_34)))))) * (sin(max ((1.5708 - (sign(x_52) * (1.5708 - (sqrt((1.0 - abs(x_52))) * (1.5708 + (abs(x_52) * (-0.214602 + (abs(x_52) * (0.0865667 + (abs(x_52) * -0.0310296)))))))))), (1.5708 - (sign(x_53) * (1.5708 - (sqrt((1.0 - abs(x_53))) * (1.5708 + (abs(x_53) * (-0.214602 + (abs(x_53) * (0.0865667 + (abs(x_53) * -0.0310296)))))))))))) * (sin(tmpvar_56) / cos(tmpvar_56))))))) + (((cSpecular.xyz * (Rs_numerator_27 / (max (0.0, (tmpvar_39 * tmpvar_38)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_22 * 2.0));
  c_23.w = 1.0;
  c_1.xyz = c_23.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLSL
#ifdef VERTEX
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform mat4 unity_World2Shadow[4];
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * gl_Vertex));
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5));
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz)));
  vec4 shadowVals_8;
  vec3 tmpvar_9;
  tmpvar_9 = (xlv_TEXCOORD4.xyz / xlv_TEXCOORD4.w);
  shadowVals_8.x = texture2D (_ShadowMapTexture, (tmpvar_9.xy + _ShadowOffsets[0].xy)).x;
  shadowVals_8.y = texture2D (_ShadowMapTexture, (tmpvar_9.xy + _ShadowOffsets[1].xy)).x;
  shadowVals_8.z = texture2D (_ShadowMapTexture, (tmpvar_9.xy + _ShadowOffsets[2].xy)).x;
  shadowVals_8.w = texture2D (_ShadowMapTexture, (tmpvar_9.xy + _ShadowOffsets[3].xy)).x;
  bvec4 tmpvar_10;
  tmpvar_10 = lessThan (shadowVals_8, tmpvar_9.zzzz);
  vec4 tmpvar_11;
  tmpvar_11 = _LightShadowData.xxxx;
  float tmpvar_12;
  if (tmpvar_10.x) {
    tmpvar_12 = tmpvar_11.x;
  } else {
    tmpvar_12 = 1.0;
  };
  float tmpvar_13;
  if (tmpvar_10.y) {
    tmpvar_13 = tmpvar_11.y;
  } else {
    tmpvar_13 = 1.0;
  };
  float tmpvar_14;
  if (tmpvar_10.z) {
    tmpvar_14 = tmpvar_11.z;
  } else {
    tmpvar_14 = 1.0;
  };
  float tmpvar_15;
  if (tmpvar_10.w) {
    tmpvar_15 = tmpvar_11.w;
  } else {
    tmpvar_15 = 1.0;
  };
  vec4 tmpvar_16;
  tmpvar_16.x = tmpvar_12;
  tmpvar_16.y = tmpvar_13;
  tmpvar_16.z = tmpvar_14;
  tmpvar_16.w = tmpvar_15;
  vec4 c_17;
  vec3 tmpvar_18;
  tmpvar_18 = normalize(normal_2);
  vec3 tmpvar_19;
  tmpvar_19 = normalize(tmpvar_5);
  vec3 tmpvar_20;
  tmpvar_20 = normalize(xlv_TEXCOORD2);
  float tmpvar_21;
  tmpvar_21 = clamp (dot (tmpvar_18, tmpvar_19), 0.0, 1.0);
  float tmpvar_22;
  tmpvar_22 = clamp (dot (tmpvar_18, tmpvar_20), 0.0, 1.0);
  float tmpvar_23;
  tmpvar_23 = clamp (dot (tmpvar_20, normalize((tmpvar_19 + tmpvar_20))), 0.0, 1.0);
  float tmpvar_24;
  tmpvar_24 = (roughnessV * roughnessV);
  float tmpvar_25;
  tmpvar_25 = (2.0 * tmpvar_21);
  float tmpvar_26;
  tmpvar_26 = (orenNayar * orenNayar);
  float x_27;
  x_27 = dot (tmpvar_20, tmpvar_18);
  float x_28;
  x_28 = dot (tmpvar_19, tmpvar_18);
  float x_29;
  x_29 = dot (tmpvar_20, tmpvar_18);
  float x_30;
  x_30 = dot (tmpvar_19, tmpvar_18);
  float tmpvar_31;
  tmpvar_31 = min ((1.5708 - (sign(x_29) * (1.5708 - (sqrt((1.0 - abs(x_29))) * (1.5708 + (abs(x_29) * (-0.214602 + (abs(x_29) * (0.0865667 + (abs(x_29) * -0.0310296)))))))))), (1.5708 - (sign(x_30) * (1.5708 - (sqrt((1.0 - abs(x_30))) * (1.5708 + (abs(x_30) * (-0.214602 + (abs(x_30) * (0.0865667 + (abs(x_30) * -0.0310296)))))))))));
  c_17.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_21))) * vec3(((1.0 - (0.5 * (tmpvar_26 / (tmpvar_26 + 0.57)))) + (((0.45 * (tmpvar_26 / (tmpvar_26 + 0.09))) * max (0.0, dot ((tmpvar_20 - (tmpvar_18 * dot (tmpvar_20, tmpvar_18))), (tmpvar_19 - (tmpvar_18 * dot (tmpvar_19, tmpvar_18)))))) * (sin(max ((1.5708 - (sign(x_27) * (1.5708 - (sqrt((1.0 - abs(x_27))) * (1.5708 + (abs(x_27) * (-0.214602 + (abs(x_27) * (0.0865667 + (abs(x_27) * -0.0310296)))))))))), (1.5708 - (sign(x_28) * (1.5708 - (sqrt((1.0 - abs(x_28))) * (1.5708 + (abs(x_28) * (-0.214602 + (abs(x_28) * (0.0865667 + (abs(x_28) * -0.0310296)))))))))))) * (sin(tmpvar_31) / cos(tmpvar_31))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_20, tmpvar_18), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_25 * tmpvar_22) / tmpvar_23), ((tmpvar_25 * tmpvar_21) / tmpvar_23)))) * (((1.0/(((4.0 * tmpvar_24) * pow (tmpvar_21, 4.0)))) * exp((((tmpvar_21 * tmpvar_21) - 1.0) / ((tmpvar_24 * tmpvar_21) * tmpvar_21)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_22 * tmpvar_21)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * ((((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_6.w) * tmpvar_7.w) * dot (tmpvar_16, vec4(0.25, 0.25, 0.25, 0.25))) * 2.0));
  c_17.w = 1.0;
  c_1.xyz = c_17.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_WorldSpaceCameraPos]
Vector 21 [_WorldSpaceLightPos0]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 22 [unity_Scale]
Matrix 16 [_LightMatrix0]
Vector 23 [_MainTex_ST]
Vector 24 [_BumpMap_ST]
"vs_3_0
; 45 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c25, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c25.x
mov r0.xyz, c20
dp4 r2.z, r0, c14
dp4 r2.x, r0, c12
dp4 r2.y, r0, c13
mad r0.xyz, r2, c22.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c14
dp4 r4.z, c21, r0
mov r0, c13
dp4 r4.y, c21, r0
mov r1, c12
dp4 r4.x, c21, r1
mad r0.xyz, r4, c22.w, -v0
dp4 r0.w, v0, c11
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mul o3.xyz, r2.w, r2
dp4 o4.w, r0, c19
dp4 o4.z, r0, c18
dp4 o4.y, r0, c17
dp4 o4.x, r0, c16
dp4 o5.w, r0, c7
dp4 o5.z, r0, c6
dp4 o5.y, r0, c5
dp4 o5.x, r0, c4
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 24 [_BumpMap_ST]
Matrix 19 [_LightMatrix0] 4
Vector 23 [_MainTex_ST]
Matrix 10 [_Object2World] 4
Matrix 14 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 6 [glstate_matrix_mvp] 4
Vector 18 [unity_Scale]
Matrix 2 [unity_World2Shadow0] 4
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 50.67 (38 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~50 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaachaaaaaaceaaaaaaaaaaaaaaaceaaaaaaaaaaaaacaeaaaaaaaa
aaaaaaaaaaaaabnmaaaaaabmaaaaabmppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabmiaaaaaaoeaaacaabiaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaabd
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaabhaaabaaaaaaaaaapaaaaaaaaa
aaaaabcmaaacaaakaaaeaaaaaaaaabbaaaaaaaaaaaaaabdkaaacaaaoaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeiaaacaaaaaaabaaaaaaaaabgaaaaaaaaaaaaaabha
aaacaaabaaabaaaaaaaaaapaaaaaaaaaaaaaabifaaacaaagaaaeaaaaaaaaabba
aaaaaaaaaaaaabjiaaacaabcaaabaaaaaaaaaapaaaaaaaaaaaaaabkeaaacaaac
aaaeaaaaaaaaabliaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpengbgjgofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgm
geaafpfhgphcgmgedcepgcgkgfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhc
gbfagphdaaklklklaaabaaadaaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdha
gbgdgfemgjghgihefagphddaaaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaa
hfgogjhehjfpfdgdgbgmgfaahfgogjhehjfpfhgphcgmgedcfdgigbgegphhaakl
aaadaaadaaaeaaaeaaaeaaaaaaaaaaaahghdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaceaaaebaaaiaaaaaaaaaaaaaaaaaaaaeikfaaaaaaab
aaaaaaaeaaaaaaaiaaaaacjaaabaaaafaaaagaagaaaadaahaadafaaiaaaapafa
aaachbfbaaafhcfcaaagpdfdaaahpefeaaaaaacdaaaabaceaaaaaacaaaaaaacb
aaaabaccaaaabacmaaaabacnaaaabacopaffeaafaaaabcaamcaaaaaaaaaaeaaj
aaaabcaameaaaaaaaaaagaangabdbcaabcaaaaaaaaaagabjgabpbcaabcaaaaaa
aaaagacfeaclbcaaccaaaaaaafpieaaaaaaaagiiaaaaaaaaafpigaaaaaaaagii
aaaaaaaaafpicaaaaaaaaoiiaaaaaaaaafpiaaaaaaaaapmiaaaaaaaamiapaaab
aabliiaakbaeajaamiapaaabaamgiiaaklaeaiabmiapaaabaalbdejeklaeahab
miapiadoaagmaadeklaeagabmiahaaadaamamgmaalbaaabbmiahaaabaaleblaa
cbbbabaamiahaaahaamamgleclbaababmiahaaafaalogfaaobacagaamiapaaab
aablaaaakbaeanaamiahaaadaalelbleclapaaadmiahaaadaamagmleclaoaaad
miahaaafabgflomaolacagafmiapaaabaamgaaaaklaeamabmiahaaahaalelble
clapabahmiahaaahaamagmleclaoabahmiapaaabaalbjejeklaealabmiahaaaf
aamablaaobafagaamiahaaaiabmablmakladbcaemiacaaadaaloloaapaaiagaa
miaeaaadaaloloaapaafaiaamiaiaaadaaloloaapaaiacaamiapaaabaagmpije
klaeakabmiahaaaeabmablmaklahbcaemiabiaabaaloloaapaaeagaamiaciaab
aaloloaapaafaeaamiaeiaabaaloloaapaaeacaamiadiaaaaalalabkilaabhbh
miamiaaaaakmkmagilaabibimiapaaaaaalbiiaakbabbgaamiabaaadaamdmdaa
paadadaamiapaaacaabliiaaklabbfaafibpadaaaalbiigmkbabafidmiapaaaa
aabliiaaklabaeaamiapaaaaaamgdejeklabadaamiapaaacaamgdejeklabbeac
miahiaacaabfgmaaobadadaamiapiaadaagmaadeklabbdacmiapiaaeaagmaade
klabacaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [unity_World2Shadow0]
Matrix 264 [_Object2World]
Matrix 268 [_World2Object]
Vector 465 [unity_Scale]
Matrix 272 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 40 instructions using 5 registers
[Configuration]
8
0000002841050500
[Microcode]
640
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0b00d8106c0c360403ffc
00001c6c01d0a00d8106c0c360405ffc00001c6c01d0900d8106c0c360409ffc
00001c6c01d0800d8106c0c360411ffc00021c6c01d0e00d8286c0c360405ffc
00021c6c01d0d00d8286c0c360409ffc00021c6c01d0c00d8286c0c360411ffc
00009c6c0190e00c0686c0c360405ffc00009c6c0190d00c0686c0c360409ffc
00009c6c0190c00c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d1300d8086c0c360403fa8
401f9c6c01d1200d8086c0c360405fa8401f9c6c01d1100d8086c0c360409fa8
401f9c6c01d1000d8086c0c360411fa8401f9c6c01d0700d8086c0c360403fac
401f9c6c01d0600d8086c0c360405fac401f9c6c01d0500d8086c0c360409fac
401f9c6c01d0400d8086c0c360411fac00001c6c011d100c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d100c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 288 // 288 used size, 16 vars
Matrix 112 [_LightMatrix0] 4
Vector 256 [_MainTex_ST] 4
Vector 272 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityShadows" 3
BindCB "UnityPerDraw" 4
// 41 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhjmolmkmpomaghmbpfjbpheiljggfdloabaaaaaadmaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefciiagaaaaeaaaabaakcabaaaafjaaaaae
egiocaaaaaaaaaaabcaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaamaaaaaafjaaaaae
egiocaaaaeaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaaeaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaabaaaaaaaogikcaaaaaaaaaaabaaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaabbaaaaaakgiocaaaaaaaaaaabbaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaaeaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
aeaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaaeaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
aeaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaaeaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaaeaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaeaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaaeaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaeaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaiaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaahaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaajaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaakaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaajaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaiaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaakaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaafaaaaaaegiocaaa
adaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec4 shadowVals_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD4.xyz / xlv_TEXCOORD4.w);
  highp vec2 P_21;
  P_21 = (tmpvar_20.xy + _ShadowOffsets[0].xy);
  lowp float tmpvar_22;
  tmpvar_22 = texture2D (_ShadowMapTexture, P_21).x;
  shadowVals_19.x = tmpvar_22;
  highp vec2 P_23;
  P_23 = (tmpvar_20.xy + _ShadowOffsets[1].xy);
  lowp float tmpvar_24;
  tmpvar_24 = texture2D (_ShadowMapTexture, P_23).x;
  shadowVals_19.y = tmpvar_24;
  highp vec2 P_25;
  P_25 = (tmpvar_20.xy + _ShadowOffsets[2].xy);
  lowp float tmpvar_26;
  tmpvar_26 = texture2D (_ShadowMapTexture, P_25).x;
  shadowVals_19.z = tmpvar_26;
  highp vec2 P_27;
  P_27 = (tmpvar_20.xy + _ShadowOffsets[3].xy);
  lowp float tmpvar_28;
  tmpvar_28 = texture2D (_ShadowMapTexture, P_27).x;
  shadowVals_19.w = tmpvar_28;
  bvec4 tmpvar_29;
  tmpvar_29 = lessThan (shadowVals_19, tmpvar_20.zzzz);
  highp vec4 tmpvar_30;
  tmpvar_30 = _LightShadowData.xxxx;
  highp float tmpvar_31;
  if (tmpvar_29.x) {
    tmpvar_31 = tmpvar_30.x;
  } else {
    tmpvar_31 = 1.0;
  };
  highp float tmpvar_32;
  if (tmpvar_29.y) {
    tmpvar_32 = tmpvar_30.y;
  } else {
    tmpvar_32 = 1.0;
  };
  highp float tmpvar_33;
  if (tmpvar_29.z) {
    tmpvar_33 = tmpvar_30.z;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_29.w) {
    tmpvar_34 = tmpvar_30.w;
  } else {
    tmpvar_34 = 1.0;
  };
  highp vec4 tmpvar_35;
  tmpvar_35.x = tmpvar_31;
  tmpvar_35.y = tmpvar_32;
  tmpvar_35.z = tmpvar_33;
  tmpvar_35.w = tmpvar_34;
  shadows_18 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_36;
  mediump vec3 lightDir_37;
  lightDir_37 = lightDir_2;
  mediump float atten_38;
  atten_38 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17);
  mediump vec4 c_39;
  mediump float B_40;
  mediump float A_41;
  highp float rough_sq_42;
  mediump vec3 Rs_numerator_43;
  highp float roughness_c_44;
  highp float roughness_b_45;
  highp float roughness_a_46;
  mediump float roughness_47;
  highp float geo_denominator_48;
  highp float geo_numerator_49;
  mediump vec3 n_50;
  lowp vec3 tmpvar_51;
  tmpvar_51 = normalize(tmpvar_7);
  n_50 = tmpvar_51;
  mediump vec3 tmpvar_52;
  tmpvar_52 = normalize(lightDir_37);
  mediump vec3 tmpvar_53;
  tmpvar_53 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (n_50, tmpvar_52), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = clamp (dot (n_50, tmpvar_53), 0.0, 1.0);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (tmpvar_53, normalize((tmpvar_52 + tmpvar_53))), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = (roughnessV * roughnessV);
  mediump float tmpvar_58;
  tmpvar_58 = (2.0 * tmpvar_54);
  geo_numerator_49 = tmpvar_58;
  geo_denominator_48 = tmpvar_56;
  mediump float tmpvar_59;
  tmpvar_59 = (1.0/(((4.0 * tmpvar_57) * pow (tmpvar_54, 4.0))));
  roughness_a_46 = tmpvar_59;
  mediump float tmpvar_60;
  tmpvar_60 = ((tmpvar_54 * tmpvar_54) - 1.0);
  roughness_b_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = ((tmpvar_57 * tmpvar_54) * tmpvar_54);
  roughness_c_44 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = ((roughness_a_46 * exp((roughness_b_45 / roughness_c_44))) * tmpvar_4);
  roughness_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_53, n_50), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_64;
  tmpvar_64 = vec3(((tmpvar_63 * min (1.0, min (((geo_numerator_49 * tmpvar_55) / geo_denominator_48), ((geo_numerator_49 * tmpvar_54) / geo_denominator_48)))) * roughness_47));
  Rs_numerator_43 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = (orenNayar * orenNayar);
  rough_sq_42 = tmpvar_65;
  highp float tmpvar_66;
  tmpvar_66 = (1.0 - (0.5 * (rough_sq_42 / (rough_sq_42 + 0.57))));
  A_41 = tmpvar_66;
  highp float tmpvar_67;
  tmpvar_67 = (0.45 * (rough_sq_42 / (rough_sq_42 + 0.09)));
  B_40 = tmpvar_67;
  mediump float x_68;
  x_68 = dot (tmpvar_53, n_50);
  mediump float x_69;
  x_69 = dot (tmpvar_52, n_50);
  mediump float x_70;
  x_70 = dot (tmpvar_53, n_50);
  mediump float x_71;
  x_71 = dot (tmpvar_52, n_50);
  mediump float tmpvar_72;
  tmpvar_72 = min ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))));
  c_39.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_54))) * vec3((A_41 + ((B_40 * max (0.0, dot ((tmpvar_53 - (n_50 * dot (tmpvar_53, n_50))), (tmpvar_52 - (n_50 * dot (tmpvar_52, n_50)))))) * (sin(max ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))))) * (sin(tmpvar_72) / cos(tmpvar_72))))))) + (((cSpecular.xyz * (Rs_numerator_43 / (max (0.0, (tmpvar_55 * tmpvar_54)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_38 * 2.0));
  c_39.w = 1.0;
  c_1.xyz = c_39.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  lowp vec4 tmpvar_13;
  highp vec2 P_14;
  P_14 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_13 = texture2D (_LightTexture0, P_14);
  highp float tmpvar_15;
  tmpvar_15 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_LightTextureB0, vec2(tmpvar_15));
  lowp float tmpvar_17;
  mediump vec4 shadows_18;
  highp vec4 shadowVals_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (xlv_TEXCOORD4.xyz / xlv_TEXCOORD4.w);
  highp vec2 P_21;
  P_21 = (tmpvar_20.xy + _ShadowOffsets[0].xy);
  lowp float tmpvar_22;
  tmpvar_22 = texture2D (_ShadowMapTexture, P_21).x;
  shadowVals_19.x = tmpvar_22;
  highp vec2 P_23;
  P_23 = (tmpvar_20.xy + _ShadowOffsets[1].xy);
  lowp float tmpvar_24;
  tmpvar_24 = texture2D (_ShadowMapTexture, P_23).x;
  shadowVals_19.y = tmpvar_24;
  highp vec2 P_25;
  P_25 = (tmpvar_20.xy + _ShadowOffsets[2].xy);
  lowp float tmpvar_26;
  tmpvar_26 = texture2D (_ShadowMapTexture, P_25).x;
  shadowVals_19.z = tmpvar_26;
  highp vec2 P_27;
  P_27 = (tmpvar_20.xy + _ShadowOffsets[3].xy);
  lowp float tmpvar_28;
  tmpvar_28 = texture2D (_ShadowMapTexture, P_27).x;
  shadowVals_19.w = tmpvar_28;
  bvec4 tmpvar_29;
  tmpvar_29 = lessThan (shadowVals_19, tmpvar_20.zzzz);
  highp vec4 tmpvar_30;
  tmpvar_30 = _LightShadowData.xxxx;
  highp float tmpvar_31;
  if (tmpvar_29.x) {
    tmpvar_31 = tmpvar_30.x;
  } else {
    tmpvar_31 = 1.0;
  };
  highp float tmpvar_32;
  if (tmpvar_29.y) {
    tmpvar_32 = tmpvar_30.y;
  } else {
    tmpvar_32 = 1.0;
  };
  highp float tmpvar_33;
  if (tmpvar_29.z) {
    tmpvar_33 = tmpvar_30.z;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_29.w) {
    tmpvar_34 = tmpvar_30.w;
  } else {
    tmpvar_34 = 1.0;
  };
  highp vec4 tmpvar_35;
  tmpvar_35.x = tmpvar_31;
  tmpvar_35.y = tmpvar_32;
  tmpvar_35.z = tmpvar_33;
  tmpvar_35.w = tmpvar_34;
  shadows_18 = tmpvar_35;
  mediump float tmpvar_36;
  tmpvar_36 = dot (shadows_18, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_17 = tmpvar_36;
  mediump vec3 lightDir_37;
  lightDir_37 = lightDir_2;
  mediump float atten_38;
  atten_38 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_13.w) * tmpvar_16.w) * tmpvar_17);
  mediump vec4 c_39;
  mediump float B_40;
  mediump float A_41;
  highp float rough_sq_42;
  mediump vec3 Rs_numerator_43;
  highp float roughness_c_44;
  highp float roughness_b_45;
  highp float roughness_a_46;
  mediump float roughness_47;
  highp float geo_denominator_48;
  highp float geo_numerator_49;
  mediump vec3 n_50;
  lowp vec3 tmpvar_51;
  tmpvar_51 = normalize(normal_7);
  n_50 = tmpvar_51;
  mediump vec3 tmpvar_52;
  tmpvar_52 = normalize(lightDir_37);
  mediump vec3 tmpvar_53;
  tmpvar_53 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_54;
  tmpvar_54 = clamp (dot (n_50, tmpvar_52), 0.0, 1.0);
  mediump float tmpvar_55;
  tmpvar_55 = clamp (dot (n_50, tmpvar_53), 0.0, 1.0);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (tmpvar_53, normalize((tmpvar_52 + tmpvar_53))), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = (roughnessV * roughnessV);
  mediump float tmpvar_58;
  tmpvar_58 = (2.0 * tmpvar_54);
  geo_numerator_49 = tmpvar_58;
  geo_denominator_48 = tmpvar_56;
  mediump float tmpvar_59;
  tmpvar_59 = (1.0/(((4.0 * tmpvar_57) * pow (tmpvar_54, 4.0))));
  roughness_a_46 = tmpvar_59;
  mediump float tmpvar_60;
  tmpvar_60 = ((tmpvar_54 * tmpvar_54) - 1.0);
  roughness_b_45 = tmpvar_60;
  mediump float tmpvar_61;
  tmpvar_61 = ((tmpvar_57 * tmpvar_54) * tmpvar_54);
  roughness_c_44 = tmpvar_61;
  highp float tmpvar_62;
  tmpvar_62 = ((roughness_a_46 * exp((roughness_b_45 / roughness_c_44))) * tmpvar_4);
  roughness_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_53, n_50), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_64;
  tmpvar_64 = vec3(((tmpvar_63 * min (1.0, min (((geo_numerator_49 * tmpvar_55) / geo_denominator_48), ((geo_numerator_49 * tmpvar_54) / geo_denominator_48)))) * roughness_47));
  Rs_numerator_43 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = (orenNayar * orenNayar);
  rough_sq_42 = tmpvar_65;
  highp float tmpvar_66;
  tmpvar_66 = (1.0 - (0.5 * (rough_sq_42 / (rough_sq_42 + 0.57))));
  A_41 = tmpvar_66;
  highp float tmpvar_67;
  tmpvar_67 = (0.45 * (rough_sq_42 / (rough_sq_42 + 0.09)));
  B_40 = tmpvar_67;
  mediump float x_68;
  x_68 = dot (tmpvar_53, n_50);
  mediump float x_69;
  x_69 = dot (tmpvar_52, n_50);
  mediump float x_70;
  x_70 = dot (tmpvar_53, n_50);
  mediump float x_71;
  x_71 = dot (tmpvar_52, n_50);
  mediump float tmpvar_72;
  tmpvar_72 = min ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))));
  c_39.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_54))) * vec3((A_41 + ((B_40 * max (0.0, dot ((tmpvar_53 - (n_50 * dot (tmpvar_53, n_50))), (tmpvar_52 - (n_50 * dot (tmpvar_52, n_50)))))) * (sin(max ((1.5708 - (sign(x_68) * (1.5708 - (sqrt((1.0 - abs(x_68))) * (1.5708 + (abs(x_68) * (-0.214602 + (abs(x_68) * (0.0865667 + (abs(x_68) * -0.0310296)))))))))), (1.5708 - (sign(x_69) * (1.5708 - (sqrt((1.0 - abs(x_69))) * (1.5708 + (abs(x_69) * (-0.214602 + (abs(x_69) * (0.0865667 + (abs(x_69) * -0.0310296)))))))))))) * (sin(tmpvar_72) / cos(tmpvar_72))))))) + (((cSpecular.xyz * (Rs_numerator_43 / (max (0.0, (tmpvar_55 * tmpvar_54)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_38 * 2.0));
  c_39.w = 1.0;
  c_1.xyz = c_39.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 20 [_WorldSpaceCameraPos]
Vector 21 [_WorldSpaceLightPos0]
Matrix 4 [unity_World2Shadow0]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 22 [unity_Scale]
Matrix 16 [_LightMatrix0]
Vector 23 [_MainTex_ST]
Vector 24 [_BumpMap_ST]
"vs_3_0
; 45 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c25, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c25.x
mov r0.xyz, c20
dp4 r2.z, r0, c14
dp4 r2.x, r0, c12
dp4 r2.y, r0, c13
mad r0.xyz, r2, c22.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c14
dp4 r4.z, c21, r0
mov r0, c13
dp4 r4.y, c21, r0
mov r1, c12
dp4 r4.x, c21, r1
mad r0.xyz, r4, c22.w, -v0
dp4 r0.w, v0, c11
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c10
dp4 r0.x, v0, c8
dp4 r0.y, v0, c9
mul o3.xyz, r2.w, r2
dp4 o4.w, r0, c19
dp4 o4.z, r0, c18
dp4 o4.y, r0, c17
dp4 o4.x, r0, c16
dp4 o5.w, r0, c7
dp4 o5.z, r0, c6
dp4 o5.y, r0, c5
dp4 o5.x, r0, c4
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Matrix 260 [unity_World2Shadow0]
Matrix 264 [_Object2World]
Matrix 268 [_World2Object]
Vector 465 [unity_Scale]
Matrix 272 [_LightMatrix0]
Vector 464 [_MainTex_ST]
Vector 463 [_BumpMap_ST]
"sce_vp_rsx // 40 instructions using 5 registers
[Configuration]
8
0000002841050500
[Microcode]
640
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011cf800810040d560607f9c
401f9c6c011d0808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0b00d8106c0c360403ffc
00001c6c01d0a00d8106c0c360405ffc00001c6c01d0900d8106c0c360409ffc
00001c6c01d0800d8106c0c360411ffc00021c6c01d0e00d8286c0c360405ffc
00021c6c01d0d00d8286c0c360409ffc00021c6c01d0c00d8286c0c360411ffc
00009c6c0190e00c0686c0c360405ffc00009c6c0190d00c0686c0c360409ffc
00009c6c0190c00c0686c0c360411ffc00019c6c00800243011842436041dffc
00011c6c010002308121826301a1dffc401f9c6c01d1300d8086c0c360403fa8
401f9c6c01d1200d8086c0c360405fa8401f9c6c01d1100d8086c0c360409fa8
401f9c6c01d1000d8086c0c360411fa8401f9c6c01d0700d8086c0c360403fac
401f9c6c01d0600d8086c0c360405fac401f9c6c01d0500d8086c0c360409fac
401f9c6c01d0400d8086c0c360411fac00001c6c011d100c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d100c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 288 // 288 used size, 16 vars
Matrix 112 [_LightMatrix0] 4
Vector 256 [_MainTex_ST] 4
Vector 272 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 16 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
ConstBuffer "UnityShadows" 416 // 384 used size, 8 vars
Matrix 128 [unity_World2Shadow0] 4
Matrix 192 [unity_World2Shadow1] 4
Matrix 256 [unity_World2Shadow2] 4
Matrix 320 [unity_World2Shadow3] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityShadows" 3
BindCB "UnityPerDraw" 4
// 41 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhjmolmkmpomaghmbpfjbpheiljggfdloabaaaaaadmaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefciiagaaaaeaaaabaakcabaaaafjaaaaae
egiocaaaaaaaaaaabcaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaaamaaaaaafjaaaaae
egiocaaaaeaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagfaaaaad
pccabaaaafaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaaeaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaabaaaaaaaogikcaaaaaaaaaaabaaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaabbaaaaaakgiocaaaaaaaaaaabbaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaaeaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
aeaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaaeaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
aeaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaaeaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaaeaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaaeaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaeaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaaeaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhccabaaaadaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaeaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aeaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaeaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaeaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaiaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaahaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaajaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaakaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
diaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaaadaaaaaaajaaaaaa
dcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaaiaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaadaaaaaaakaaaaaa
kgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaaafaaaaaaegiocaaa
adaaaaaaalaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
#extension GL_EXT_shadow_samplers : enable
varying highp vec4 xlv_TEXCOORD4;
varying highp vec4 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform highp vec4 _ShadowOffsets[4];
uniform sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  tmpvar_8 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_8;
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_11;
  lowp vec4 tmpvar_12;
  highp vec2 P_13;
  P_13 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  tmpvar_12 = texture2D (_LightTexture0, P_13);
  highp float tmpvar_14;
  tmpvar_14 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_LightTextureB0, vec2(tmpvar_14));
  lowp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = (xlv_TEXCOORD4.xyz / xlv_TEXCOORD4.w);
  highp vec3 coord_19;
  coord_19 = (tmpvar_18 + _ShadowOffsets[0].xyz);
  lowp float tmpvar_20;
  tmpvar_20 = shadow2DEXT (_ShadowMapTexture, coord_19);
  shadows_17.x = tmpvar_20;
  highp vec3 coord_21;
  coord_21 = (tmpvar_18 + _ShadowOffsets[1].xyz);
  lowp float tmpvar_22;
  tmpvar_22 = shadow2DEXT (_ShadowMapTexture, coord_21);
  shadows_17.y = tmpvar_22;
  highp vec3 coord_23;
  coord_23 = (tmpvar_18 + _ShadowOffsets[2].xyz);
  lowp float tmpvar_24;
  tmpvar_24 = shadow2DEXT (_ShadowMapTexture, coord_23);
  shadows_17.z = tmpvar_24;
  highp vec3 coord_25;
  coord_25 = (tmpvar_18 + _ShadowOffsets[3].xyz);
  lowp float tmpvar_26;
  tmpvar_26 = shadow2DEXT (_ShadowMapTexture, coord_25);
  shadows_17.w = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27 = (_LightShadowData.xxxx + (shadows_17 * (1.0 - _LightShadowData.xxxx)));
  shadows_17 = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_28;
  mediump vec3 lightDir_29;
  lightDir_29 = lightDir_2;
  mediump float atten_30;
  atten_30 = (((float((xlv_TEXCOORD3.z > 0.0)) * tmpvar_12.w) * tmpvar_15.w) * tmpvar_16);
  mediump vec4 c_31;
  mediump float B_32;
  mediump float A_33;
  highp float rough_sq_34;
  mediump vec3 Rs_numerator_35;
  highp float roughness_c_36;
  highp float roughness_b_37;
  highp float roughness_a_38;
  mediump float roughness_39;
  highp float geo_denominator_40;
  highp float geo_numerator_41;
  mediump vec3 n_42;
  lowp vec3 tmpvar_43;
  tmpvar_43 = normalize(((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0));
  n_42 = tmpvar_43;
  mediump vec3 tmpvar_44;
  tmpvar_44 = normalize(lightDir_29);
  mediump vec3 tmpvar_45;
  tmpvar_45 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_46;
  tmpvar_46 = clamp (dot (n_42, tmpvar_44), 0.0, 1.0);
  mediump float tmpvar_47;
  tmpvar_47 = clamp (dot (n_42, tmpvar_45), 0.0, 1.0);
  mediump float tmpvar_48;
  tmpvar_48 = clamp (dot (tmpvar_45, normalize((tmpvar_44 + tmpvar_45))), 0.0, 1.0);
  mediump float tmpvar_49;
  tmpvar_49 = (roughnessV * roughnessV);
  mediump float tmpvar_50;
  tmpvar_50 = (2.0 * tmpvar_46);
  geo_numerator_41 = tmpvar_50;
  geo_denominator_40 = tmpvar_48;
  mediump float tmpvar_51;
  tmpvar_51 = (1.0/(((4.0 * tmpvar_49) * pow (tmpvar_46, 4.0))));
  roughness_a_38 = tmpvar_51;
  mediump float tmpvar_52;
  tmpvar_52 = ((tmpvar_46 * tmpvar_46) - 1.0);
  roughness_b_37 = tmpvar_52;
  mediump float tmpvar_53;
  tmpvar_53 = ((tmpvar_49 * tmpvar_46) * tmpvar_46);
  roughness_c_36 = tmpvar_53;
  highp float tmpvar_54;
  tmpvar_54 = ((roughness_a_38 * exp((roughness_b_37 / roughness_c_36))) * tmpvar_4);
  roughness_39 = tmpvar_54;
  mediump float tmpvar_55;
  tmpvar_55 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_45, n_42), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_56;
  tmpvar_56 = vec3(((tmpvar_55 * min (1.0, min (((geo_numerator_41 * tmpvar_47) / geo_denominator_40), ((geo_numerator_41 * tmpvar_46) / geo_denominator_40)))) * roughness_39));
  Rs_numerator_35 = tmpvar_56;
  mediump float tmpvar_57;
  tmpvar_57 = (orenNayar * orenNayar);
  rough_sq_34 = tmpvar_57;
  highp float tmpvar_58;
  tmpvar_58 = (1.0 - (0.5 * (rough_sq_34 / (rough_sq_34 + 0.57))));
  A_33 = tmpvar_58;
  highp float tmpvar_59;
  tmpvar_59 = (0.45 * (rough_sq_34 / (rough_sq_34 + 0.09)));
  B_32 = tmpvar_59;
  mediump float x_60;
  x_60 = dot (tmpvar_45, n_42);
  mediump float x_61;
  x_61 = dot (tmpvar_44, n_42);
  mediump float x_62;
  x_62 = dot (tmpvar_45, n_42);
  mediump float x_63;
  x_63 = dot (tmpvar_44, n_42);
  mediump float tmpvar_64;
  tmpvar_64 = min ((1.5708 - (sign(x_62) * (1.5708 - (sqrt((1.0 - abs(x_62))) * (1.5708 + (abs(x_62) * (-0.214602 + (abs(x_62) * (0.0865667 + (abs(x_62) * -0.0310296)))))))))), (1.5708 - (sign(x_63) * (1.5708 - (sqrt((1.0 - abs(x_63))) * (1.5708 + (abs(x_63) * (-0.214602 + (abs(x_63) * (0.0865667 + (abs(x_63) * -0.0310296)))))))))));
  c_31.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_46))) * vec3((A_33 + ((B_32 * max (0.0, dot ((tmpvar_45 - (n_42 * dot (tmpvar_45, n_42))), (tmpvar_44 - (n_42 * dot (tmpvar_44, n_42)))))) * (sin(max ((1.5708 - (sign(x_60) * (1.5708 - (sqrt((1.0 - abs(x_60))) * (1.5708 + (abs(x_60) * (-0.214602 + (abs(x_60) * (0.0865667 + (abs(x_60) * -0.0310296)))))))))), (1.5708 - (sign(x_61) * (1.5708 - (sqrt((1.0 - abs(x_61))) * (1.5708 + (abs(x_61) * (-0.214602 + (abs(x_61) * (0.0865667 + (abs(x_61) * -0.0310296)))))))))))) * (sin(tmpvar_64) / cos(tmpvar_64))))))) + (((cSpecular.xyz * (Rs_numerator_35 / (max (0.0, (tmpvar_47 * tmpvar_46)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_30 * 2.0));
  c_31.w = 1.0;
  c_1.xyz = c_31.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _LightPositionRange;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
uniform vec4 _LightPositionRange;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)));
  vec4 shadowVals_7;
  shadowVals_7.x = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_7.y = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_7.z = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_7.w = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_8;
  tmpvar_8 = lessThan (shadowVals_7, vec4(((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_9;
  tmpvar_9 = _LightShadowData.xxxx;
  float tmpvar_10;
  if (tmpvar_8.x) {
    tmpvar_10 = tmpvar_9.x;
  } else {
    tmpvar_10 = 1.0;
  };
  float tmpvar_11;
  if (tmpvar_8.y) {
    tmpvar_11 = tmpvar_9.y;
  } else {
    tmpvar_11 = 1.0;
  };
  float tmpvar_12;
  if (tmpvar_8.z) {
    tmpvar_12 = tmpvar_9.z;
  } else {
    tmpvar_12 = 1.0;
  };
  float tmpvar_13;
  if (tmpvar_8.w) {
    tmpvar_13 = tmpvar_9.w;
  } else {
    tmpvar_13 = 1.0;
  };
  vec4 tmpvar_14;
  tmpvar_14.x = tmpvar_10;
  tmpvar_14.y = tmpvar_11;
  tmpvar_14.z = tmpvar_12;
  tmpvar_14.w = tmpvar_13;
  vec4 c_15;
  vec3 tmpvar_16;
  tmpvar_16 = normalize(normal_2);
  vec3 tmpvar_17;
  tmpvar_17 = normalize(tmpvar_5);
  vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD2);
  float tmpvar_19;
  tmpvar_19 = clamp (dot (tmpvar_16, tmpvar_17), 0.0, 1.0);
  float tmpvar_20;
  tmpvar_20 = clamp (dot (tmpvar_16, tmpvar_18), 0.0, 1.0);
  float tmpvar_21;
  tmpvar_21 = clamp (dot (tmpvar_18, normalize((tmpvar_17 + tmpvar_18))), 0.0, 1.0);
  float tmpvar_22;
  tmpvar_22 = (roughnessV * roughnessV);
  float tmpvar_23;
  tmpvar_23 = (2.0 * tmpvar_19);
  float tmpvar_24;
  tmpvar_24 = (orenNayar * orenNayar);
  float x_25;
  x_25 = dot (tmpvar_18, tmpvar_16);
  float x_26;
  x_26 = dot (tmpvar_17, tmpvar_16);
  float x_27;
  x_27 = dot (tmpvar_18, tmpvar_16);
  float x_28;
  x_28 = dot (tmpvar_17, tmpvar_16);
  float tmpvar_29;
  tmpvar_29 = min ((1.5708 - (sign(x_27) * (1.5708 - (sqrt((1.0 - abs(x_27))) * (1.5708 + (abs(x_27) * (-0.214602 + (abs(x_27) * (0.0865667 + (abs(x_27) * -0.0310296)))))))))), (1.5708 - (sign(x_28) * (1.5708 - (sqrt((1.0 - abs(x_28))) * (1.5708 + (abs(x_28) * (-0.214602 + (abs(x_28) * (0.0865667 + (abs(x_28) * -0.0310296)))))))))));
  c_15.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_19))) * vec3(((1.0 - (0.5 * (tmpvar_24 / (tmpvar_24 + 0.57)))) + (((0.45 * (tmpvar_24 / (tmpvar_24 + 0.09))) * max (0.0, dot ((tmpvar_18 - (tmpvar_16 * dot (tmpvar_18, tmpvar_16))), (tmpvar_17 - (tmpvar_16 * dot (tmpvar_17, tmpvar_16)))))) * (sin(max ((1.5708 - (sign(x_25) * (1.5708 - (sqrt((1.0 - abs(x_25))) * (1.5708 + (abs(x_25) * (-0.214602 + (abs(x_25) * (0.0865667 + (abs(x_25) * -0.0310296)))))))))), (1.5708 - (sign(x_26) * (1.5708 - (sqrt((1.0 - abs(x_26))) * (1.5708 + (abs(x_26) * (-0.214602 + (abs(x_26) * (0.0865667 + (abs(x_26) * -0.0310296)))))))))))) * (sin(tmpvar_29) / cos(tmpvar_29))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_18, tmpvar_16), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_23 * tmpvar_20) / tmpvar_21), ((tmpvar_23 * tmpvar_19) / tmpvar_21)))) * (((1.0/(((4.0 * tmpvar_22) * pow (tmpvar_19, 4.0)))) * exp((((tmpvar_19 * tmpvar_19) - 1.0) / ((tmpvar_22 * tmpvar_19) * tmpvar_19)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_20 * tmpvar_19)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * ((tmpvar_6.w * dot (tmpvar_14, vec4(0.25, 0.25, 0.25, 0.25))) * 2.0));
  c_15.w = 1.0;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [_LightPositionRange]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 19 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 20 [_MainTex_ST]
Vector 21 [_BumpMap_ST]
"vs_3_0
; 41 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c22, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c22.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c19.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c19.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
add o5.xyz, r0, -c18
mad o1.zw, v3.xyxy, c21.xyxy, c21
mad o1.xy, v3, c20, c20.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 21 [_BumpMap_ST]
Matrix 16 [_LightMatrix0] 4
Vector 2 [_LightPositionRange]
Vector 20 [_MainTex_ST]
Matrix 7 [_Object2World] 4
Matrix 11 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 3 [glstate_matrix_mvp] 4
Vector 15 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67 (35 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~46 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacgaaaaaacbmaaaaaaaaaaaaaaceaaaaaaaaaaaaabpeaaaaaaaa
aaaaaaaaaaaaabmmaaaaaabmaaaaablppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabliaaaaaaoeaaacaabfaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaba
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaaacaaabaaaaaaaaaapaaaaaaaaa
aaaaabdeaaacaabeaaabaaaaaaaaaapaaaaaaaaaaaaaabeaaaacaaahaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeoaaacaaalaaaeaaaaaaaaabbaaaaaaaaaaaaaabfm
aaacaaaaaaabaaaaaaaaabheaaaaaaaaaaaaabieaaacaaabaaabaaaaaaaaaapa
aaaaaaaaaaaaabjjaaacaaadaaaeaaaaaaaaabbaaaaaaaaaaaaaabkmaaacaaap
aaabaaaaaaaaaapaaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaafpengbgj
gofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgk
gfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaacbmaaebaaai
aaaaaaaaaaaaaaaaaaaaeakfaaaaaaabaaaaaaaeaaaaaaaiaaaaacjaaabaaaaf
aaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaahhefe
aaaaaaceaaaabacfaaaaaacaaaaaaacbaaaabaccaaaabackaaaabaclaaaabacd
paffeaafaaaabcaamcaaaaaaaaaaeaajaaaabcaameaaaaaaaaaagaangabdbcaa
bcaaaaaaaaaagabjgabpbcaabcaaaaaaaaaagacfbaclbcaaccaaaaaaafpieaaa
aaaaagiiaaaaaaaaafpigaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaa
afpicaaaaaaaapmiaaaaaaaamiapaaaaaabliiaakbaeagaamiapaaaaaamgiiaa
klaeafaamiapaaaaaalbdejeklaeaeaamiapiadoaagmaadeklaeadaamiahaaab
aamamgmaalanaaaomiahaaaaaaleblaacbaoabaamiahaaahaamamgleclanabaa
miahaaafaalogfaaobadagaamiapaaaaaablaaaakbaeakaamiahaaabaalelble
clamaaabmiahaaabaamagmleclalaaabmiahaaafabgflomaoladagafmiapaaaa
aamgaaaaklaeajaamiahaaahaalelbleclamabahmiahaaahaamagmleclalabah
miapaaaaaalbaaaaklaeaiaamiahaaafaamablaaobafagaamiahaaaiabmablma
klabapaemiacaaabaaloloaapaaiagaamiaeaaabaaloloaapaafaiaamiaiaaab
aaloloaapaaiadaamiapaaaaaagmffffklaeahaamiahaaaeabmablmaklahapae
miabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaamiaeiaabaaloloaa
paaeadaamiahiaaeaclpmaaakaaaacaamiadiaaaaalalabkilacbebemiamiaaa
aakmkmagilacbfbfmiabaaabaamdmdaapaababaafibhabacaamglegmkbaabdib
miahaaacaalbmaleklaabcacmiahaaaaaagmleleklaabbacmiahiaacaabfgmaa
obababaamiahiaadaablmaleklaabaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [_LightPositionRange]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 464 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 5 registers
[Configuration]
8
0000002441050500
[Microcode]
576
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc401f9c6c00dd108c0186c0830021dfac
00019c6c00800243011842436041dffc00011c6c010002308121826301a1dffc
401f9c6c01d0e00d8086c0c360405fa8401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa800001c6c011d000c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d000c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 38 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhdmbofobgiaefdkemcpfodjidnmkpojgabaaaaaaliahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcaeagaaaaeaaaabaaibabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacacaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaajhccabaaaafaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13));
  highp float tmpvar_15;
  mediump vec4 shadows_16;
  highp vec4 shadowVals_17;
  highp float tmpvar_18;
  tmpvar_18 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_19;
  vec_19 = (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = textureCube (_ShadowMapTexture, vec_19);
  packDist_20 = tmpvar_21;
  shadowVals_17.x = dot (packDist_20, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_22;
  vec_22 = (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureCube (_ShadowMapTexture, vec_22);
  packDist_23 = tmpvar_24;
  shadowVals_17.y = dot (packDist_23, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_25;
  vec_25 = (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (_ShadowMapTexture, vec_25);
  packDist_26 = tmpvar_27;
  shadowVals_17.z = dot (packDist_26, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_28;
  vec_28 = (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_29;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureCube (_ShadowMapTexture, vec_28);
  packDist_29 = tmpvar_30;
  shadowVals_17.w = dot (packDist_29, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_31;
  tmpvar_31 = lessThan (shadowVals_17, vec4(tmpvar_18));
  highp vec4 tmpvar_32;
  tmpvar_32 = _LightShadowData.xxxx;
  highp float tmpvar_33;
  if (tmpvar_31.x) {
    tmpvar_33 = tmpvar_32.x;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_31.y) {
    tmpvar_34 = tmpvar_32.y;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_31.z) {
    tmpvar_35 = tmpvar_32.z;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_31.w) {
    tmpvar_36 = tmpvar_32.w;
  } else {
    tmpvar_36 = 1.0;
  };
  highp vec4 tmpvar_37;
  tmpvar_37.x = tmpvar_33;
  tmpvar_37.y = tmpvar_34;
  tmpvar_37.z = tmpvar_35;
  tmpvar_37.w = tmpvar_36;
  shadows_16 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = dot (shadows_16, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_15 = tmpvar_38;
  mediump vec3 lightDir_39;
  lightDir_39 = lightDir_2;
  mediump float atten_40;
  atten_40 = (tmpvar_14.w * tmpvar_15);
  mediump vec4 c_41;
  mediump float B_42;
  mediump float A_43;
  highp float rough_sq_44;
  mediump vec3 Rs_numerator_45;
  highp float roughness_c_46;
  highp float roughness_b_47;
  highp float roughness_a_48;
  mediump float roughness_49;
  highp float geo_denominator_50;
  highp float geo_numerator_51;
  mediump vec3 n_52;
  lowp vec3 tmpvar_53;
  tmpvar_53 = normalize(tmpvar_7);
  n_52 = tmpvar_53;
  mediump vec3 tmpvar_54;
  tmpvar_54 = normalize(lightDir_39);
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (n_52, tmpvar_54), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_52, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (tmpvar_55, normalize((tmpvar_54 + tmpvar_55))), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = (roughnessV * roughnessV);
  mediump float tmpvar_60;
  tmpvar_60 = (2.0 * tmpvar_56);
  geo_numerator_51 = tmpvar_60;
  geo_denominator_50 = tmpvar_58;
  mediump float tmpvar_61;
  tmpvar_61 = (1.0/(((4.0 * tmpvar_59) * pow (tmpvar_56, 4.0))));
  roughness_a_48 = tmpvar_61;
  mediump float tmpvar_62;
  tmpvar_62 = ((tmpvar_56 * tmpvar_56) - 1.0);
  roughness_b_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_59 * tmpvar_56) * tmpvar_56);
  roughness_c_46 = tmpvar_63;
  highp float tmpvar_64;
  tmpvar_64 = ((roughness_a_48 * exp((roughness_b_47 / roughness_c_46))) * tmpvar_4);
  roughness_49 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_55, n_52), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_66;
  tmpvar_66 = vec3(((tmpvar_65 * min (1.0, min (((geo_numerator_51 * tmpvar_57) / geo_denominator_50), ((geo_numerator_51 * tmpvar_56) / geo_denominator_50)))) * roughness_49));
  Rs_numerator_45 = tmpvar_66;
  mediump float tmpvar_67;
  tmpvar_67 = (orenNayar * orenNayar);
  rough_sq_44 = tmpvar_67;
  highp float tmpvar_68;
  tmpvar_68 = (1.0 - (0.5 * (rough_sq_44 / (rough_sq_44 + 0.57))));
  A_43 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (0.45 * (rough_sq_44 / (rough_sq_44 + 0.09)));
  B_42 = tmpvar_69;
  mediump float x_70;
  x_70 = dot (tmpvar_55, n_52);
  mediump float x_71;
  x_71 = dot (tmpvar_54, n_52);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_52);
  mediump float x_73;
  x_73 = dot (tmpvar_54, n_52);
  mediump float tmpvar_74;
  tmpvar_74 = min ((1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))), (1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))));
  c_41.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_56))) * vec3((A_43 + ((B_42 * max (0.0, dot ((tmpvar_55 - (n_52 * dot (tmpvar_55, n_52))), (tmpvar_54 - (n_52 * dot (tmpvar_54, n_52)))))) * (sin(max ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))))) * (sin(tmpvar_74) / cos(tmpvar_74))))))) + (((cSpecular.xyz * (Rs_numerator_45 / (max (0.0, (tmpvar_57 * tmpvar_56)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_40 * 2.0));
  c_41.w = 1.0;
  c_1.xyz = c_41.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTexture0, vec2(tmpvar_13));
  highp float tmpvar_15;
  mediump vec4 shadows_16;
  highp vec4 shadowVals_17;
  highp float tmpvar_18;
  tmpvar_18 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_19;
  vec_19 = (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = textureCube (_ShadowMapTexture, vec_19);
  packDist_20 = tmpvar_21;
  shadowVals_17.x = dot (packDist_20, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_22;
  vec_22 = (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureCube (_ShadowMapTexture, vec_22);
  packDist_23 = tmpvar_24;
  shadowVals_17.y = dot (packDist_23, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_25;
  vec_25 = (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_26;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (_ShadowMapTexture, vec_25);
  packDist_26 = tmpvar_27;
  shadowVals_17.z = dot (packDist_26, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_28;
  vec_28 = (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_29;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureCube (_ShadowMapTexture, vec_28);
  packDist_29 = tmpvar_30;
  shadowVals_17.w = dot (packDist_29, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_31;
  tmpvar_31 = lessThan (shadowVals_17, vec4(tmpvar_18));
  highp vec4 tmpvar_32;
  tmpvar_32 = _LightShadowData.xxxx;
  highp float tmpvar_33;
  if (tmpvar_31.x) {
    tmpvar_33 = tmpvar_32.x;
  } else {
    tmpvar_33 = 1.0;
  };
  highp float tmpvar_34;
  if (tmpvar_31.y) {
    tmpvar_34 = tmpvar_32.y;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_31.z) {
    tmpvar_35 = tmpvar_32.z;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_31.w) {
    tmpvar_36 = tmpvar_32.w;
  } else {
    tmpvar_36 = 1.0;
  };
  highp vec4 tmpvar_37;
  tmpvar_37.x = tmpvar_33;
  tmpvar_37.y = tmpvar_34;
  tmpvar_37.z = tmpvar_35;
  tmpvar_37.w = tmpvar_36;
  shadows_16 = tmpvar_37;
  mediump float tmpvar_38;
  tmpvar_38 = dot (shadows_16, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_15 = tmpvar_38;
  mediump vec3 lightDir_39;
  lightDir_39 = lightDir_2;
  mediump float atten_40;
  atten_40 = (tmpvar_14.w * tmpvar_15);
  mediump vec4 c_41;
  mediump float B_42;
  mediump float A_43;
  highp float rough_sq_44;
  mediump vec3 Rs_numerator_45;
  highp float roughness_c_46;
  highp float roughness_b_47;
  highp float roughness_a_48;
  mediump float roughness_49;
  highp float geo_denominator_50;
  highp float geo_numerator_51;
  mediump vec3 n_52;
  lowp vec3 tmpvar_53;
  tmpvar_53 = normalize(normal_7);
  n_52 = tmpvar_53;
  mediump vec3 tmpvar_54;
  tmpvar_54 = normalize(lightDir_39);
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_56;
  tmpvar_56 = clamp (dot (n_52, tmpvar_54), 0.0, 1.0);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_52, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (tmpvar_55, normalize((tmpvar_54 + tmpvar_55))), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = (roughnessV * roughnessV);
  mediump float tmpvar_60;
  tmpvar_60 = (2.0 * tmpvar_56);
  geo_numerator_51 = tmpvar_60;
  geo_denominator_50 = tmpvar_58;
  mediump float tmpvar_61;
  tmpvar_61 = (1.0/(((4.0 * tmpvar_59) * pow (tmpvar_56, 4.0))));
  roughness_a_48 = tmpvar_61;
  mediump float tmpvar_62;
  tmpvar_62 = ((tmpvar_56 * tmpvar_56) - 1.0);
  roughness_b_47 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_59 * tmpvar_56) * tmpvar_56);
  roughness_c_46 = tmpvar_63;
  highp float tmpvar_64;
  tmpvar_64 = ((roughness_a_48 * exp((roughness_b_47 / roughness_c_46))) * tmpvar_4);
  roughness_49 = tmpvar_64;
  mediump float tmpvar_65;
  tmpvar_65 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_55, n_52), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_66;
  tmpvar_66 = vec3(((tmpvar_65 * min (1.0, min (((geo_numerator_51 * tmpvar_57) / geo_denominator_50), ((geo_numerator_51 * tmpvar_56) / geo_denominator_50)))) * roughness_49));
  Rs_numerator_45 = tmpvar_66;
  mediump float tmpvar_67;
  tmpvar_67 = (orenNayar * orenNayar);
  rough_sq_44 = tmpvar_67;
  highp float tmpvar_68;
  tmpvar_68 = (1.0 - (0.5 * (rough_sq_44 / (rough_sq_44 + 0.57))));
  A_43 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (0.45 * (rough_sq_44 / (rough_sq_44 + 0.09)));
  B_42 = tmpvar_69;
  mediump float x_70;
  x_70 = dot (tmpvar_55, n_52);
  mediump float x_71;
  x_71 = dot (tmpvar_54, n_52);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_52);
  mediump float x_73;
  x_73 = dot (tmpvar_54, n_52);
  mediump float tmpvar_74;
  tmpvar_74 = min ((1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))), (1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))));
  c_41.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_56))) * vec3((A_43 + ((B_42 * max (0.0, dot ((tmpvar_55 - (n_52 * dot (tmpvar_55, n_52))), (tmpvar_54 - (n_52 * dot (tmpvar_54, n_52)))))) * (sin(max ((1.5708 - (sign(x_70) * (1.5708 - (sqrt((1.0 - abs(x_70))) * (1.5708 + (abs(x_70) * (-0.214602 + (abs(x_70) * (0.0865667 + (abs(x_70) * -0.0310296)))))))))), (1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))))) * (sin(tmpvar_74) / cos(tmpvar_74))))))) + (((cSpecular.xyz * (Rs_numerator_45 / (max (0.0, (tmpvar_57 * tmpvar_56)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_40 * 2.0));
  c_41.w = 1.0;
  c_1.xyz = c_41.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLSL
#ifdef VERTEX
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
attribute vec4 TANGENT;
uniform vec4 _BumpMap_ST;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 unity_Scale;
uniform mat4 _World2Object;
uniform mat4 _Object2World;

uniform vec4 _LightPositionRange;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_2 = TANGENT.xyz;
  tmpvar_3 = (((gl_Normal.yzx * TANGENT.zxy) - (gl_Normal.zxy * TANGENT.yzx)) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_2.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = tmpvar_2.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = tmpvar_2.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  xlv_TEXCOORD2 = normalize((tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz)));
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * gl_Vertex).xyz - _LightPositionRange.xyz);
}


#endif
#ifdef FRAGMENT
#extension GL_ARB_shader_texture_lod : enable
varying vec3 xlv_TEXCOORD4;
varying vec3 xlv_TEXCOORD3;
varying vec3 xlv_TEXCOORD2;
varying vec3 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform float orenNayar;
uniform float frePow;
uniform float freBias;
uniform float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform vec4 cSpecular;
uniform vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform vec4 _LightColor0;
uniform vec4 _LightShadowData;
uniform vec4 _LightPositionRange;
void main ()
{
  vec4 c_1;
  vec3 normal_2;
  normal_2.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_2.z = sqrt(((1.0 - (normal_2.x * normal_2.x)) - (normal_2.y * normal_2.y)));
  vec3 tmpvar_3;
  tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize(xlv_TEXCOORD1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)));
  vec4 tmpvar_7;
  tmpvar_7 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  vec4 shadowVals_8;
  shadowVals_8.x = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_8.y = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_8.z = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  shadowVals_8.w = dot (textureCube (_ShadowMapTexture, (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125))), vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_9;
  tmpvar_9 = lessThan (shadowVals_8, vec4(((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97)));
  vec4 tmpvar_10;
  tmpvar_10 = _LightShadowData.xxxx;
  float tmpvar_11;
  if (tmpvar_9.x) {
    tmpvar_11 = tmpvar_10.x;
  } else {
    tmpvar_11 = 1.0;
  };
  float tmpvar_12;
  if (tmpvar_9.y) {
    tmpvar_12 = tmpvar_10.y;
  } else {
    tmpvar_12 = 1.0;
  };
  float tmpvar_13;
  if (tmpvar_9.z) {
    tmpvar_13 = tmpvar_10.z;
  } else {
    tmpvar_13 = 1.0;
  };
  float tmpvar_14;
  if (tmpvar_9.w) {
    tmpvar_14 = tmpvar_10.w;
  } else {
    tmpvar_14 = 1.0;
  };
  vec4 tmpvar_15;
  tmpvar_15.x = tmpvar_11;
  tmpvar_15.y = tmpvar_12;
  tmpvar_15.z = tmpvar_13;
  tmpvar_15.w = tmpvar_14;
  vec4 c_16;
  vec3 tmpvar_17;
  tmpvar_17 = normalize(normal_2);
  vec3 tmpvar_18;
  tmpvar_18 = normalize(tmpvar_5);
  vec3 tmpvar_19;
  tmpvar_19 = normalize(xlv_TEXCOORD2);
  float tmpvar_20;
  tmpvar_20 = clamp (dot (tmpvar_17, tmpvar_18), 0.0, 1.0);
  float tmpvar_21;
  tmpvar_21 = clamp (dot (tmpvar_17, tmpvar_19), 0.0, 1.0);
  float tmpvar_22;
  tmpvar_22 = clamp (dot (tmpvar_19, normalize((tmpvar_18 + tmpvar_19))), 0.0, 1.0);
  float tmpvar_23;
  tmpvar_23 = (roughnessV * roughnessV);
  float tmpvar_24;
  tmpvar_24 = (2.0 * tmpvar_20);
  float tmpvar_25;
  tmpvar_25 = (orenNayar * orenNayar);
  float x_26;
  x_26 = dot (tmpvar_19, tmpvar_17);
  float x_27;
  x_27 = dot (tmpvar_18, tmpvar_17);
  float x_28;
  x_28 = dot (tmpvar_19, tmpvar_17);
  float x_29;
  x_29 = dot (tmpvar_18, tmpvar_17);
  float tmpvar_30;
  tmpvar_30 = min ((1.5708 - (sign(x_28) * (1.5708 - (sqrt((1.0 - abs(x_28))) * (1.5708 + (abs(x_28) * (-0.214602 + (abs(x_28) * (0.0865667 + (abs(x_28) * -0.0310296)))))))))), (1.5708 - (sign(x_29) * (1.5708 - (sqrt((1.0 - abs(x_29))) * (1.5708 + (abs(x_29) * (-0.214602 + (abs(x_29) * (0.0865667 + (abs(x_29) * -0.0310296)))))))))));
  c_16.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_20))) * vec3(((1.0 - (0.5 * (tmpvar_25 / (tmpvar_25 + 0.57)))) + (((0.45 * (tmpvar_25 / (tmpvar_25 + 0.09))) * max (0.0, dot ((tmpvar_19 - (tmpvar_17 * dot (tmpvar_19, tmpvar_17))), (tmpvar_18 - (tmpvar_17 * dot (tmpvar_18, tmpvar_17)))))) * (sin(max ((1.5708 - (sign(x_26) * (1.5708 - (sqrt((1.0 - abs(x_26))) * (1.5708 + (abs(x_26) * (-0.214602 + (abs(x_26) * (0.0865667 + (abs(x_26) * -0.0310296)))))))))), (1.5708 - (sign(x_27) * (1.5708 - (sqrt((1.0 - abs(x_27))) * (1.5708 + (abs(x_27) * (-0.214602 + (abs(x_27) * (0.0865667 + (abs(x_27) * -0.0310296)))))))))))) * (sin(tmpvar_30) / cos(tmpvar_30))))))) + (((cSpecular.xyz * (vec3(((clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_19, tmpvar_17), 0.0)), frePow))), 0.0), 0.0, 1.0) * min (1.0, min (((tmpvar_24 * tmpvar_21) / tmpvar_22), ((tmpvar_24 * tmpvar_20) / tmpvar_22)))) * (((1.0/(((4.0 * tmpvar_23) * pow (tmpvar_20, 4.0)))) * exp((((tmpvar_20 * tmpvar_20) - 1.0) / ((tmpvar_23 * tmpvar_20) * tmpvar_20)))) * tmpvar_4.w))) / (max (0.0, (tmpvar_21 * tmpvar_20)) + 0.09))) * tmpvar_4.x) * _LightColor0.xyz)) * (((tmpvar_6.w * tmpvar_7.w) * dot (tmpvar_15, vec4(0.25, 0.25, 0.25, 0.25))) * 2.0));
  c_16.w = 1.0;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}


#endif
"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [_LightPositionRange]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 19 [unity_Scale]
Matrix 12 [_LightMatrix0]
Vector 20 [_MainTex_ST]
Vector 21 [_BumpMap_ST]
"vs_3_0
; 41 ALU
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c22, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mov r0.w, c22.x
mov r0.xyz, c16
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c19.w, -v0
mul r3.xyz, r1, v1.w
dp3 r2.y, r3, r0
dp3 r2.x, v1, r0
dp3 r2.z, v2, r0
dp3 r1.x, r2, r2
rsq r2.w, r1.x
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c19.w, -v0
dp3 o2.y, r0, r3
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r0.w, v0, c7
mul o3.xyz, r2.w, r2
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
add o5.xyz, r0, -c18
mad o1.zw, v3.xyxy, c21.xyxy, c21
mad o1.xy, v3, c20, c20.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 21 [_BumpMap_ST]
Matrix 16 [_LightMatrix0] 4
Vector 2 [_LightPositionRange]
Vector 20 [_MainTex_ST]
Matrix 7 [_Object2World] 4
Matrix 11 [_World2Object] 4
Vector 0 [_WorldSpaceCameraPos]
Vector 1 [_WorldSpaceLightPos0]
Matrix 3 [glstate_matrix_mvp] 4
Vector 15 [unity_Scale]
// Shader Timing Estimate, in Cycles/64 vertex vector:
// ALU: 46.67 (35 instructions), vertex: 32, texture: 0,
//   sequencer: 20,  9 GPRs, 21 threads,
// Performance (if enough threads): ~46 cycles per vector
// * Vertex cycle estimates are assuming 3 vfetch_minis for every vfetch_full,
//     with <= 32 bytes per vfetch_full group.

"vs_360
backbbabaaaaacgaaaaaacbmaaaaaaaaaaaaaaceaaaaaaaaaaaaabpeaaaaaaaa
aaaaaaaaaaaaabmmaaaaaabmaaaaablppppoadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabliaaaaaaoeaaacaabfaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaba
aaaeaaaaaaaaabbaaaaaaaaaaaaaabcaaaacaaacaaabaaaaaaaaaapaaaaaaaaa
aaaaabdeaaacaabeaaabaaaaaaaaaapaaaaaaaaaaaaaabeaaaacaaahaaaeaaaa
aaaaabbaaaaaaaaaaaaaabeoaaacaaalaaaeaaaaaaaaabbaaaaaaaaaaaaaabfm
aaacaaaaaaabaaaaaaaaabheaaaaaaaaaaaaabieaaacaaabaaabaaaaaaaaaapa
aaaaaaaaaaaaabjjaaacaaadaaaeaaaaaaaaabbaaaaaaaaaaaaaabkmaaacaaap
aaabaaaaaaaaaapaaaaaaaaafpechfgnhaengbhafpfdfeaaaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheengbhehcgjhidaaaklklaaadaaadaaaeaaae
aaabaaaaaaaaaaaafpemgjghgihefagphdgjhegjgpgofcgbgoghgfaafpengbgj
gofegfhifpfdfeaafpepgcgkgfgdhedcfhgphcgmgeaafpfhgphcgmgedcepgcgk
gfgdheaafpfhgphcgmgefdhagbgdgfedgbgngfhcgbfagphdaaklklklaaabaaad
aaabaaadaaabaaaaaaaaaaaafpfhgphcgmgefdhagbgdgfemgjghgihefagphdda
aaghgmhdhegbhegffpgngbhehcgjhifpgnhghaaahfgogjhehjfpfdgdgbgmgfaa
hghdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaacbmaaebaaai
aaaaaaaaaaaaaaaaaaaaeakfaaaaaaabaaaaaaaeaaaaaaaiaaaaacjaaabaaaaf
aaaagaagaaaadaahaacafaaiaaaapafaaaachbfbaaafhcfcaaaghdfdaaahhefe
aaaaaaceaaaabacfaaaaaacaaaaaaacbaaaabaccaaaabackaaaabaclaaaabacd
paffeaafaaaabcaamcaaaaaaaaaaeaajaaaabcaameaaaaaaaaaagaangabdbcaa
bcaaaaaaaaaagabjgabpbcaabcaaaaaaaaaagacfbaclbcaaccaaaaaaafpieaaa
aaaaagiiaaaaaaaaafpigaaaaaaaagiiaaaaaaaaafpidaaaaaaaaoiiaaaaaaaa
afpicaaaaaaaapmiaaaaaaaamiapaaaaaabliiaakbaeagaamiapaaaaaamgiiaa
klaeafaamiapaaaaaalbdejeklaeaeaamiapiadoaagmaadeklaeadaamiahaaab
aamamgmaalanaaaomiahaaaaaaleblaacbaoabaamiahaaahaamamgleclanabaa
miahaaafaalogfaaobadagaamiapaaaaaablaaaakbaeakaamiahaaabaalelble
clamaaabmiahaaabaamagmleclalaaabmiahaaafabgflomaoladagafmiapaaaa
aamgaaaaklaeajaamiahaaahaalelbleclamabahmiahaaahaamagmleclalabah
miapaaaaaalbaaaaklaeaiaamiahaaafaamablaaobafagaamiahaaaiabmablma
klabapaemiacaaabaaloloaapaaiagaamiaeaaabaaloloaapaafaiaamiaiaaab
aaloloaapaaiadaamiapaaaaaagmffffklaeahaamiahaaaeabmablmaklahapae
miabiaabaaloloaapaaeagaamiaciaabaaloloaapaafaeaamiaeiaabaaloloaa
paaeadaamiahiaaeaclpmaaakaaaacaamiadiaaaaalalabkilacbebemiamiaaa
aakmkmagilacbfbfmiabaaabaamdmdaapaababaafibhabacaamglegmkbaabdib
miahaaacaalbmaleklaabcacmiahaaaaaagmleleklaabbacmiahiaacaabfgmaa
obababaamiahiaadaablmaleklaabaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Matrix 256 [glstate_matrix_mvp]
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Vector 467 [_WorldSpaceCameraPos]
Vector 466 [_WorldSpaceLightPos0]
Vector 465 [_LightPositionRange]
Matrix 260 [_Object2World]
Matrix 264 [_World2Object]
Vector 464 [unity_Scale]
Matrix 268 [_LightMatrix0]
Vector 463 [_MainTex_ST]
Vector 462 [_BumpMap_ST]
"sce_vp_rsx // 36 instructions using 5 registers
[Configuration]
8
0000002441050500
[Microcode]
576
00009c6c005d200d8186c0836041fffc00011c6c00400e0c0106c0836041dffc
00019c6c005d300c0186c0836041dffc401f9c6c011ce800810040d560607f9c
401f9c6c011cf808010400d740619f9c401f9c6c01d0300d8106c0c360403f80
401f9c6c01d0200d8106c0c360405f80401f9c6c01d0100d8106c0c360409f80
401f9c6c01d0000d8106c0c360411f8000001c6c01d0700d8106c0c360403ffc
00001c6c01d0600d8106c0c360405ffc00001c6c01d0500d8106c0c360409ffc
00001c6c01d0400d8106c0c360411ffc00021c6c01d0a00d8286c0c360405ffc
00021c6c01d0900d8286c0c360409ffc00021c6c01d0800d8286c0c360411ffc
00009c6c0190a00c0686c0c360405ffc00009c6c0190900c0686c0c360409ffc
00009c6c0190800c0686c0c360411ffc401f9c6c00dd108c0186c0830021dfac
00019c6c00800243011842436041dffc00011c6c010002308121826301a1dffc
401f9c6c01d0e00d8086c0c360405fa8401f9c6c01d0d00d8086c0c360409fa8
401f9c6c01d0c00d8086c0c360411fa800001c6c011d000c02bfc0e30041dffc
00009c6c00800e0c04bfc0836041dffc00011c6c0140020c0106004360405ffc
00011c6c01400e0c0106004360411ffc00011c6c0140000c0286004360409ffc
00001c6c011d000c08bfc0e30041dffc00001c6c0140000c0486024360403ffc
401f9c6c0140020c0106004360405fa0401f9c6c21400e0c0086009fe02300a0
401f9c6c0140000c0086014360409fa0401f9c6c0080007f828602436041dfa5
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Bind "vertex" Vertex
Bind "tangent" TexCoord2
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "color" Color
ConstBuffer "$Globals" 224 // 224 used size, 15 vars
Matrix 48 [_LightMatrix0] 4
Vector 192 [_MainTex_ST] 4
Vector 208 [_BumpMap_ST] 4
ConstBuffer "UnityPerCamera" 128 // 76 used size, 8 vars
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 0 [_WorldSpaceLightPos0] 4
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityPerDraw" 336 // 336 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
Matrix 256 [_World2Object] 4
Vector 320 [unity_Scale] 4
BindCB "$Globals" 0
BindCB "UnityPerCamera" 1
BindCB "UnityLighting" 2
BindCB "UnityPerDraw" 3
// 38 instructions, 2 temp regs, 0 temp arrays:
// ALU 18 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedhdmbofobgiaefdkemcpfodjidnmkpojgabaaaaaaliahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcaeagaaaaeaaaabaaibabaaaafjaaaaae
egiocaaaaaaaaaaaaoaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaacaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadhccabaaaafaaaaaagiaaaaacacaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaamaaaaaaogikcaaaaaaaaaaa
amaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
anaaaaaakgiocaaaaaaaaaaaanaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
acaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhccabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaa
abaaaaaafgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaajhccabaaaafaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaaabaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTextureB0, vec2(tmpvar_13));
  lowp vec4 tmpvar_15;
  tmpvar_15 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  highp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec4 shadowVals_18;
  highp float tmpvar_19;
  tmpvar_19 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_20;
  vec_20 = (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_ShadowMapTexture, vec_20);
  packDist_21 = tmpvar_22;
  shadowVals_18.x = dot (packDist_21, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_23;
  vec_23 = (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_ShadowMapTexture, vec_23);
  packDist_24 = tmpvar_25;
  shadowVals_18.y = dot (packDist_24, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_26;
  vec_26 = (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_ShadowMapTexture, vec_26);
  packDist_27 = tmpvar_28;
  shadowVals_18.z = dot (packDist_27, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_29;
  vec_29 = (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_30;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (_ShadowMapTexture, vec_29);
  packDist_30 = tmpvar_31;
  shadowVals_18.w = dot (packDist_30, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_32;
  tmpvar_32 = lessThan (shadowVals_18, vec4(tmpvar_19));
  highp vec4 tmpvar_33;
  tmpvar_33 = _LightShadowData.xxxx;
  highp float tmpvar_34;
  if (tmpvar_32.x) {
    tmpvar_34 = tmpvar_33.x;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_32.y) {
    tmpvar_35 = tmpvar_33.y;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_32.z) {
    tmpvar_36 = tmpvar_33.z;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_32.w) {
    tmpvar_37 = tmpvar_33.w;
  } else {
    tmpvar_37 = 1.0;
  };
  highp vec4 tmpvar_38;
  tmpvar_38.x = tmpvar_34;
  tmpvar_38.y = tmpvar_35;
  tmpvar_38.z = tmpvar_36;
  tmpvar_38.w = tmpvar_37;
  shadows_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_39;
  mediump vec3 lightDir_40;
  lightDir_40 = lightDir_2;
  mediump float atten_41;
  atten_41 = ((tmpvar_14.w * tmpvar_15.w) * tmpvar_16);
  mediump vec4 c_42;
  mediump float B_43;
  mediump float A_44;
  highp float rough_sq_45;
  mediump vec3 Rs_numerator_46;
  highp float roughness_c_47;
  highp float roughness_b_48;
  highp float roughness_a_49;
  mediump float roughness_50;
  highp float geo_denominator_51;
  highp float geo_numerator_52;
  mediump vec3 n_53;
  lowp vec3 tmpvar_54;
  tmpvar_54 = normalize(tmpvar_7);
  n_53 = tmpvar_54;
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(lightDir_40);
  mediump vec3 tmpvar_56;
  tmpvar_56 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_53, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (n_53, tmpvar_56), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = clamp (dot (tmpvar_56, normalize((tmpvar_55 + tmpvar_56))), 0.0, 1.0);
  mediump float tmpvar_60;
  tmpvar_60 = (roughnessV * roughnessV);
  mediump float tmpvar_61;
  tmpvar_61 = (2.0 * tmpvar_57);
  geo_numerator_52 = tmpvar_61;
  geo_denominator_51 = tmpvar_59;
  mediump float tmpvar_62;
  tmpvar_62 = (1.0/(((4.0 * tmpvar_60) * pow (tmpvar_57, 4.0))));
  roughness_a_49 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_57 * tmpvar_57) - 1.0);
  roughness_b_48 = tmpvar_63;
  mediump float tmpvar_64;
  tmpvar_64 = ((tmpvar_60 * tmpvar_57) * tmpvar_57);
  roughness_c_47 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = ((roughness_a_49 * exp((roughness_b_48 / roughness_c_47))) * tmpvar_4);
  roughness_50 = tmpvar_65;
  mediump float tmpvar_66;
  tmpvar_66 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_56, n_53), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_67;
  tmpvar_67 = vec3(((tmpvar_66 * min (1.0, min (((geo_numerator_52 * tmpvar_58) / geo_denominator_51), ((geo_numerator_52 * tmpvar_57) / geo_denominator_51)))) * roughness_50));
  Rs_numerator_46 = tmpvar_67;
  mediump float tmpvar_68;
  tmpvar_68 = (orenNayar * orenNayar);
  rough_sq_45 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (1.0 - (0.5 * (rough_sq_45 / (rough_sq_45 + 0.57))));
  A_44 = tmpvar_69;
  highp float tmpvar_70;
  tmpvar_70 = (0.45 * (rough_sq_45 / (rough_sq_45 + 0.09)));
  B_43 = tmpvar_70;
  mediump float x_71;
  x_71 = dot (tmpvar_56, n_53);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_53);
  mediump float x_73;
  x_73 = dot (tmpvar_56, n_53);
  mediump float x_74;
  x_74 = dot (tmpvar_55, n_53);
  mediump float tmpvar_75;
  tmpvar_75 = min ((1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))), (1.5708 - (sign(x_74) * (1.5708 - (sqrt((1.0 - abs(x_74))) * (1.5708 + (abs(x_74) * (-0.214602 + (abs(x_74) * (0.0865667 + (abs(x_74) * -0.0310296)))))))))));
  c_42.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_57))) * vec3((A_44 + ((B_43 * max (0.0, dot ((tmpvar_56 - (n_53 * dot (tmpvar_56, n_53))), (tmpvar_55 - (n_53 * dot (tmpvar_55, n_53)))))) * (sin(max ((1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))), (1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))))) * (sin(tmpvar_75) / cos(tmpvar_75))))))) + (((cSpecular.xyz * (Rs_numerator_46 / (max (0.0, (tmpvar_58 * tmpvar_57)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_41 * 2.0));
  c_42.w = 1.0;
  c_1.xyz = c_42.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES
#define SHADER_API_GLES 1
#define tex2D texture2D


#ifdef VERTEX
#define gl_ModelViewProjectionMatrix glstate_matrix_mvp
uniform mat4 glstate_matrix_mvp;

varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform highp vec4 _BumpMap_ST;
uniform highp vec4 _MainTex_ST;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 unity_Scale;
uniform highp mat4 _World2Object;
uniform highp mat4 _Object2World;

uniform highp vec4 _LightPositionRange;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec3 _WorldSpaceCameraPos;
attribute vec4 _glesTANGENT;
attribute vec4 _glesMultiTexCoord0;
attribute vec3 _glesNormal;
attribute vec4 _glesVertex;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  highp vec2 tmpvar_6;
  tmpvar_6 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_6;
  highp vec2 tmpvar_7;
  tmpvar_7 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  tmpvar_3.zw = tmpvar_7;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz)));
  tmpvar_5 = tmpvar_13;
  gl_Position = (gl_ModelViewProjectionMatrix * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  xlv_TEXCOORD4 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
}



#endif
#ifdef FRAGMENT

#extension GL_ARB_shader_texture_lod : enable
varying highp vec3 xlv_TEXCOORD4;
varying highp vec3 xlv_TEXCOORD3;
varying mediump vec3 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD0;
uniform mediump float orenNayar;
uniform mediump float frePow;
uniform mediump float freBias;
uniform mediump float roughnessV;
uniform sampler2D _SpecularMap;
uniform sampler2D _BumpMap;
uniform sampler2D _MainTex;
uniform lowp vec4 cSpecular;
uniform lowp vec4 _Color;
uniform sampler2D _LightTextureB0;
uniform samplerCube _LightTexture0;
uniform samplerCube _ShadowMapTexture;
uniform lowp vec4 _LightColor0;
uniform highp vec4 _LightShadowData;
uniform highp vec4 _LightPositionRange;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp float tmpvar_4;
  mediump vec4 SpecularTex_5;
  mediump vec4 mainTex_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).wy * 2.0) - 1.0);
  normal_7.z = sqrt(((1.0 - (normal_7.x * normal_7.x)) - (normal_7.y * normal_7.y)));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_6 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (mainTex_6 * _Color).xyz;
  tmpvar_3 = tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_SpecularMap, xlv_TEXCOORD0.xy);
  SpecularTex_5 = tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = SpecularTex_5.w;
  tmpvar_4 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_LightTextureB0, vec2(tmpvar_13));
  lowp vec4 tmpvar_15;
  tmpvar_15 = textureCube (_LightTexture0, xlv_TEXCOORD3);
  highp float tmpvar_16;
  mediump vec4 shadows_17;
  highp vec4 shadowVals_18;
  highp float tmpvar_19;
  tmpvar_19 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * _LightPositionRange.w) * 0.97);
  highp vec3 vec_20;
  vec_20 = (xlv_TEXCOORD4 + vec3(0.0078125, 0.0078125, 0.0078125));
  highp vec4 packDist_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = textureCube (_ShadowMapTexture, vec_20);
  packDist_21 = tmpvar_22;
  shadowVals_18.x = dot (packDist_21, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_23;
  vec_23 = (xlv_TEXCOORD4 + vec3(-0.0078125, -0.0078125, 0.0078125));
  highp vec4 packDist_24;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (_ShadowMapTexture, vec_23);
  packDist_24 = tmpvar_25;
  shadowVals_18.y = dot (packDist_24, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_26;
  vec_26 = (xlv_TEXCOORD4 + vec3(-0.0078125, 0.0078125, -0.0078125));
  highp vec4 packDist_27;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (_ShadowMapTexture, vec_26);
  packDist_27 = tmpvar_28;
  shadowVals_18.z = dot (packDist_27, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  highp vec3 vec_29;
  vec_29 = (xlv_TEXCOORD4 + vec3(0.0078125, -0.0078125, -0.0078125));
  highp vec4 packDist_30;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (_ShadowMapTexture, vec_29);
  packDist_30 = tmpvar_31;
  shadowVals_18.w = dot (packDist_30, vec4(1.0, 0.00392157, 1.53787e-05, 6.22737e-09));
  bvec4 tmpvar_32;
  tmpvar_32 = lessThan (shadowVals_18, vec4(tmpvar_19));
  highp vec4 tmpvar_33;
  tmpvar_33 = _LightShadowData.xxxx;
  highp float tmpvar_34;
  if (tmpvar_32.x) {
    tmpvar_34 = tmpvar_33.x;
  } else {
    tmpvar_34 = 1.0;
  };
  highp float tmpvar_35;
  if (tmpvar_32.y) {
    tmpvar_35 = tmpvar_33.y;
  } else {
    tmpvar_35 = 1.0;
  };
  highp float tmpvar_36;
  if (tmpvar_32.z) {
    tmpvar_36 = tmpvar_33.z;
  } else {
    tmpvar_36 = 1.0;
  };
  highp float tmpvar_37;
  if (tmpvar_32.w) {
    tmpvar_37 = tmpvar_33.w;
  } else {
    tmpvar_37 = 1.0;
  };
  highp vec4 tmpvar_38;
  tmpvar_38.x = tmpvar_34;
  tmpvar_38.y = tmpvar_35;
  tmpvar_38.z = tmpvar_36;
  tmpvar_38.w = tmpvar_37;
  shadows_17 = tmpvar_38;
  mediump float tmpvar_39;
  tmpvar_39 = dot (shadows_17, vec4(0.25, 0.25, 0.25, 0.25));
  tmpvar_16 = tmpvar_39;
  mediump vec3 lightDir_40;
  lightDir_40 = lightDir_2;
  mediump float atten_41;
  atten_41 = ((tmpvar_14.w * tmpvar_15.w) * tmpvar_16);
  mediump vec4 c_42;
  mediump float B_43;
  mediump float A_44;
  highp float rough_sq_45;
  mediump vec3 Rs_numerator_46;
  highp float roughness_c_47;
  highp float roughness_b_48;
  highp float roughness_a_49;
  mediump float roughness_50;
  highp float geo_denominator_51;
  highp float geo_numerator_52;
  mediump vec3 n_53;
  lowp vec3 tmpvar_54;
  tmpvar_54 = normalize(normal_7);
  n_53 = tmpvar_54;
  mediump vec3 tmpvar_55;
  tmpvar_55 = normalize(lightDir_40);
  mediump vec3 tmpvar_56;
  tmpvar_56 = normalize(xlv_TEXCOORD2);
  mediump float tmpvar_57;
  tmpvar_57 = clamp (dot (n_53, tmpvar_55), 0.0, 1.0);
  mediump float tmpvar_58;
  tmpvar_58 = clamp (dot (n_53, tmpvar_56), 0.0, 1.0);
  mediump float tmpvar_59;
  tmpvar_59 = clamp (dot (tmpvar_56, normalize((tmpvar_55 + tmpvar_56))), 0.0, 1.0);
  mediump float tmpvar_60;
  tmpvar_60 = (roughnessV * roughnessV);
  mediump float tmpvar_61;
  tmpvar_61 = (2.0 * tmpvar_57);
  geo_numerator_52 = tmpvar_61;
  geo_denominator_51 = tmpvar_59;
  mediump float tmpvar_62;
  tmpvar_62 = (1.0/(((4.0 * tmpvar_60) * pow (tmpvar_57, 4.0))));
  roughness_a_49 = tmpvar_62;
  mediump float tmpvar_63;
  tmpvar_63 = ((tmpvar_57 * tmpvar_57) - 1.0);
  roughness_b_48 = tmpvar_63;
  mediump float tmpvar_64;
  tmpvar_64 = ((tmpvar_60 * tmpvar_57) * tmpvar_57);
  roughness_c_47 = tmpvar_64;
  highp float tmpvar_65;
  tmpvar_65 = ((roughness_a_49 * exp((roughness_b_48 / roughness_c_47))) * tmpvar_4);
  roughness_50 = tmpvar_65;
  mediump float tmpvar_66;
  tmpvar_66 = clamp (max ((freBias + ((1.0 - freBias) * pow ((1.0 - max (dot (tmpvar_56, n_53), 0.0)), frePow))), 0.0), 0.0, 1.0);
  highp vec3 tmpvar_67;
  tmpvar_67 = vec3(((tmpvar_66 * min (1.0, min (((geo_numerator_52 * tmpvar_58) / geo_denominator_51), ((geo_numerator_52 * tmpvar_57) / geo_denominator_51)))) * roughness_50));
  Rs_numerator_46 = tmpvar_67;
  mediump float tmpvar_68;
  tmpvar_68 = (orenNayar * orenNayar);
  rough_sq_45 = tmpvar_68;
  highp float tmpvar_69;
  tmpvar_69 = (1.0 - (0.5 * (rough_sq_45 / (rough_sq_45 + 0.57))));
  A_44 = tmpvar_69;
  highp float tmpvar_70;
  tmpvar_70 = (0.45 * (rough_sq_45 / (rough_sq_45 + 0.09)));
  B_43 = tmpvar_70;
  mediump float x_71;
  x_71 = dot (tmpvar_56, n_53);
  mediump float x_72;
  x_72 = dot (tmpvar_55, n_53);
  mediump float x_73;
  x_73 = dot (tmpvar_56, n_53);
  mediump float x_74;
  x_74 = dot (tmpvar_55, n_53);
  mediump float tmpvar_75;
  tmpvar_75 = min ((1.5708 - (sign(x_73) * (1.5708 - (sqrt((1.0 - abs(x_73))) * (1.5708 + (abs(x_73) * (-0.214602 + (abs(x_73) * (0.0865667 + (abs(x_73) * -0.0310296)))))))))), (1.5708 - (sign(x_74) * (1.5708 - (sqrt((1.0 - abs(x_74))) * (1.5708 + (abs(x_74) * (-0.214602 + (abs(x_74) * (0.0865667 + (abs(x_74) * -0.0310296)))))))))));
  c_42.xyz = (((((tmpvar_3 * _LightColor0.xyz) * vec3(max (0.0, tmpvar_57))) * vec3((A_44 + ((B_43 * max (0.0, dot ((tmpvar_56 - (n_53 * dot (tmpvar_56, n_53))), (tmpvar_55 - (n_53 * dot (tmpvar_55, n_53)))))) * (sin(max ((1.5708 - (sign(x_71) * (1.5708 - (sqrt((1.0 - abs(x_71))) * (1.5708 + (abs(x_71) * (-0.214602 + (abs(x_71) * (0.0865667 + (abs(x_71) * -0.0310296)))))))))), (1.5708 - (sign(x_72) * (1.5708 - (sqrt((1.0 - abs(x_72))) * (1.5708 + (abs(x_72) * (-0.214602 + (abs(x_72) * (0.0865667 + (abs(x_72) * -0.0310296)))))))))))) * (sin(tmpvar_75) / cos(tmpvar_75))))))) + (((cSpecular.xyz * (Rs_numerator_46 / (max (0.0, (tmpvar_58 * tmpvar_57)) + 0.09))) * SpecularTex_5.x) * _LightColor0.xyz)) * (atten_41 * 2.0));
  c_42.w = 1.0;
  c_1.xyz = c_42.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}

}
Program "fp" {
// Fragment combos: 15
//   d3d9 - ALU: 146 to 169, TEX: 3 to 9
//   d3d11 - ALU: 73 to 91, TEX: 3 to 9, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
"ps_3_0
; 151 ALU, 4 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c9.x, c9
mad_pp r0.y, r0, r0.x, c8.w
add_pp r0.z, -r0.x, c8
mad_pp r0.y, r0, r0.x, c9.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c8.z
mad_pp r3.x, r0.w, c9, c9.y
mad_pp r3.x, r3, r0.w, c8.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c8.y, c8.z
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c7.x, r0.y
mad_pp r0.z, r0.x, c9.w, r0
mad_pp r0.w, r3.x, r0, c9.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c7.x, r3.x
mad_pp r0.x, r0.w, c9.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c10.x, c10
frc_pp r0.y, r0
mad_pp r3.y, r0, c10.z, c10.w
mad_pp r3.x, r0, c10, c10.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c10, c10.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c6.x, c6.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c8.x
rcp r0.x, r2.w
max r0.y, r0, c7.z
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c11.x
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c7.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c7.z
min r2.z, r0.y, c8
add_pp r0.y, -r0.x, c8.z
pow_pp r1, r0.y, c5.x
mul_pp r0.x, c3, c3
mul_pp r1.y, r2.x, r0.x
mov r0.y, c4.x
mov_pp r0.z, r1.x
add r0.y, c8.z, -r0
mad_sat r0.y, r0, r0.z, c4.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c11.y
max r0.y, r0, c7.z
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c7.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c11.z, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c11.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
mul_pp r0.z, r2.x, r2.y
add r0.x, r0.w, c7.w
max_pp r0.z, r0, c7
add r0.z, r0, c8.x
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c2
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c10.y, r2.w
add r0.w, r0.x, c8.z
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, c0
max r1.w, r2.x, c7.z
mul_pp r2.xyz, r0, r1.w
mul_pp r1.xyz, r1, c0
dp3 r0.x, v3, v3
mad_pp r1.xyz, r2, r0.w, r1
texld r0.x, r0.x, s4
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [_BumpMap] 2D
SetTexture 3 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 89.33 (67 instructions), vertex: 0, texture: 16,
//   sequencer: 26, interpolator: 16;    12 GPRs, 15 threads,
// Performance (if enough threads): ~89 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacdaaaaaaedeaaaaaaaaaaaaaaceaaaaabniaaaaacaaaaaaaaaa
aaaaaaaaaaaaablaaaaaaabmaaaaabkdppppadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabjmaaaaaapiaaadaaacaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaaab
aaabaaaaaaaaabbmaaaaaaaaaaaaabcmaaacaaaaaaabaaaaaaaaabbmaaaaaaaa
aaaaabdjaaadaaaaaaabaaaaaaaaabaeaaaaaaaaaaaaabeiaaadaaabaaabaaaa
aaaaabaeaaaaaaaaaaaaabfbaaadaaadaaabaaaaaaaaabaeaaaaaaaaaaaaabfo
aaacaaacaaabaaaaaaaaabbmaaaaaaaaaaaaabgiaaacaaaeaaabaaaaaaaaabha
aaaaaaaaaaaaabiaaaacaaafaaabaaaaaaaaabhaaaaaaaaaaaaaabihaaacaaag
aaabaaaaaaaaabhaaaaaaaaaaaaaabjbaaacaaadaaabaaaaaaaaabhaaaaaaaaa
fpechfgnhaengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcda
aafpemgjghgihefegfhihehfhcgfdaaafpengbgjgofegfhiaafpfdhagfgdhfgm
gbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaaaaaaaadaaabaaab
aaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphfghgigogf
hdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaad
aaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaiaaaaaadlebaaaalaaaaaaaaaeaaaaaaaaaaaadeieaaapaaapaaaaaaab
aaaapafaaaaahbfbaaaahcfcaaaahdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
dnjibgchlmjjgodaaaaaaaaaaaaaaaaamaejapnldpmjankeaaaaaaaaeamjapnl
maaaaaaadplikkdleaejapnldpiaaaaadoccpjiddpaaaaaadooggggglofjdeie
lpiaaaaadpbbolifdnlifbomeaiaaaaaabfefaahaaaabcaameaaaaaaaaaagaam
gabcbcaabcaaaaaaaaaagabigabobcaabcaaaaaaaaaagacegackbcaabcaaaaaa
aaaagadagadgbcaabcaaaaaaaaaagadmgaecbcaabcaaaaaaaaaagaeiaaaaccaa
aaaaaaaamiaiaaabaaloloaapaadadaabadidaabbpbpppniaaaaeaaababieaab
bpbppoiiaaaaeaaapmaihacbbpbppodpaaaaeaaadicidaabbpbppghpaaaaeaaa
miaiaaalaegmblaacaaepnaamiaeaaaaaaloloaapaacacaamiabaaaaaaloloaa
paababaaaiecajaaaagmblgmabadppagfibdaaajaamhmhgmoaadadiakiihajag
aagmmaebmbaaabadmiapaaafaapekeaakaajppaamiacaaaaaegogoblnbafafpn
miadaaahaamemeaaobafafaafiijabaaaamemfmgoaahahiakabeabaaaagmlblb
oaaaaaiafiecaaaaaalolomgpaagagiaficeaaalaamggmlbobaaabiamiahaaab
aamamaaakbaeabaamiahaaaeaablmaaaobabacaamiahaaagaamalbaaobagaaaa
miahaaacaamamaaaoaagaeaamiacaaaaaaloloaapaacacaaficdaaalaamemglb
obafaaiamiaoaaaiaapmlbaaobacaaaaajbeacacaalologmnaalagadembbafai
aaloloblpaalaeafmiahaaahaemagmmaolalaiaeabceacaaaalomdmgpaaeaiac
emcbafaaaagmmglbkcaipmafljciaaakaaloloaanaalaepnemibacaeaalbblmg
obacakaaeacoaaaeaapmmglbobacaciaaiehafakaamamablkbabaaaekiccaaai
aaloloebnaalagafdienaiabaaonbklbobaeacaaemeoajafaaagpmgmobajafab
mjacaaabaablmggmmlalaiaemiahaaagaemalbmaolalaiagmiamaaadaakmlbgm
iliiplplemidajaaaegnblblkaiipnafkabpajacaaaamglbobakaciakaccajaa
acblblgmkaaepniamiamaaadaaagkmblmladiipomiadaaakaabklalbmladiipm
miahaaaeaalognaakbajpnaamiagaaaeaamblmmgmlaeakpnmiacaaaaaagmlbaa
obaeaaaadiebakabaablmglbkaacppaamiahaaaaaamabaaaobakajaamiabaaae
aamglbaaobaaadaamiaeaaadaablblaakdabpnaamiaeaaadaamgmgaaodadabaa
miamaaabaekmkmaaofaiaiaamiagaaaeaambbglmolaeabaabiceaaaaaalololg
paahagaebebiafabaamgmglgkcaapmaekiboafafaapmpmebibafpopomiagaaaa
aalmlbaakaafpoaaembgabaaaambaagmoiaaaaabmiadaaaaaamfblgmilaapmpm
meeeabaaaemgblgmkaafpnaamaicadaeaablblgmobafabaaememabadaakmagmg
obaeadabmacmababaaagpblbobadabaamiadaaaaaabklaaaobababaamiahaaab
aagmmaaakbaaacaabeahaaabaamagmmgobabadaaaechaaabaamamalbkbabaaaa
miahaaaaaamalbmaolacaaabmiahmaaaaablmaaaobaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
"sce_fp_rsx // 145 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff0000000000000840004000000
[Offsets]
7
_LightColor0 2 0
000008f000000340
_Color 1 0
000000e0
cSpecular 1 0
00000870
roughnessV 1 0
00000140
freBias 2 0
00000700000006e0
frePow 1 0
00000610
orenNayar 1 0
00000190
[Microcode]
2320
940017005c011c9dc8000001c8003fe1068c0440ce001c9d00020000aa020000
000040000000bf8000000000000000008e041704c8011c9dc8000001c8003fe1
ae003940c8011c9dc8000029c800bfe108820240ab181c9cab180000c8000001
0e803940c8001c9dc8000029c80000011082044001181c9e0118000055040003
ee020100c8011c9dc8000001c8003fe110800340c9041c9d00020000c8000001
00003f8000000000000000000000000008000500c8041c9dc8040001c8000001
088c3b40ff003c9dff000001c80000010e860240c8081c9dc8020001c8000001
000000000000000000000000000000000e843940c9181c9dc8000029c8000001
10808540c9081c9dc9000001c8000001ce883940c8011c9dc8000029c800bfe1
0e060340c9101c9dc9000001c80000011088024000021c9c00020000c8000001
000000000000000000000000000000000e8c3940c80c1c9dc8000029c8000001
10828540c9101c9dc9080001c800000110840540c9101c9dc9080001c8000001
108c024000021c9c00020000c800000100000000000000000000000000000000
08060300ff181c9d00020000c800000151ec3db8000000000000000000000000
0e8a0440ff081c9dc9080003c910000108820540c9081c9dc9000001c8000001
0e840440c9081c9f55040001c900000110860240c9001c9dc9040001c8000001
08808540c9101c9dc9180001c800000102043a00ff181c9d540c0001c8000001
18040100c8081c9dc8000001c800000108880540c9141c9dc9080001c8000001
10040100c9001c9dc8001001c80000010200170854001c9dc8000001c8000001
02820240ff001c9dff100001c800000108040200fe081c9dff040001c8000001
10040200c8081c9dc9000001c800000108043a00c8081c9d55000001c8000001
02820240ff001c9dc9040001c80000011082044055043c9d00020000aa020000
6000bc9920003d98000000000000000010043a00c8081c9d55000001c8000001
08060900c9101c9d00020000c800000100000000000000000000000000000000
0806020000081c9cc80c0001c800000102040900ff0c1c9d00020000c8000001
000000000000000000000000000000000e860240c90c1c9dc8020001c8000001
000000000000000000000000000000000202080054081c9dfe080001c8000001
08041d00ff001c9dc8002001c80000010482030000081c9c00020000c8000001
51ec3db800000000000000000000000002041a00c9041c9dc8000001c8000001
02820240ff001c9dff000001c800000108041c0054081c9dc8000001c8000001
02040400c9041c9dc8080001c8080003108a034055043c9f00020000c8000001
00003f8000000000000000000000000004040200ff101c9d54082001c8000001
10860a4055041c9d00020000c800000100000000000000000000000000000000
08801b40ff141c9dc8000001c80000010282044055043c9dff04000100020000
4000be590000000000000000000000000282044055043c9dc904000100020000
00003fc90000000000000000000000001000020000081c9caa020000c8000001
00000000aa3a3fb8000000000000000002823a40c9041c9d55000001c8000001
10000100c8001c9dc8000001c800000108041c00fe001c9dc8000001c8000001
02880900ff081c9d00020000c800000100000000000000000000000000000000
1082034001101c9e00020000c800000100003f80000000000000000000000000
04043a0054081c9daa080000c800000102880340ff083c9f00020000c8000001
00003f80000000000000000000000000108a0440c9083c9daa02000054020001
000000006000bc9920003d9800000000028a0440ff083c9dff14000100020000
4000be5900000000000000000000000008801b40c9101c9dc8000001c8000001
108a0a40c9081c9d00020000c800000100000000000000000000000000000000
08820440ff083c9d01140000aa0200000000000000003fc90000000000000000
02883a4055041c9d55000001c8000001088a0240ff0c1c9d01041000c8000001
028a0340c9041c9d55140003c800000108801d00ff041c9dc8000001c8000001
0282020055001c9d00020000c800000100000000000000000000000000000000
10820240c9141c9d01101000c800000102880340c9101c9dff040003c8000001
04881c40c9041c9dc8000001c800000192061706c8011c9dc8000001c8003fe1
04020200c8081c9dfe0c0001c800000110060300c9181c9d00020000c8000001
eb853f1100000000000000000000000010880440c9141c9d0002000001100000
0000404900000000000000000000000002880440ff0c1c9daa020000c9140001
0000000000004049000000000000000010040400ab101c9c00020002ab100000
0000000000000000000000000000000010008300c8081c9d00020000c8000001
0000000000000000000000000000000002820940ff101c9dc9100001c8000001
108a0840c9101c9d01100000c800000108040900fe001c9d00020000c8000001
000000000000000000000000000000001000080000041c9c00020000c8000001
00003f8000000000000000000000000004882340ff141c9dc8000001c8000001
1000020054081c9dc8000001c800000102840200fe001c9daa040000c8000001
02822340c9041c9dc8000001c800000102843a40c9081c9dab040000c8000001
10840900c9001c9d00020000c800000100000000000000000000000000000000
08802240ff141c9dc8000001c800000108803a40ab101c9c55000001c8000001
1080024001041c9c55000001c800000102040200540c1c9dff000001c8000001
10043a00c9181c9dfe0c5001c800000102840240c9081c9dc80c0001c8000001
1004040000081c9c00020000c808000366663ee6000000000000000000000000
0e82024001081c9cc8020001c800000100000000000000000000000000000000
10800140c8021c9dc8000001c800000100000000000000000000000000000000
0e840240c90c1c9dff080001c800000110840300c8081c9d00020000c8000001
00003f800000000000000000000000000e840240c9081c9dff080001c8000001
0e820440c9041c9dc8020001c908000100000000000000000000000000000000
0e81024000001c9cc9041001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_OFF" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 2
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_SpecularMap] 2D 3
SetTexture 3 [_LightTexture0] 2D 0
// 106 instructions, 4 temp regs, 0 temp arrays:
// ALU 73 float, 0 int, 2 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedkedmopgpbpmlglbjjblacjcmfppnehgjabaaaaaahaaoaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcgianaaaaeaaaaaaafkadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaa
akiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
alaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaa
aaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaadaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaaj
pcaabaaaabaaaaaapgapbaaaaaaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaa
aaaaaaahicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
"ps_3_0
; 146 ALU, 3 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r2.xyz, r0.w, r0
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
dp3_pp r0.w, r2, r1
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
mul_pp r3.xyz, r0.y, v2
dp3_pp r1.w, r2, r3
mad_pp r4.xyz, -r2, r0.w, r1
mad_pp r0.xyz, -r2, r1.w, r3
dp3_pp r0.x, r0, r4
abs_pp r0.y, r0.w
add_pp r2.w, -r0.y, c8.z
mad_pp r0.z, r0.y, c9.x, c9.y
mad_pp r0.z, r0, r0.y, c8.w
mad_pp r0.y, r0.z, r0, c9.z
rsq_pp r2.w, r2.w
rcp_pp r2.w, r2.w
mul_pp r0.y, r0, r2.w
abs_pp r2.w, r1
cmp_pp r0.z, r0.w, c8.y, c8
mul_pp r4.x, r0.z, r0.y
mad_pp r4.x, -r4, c7, r0.y
add_pp r3.w, -r2, c8.z
mad_pp r0.w, r2, c9.x, c9.y
mad_pp r0.w, r0, r2, c8
rsq_pp r3.w, r3.w
mad_pp r0.w, r0, r2, c9.z
rcp_pp r3.w, r3.w
mul_pp r2.w, r0, r3
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.w, r0, r2
mad_pp r0.y, -r3.w, c7.x, r2.w
mad_pp r4.y, r0.w, c9.w, r0
mad_pp r4.x, r0.z, c9.w, r4
min_pp r0.y, r4, r4.x
mad_pp r0.z, r0.y, c10.x, c10.y
mul_pp r2.w, c6.x, c6.x
frc_pp r0.z, r0
add r0.y, r2.w, c8.x
rcp r0.y, r0.y
mad_pp r4.z, r0, c10, c10.w
max r0.x, r0, c7.z
mul r0.y, r2.w, r0
mul r3.w, r0.y, r0.x
sincos_pp r0.xy, r4.z
max_pp r0.z, r4.y, r4.x
add_pp r4.xyz, r1, r3
dp3_pp_sat r1.x, r2, r1
rcp_pp r0.w, r0.x
mad_pp r0.z, r0, c10.x, c10.y
frc_pp r0.x, r0.z
dp3_pp_sat r1.y, r2, r3
mul_pp r5.x, r0.y, r0.w
mad_pp r4.w, r0.x, c10.z, c10
sincos_pp r0.xy, r4.w
dp3_pp r0.x, r4, r4
mul_pp r0.w, r0.y, r5.x
mul r0.w, r3, r0
rsq_pp r0.x, r0.x
mul_pp r0.xyz, r0.x, r4
dp3_pp_sat r0.x, r3, r0
rcp r0.z, r0.x
mul r0.y, r1.x, c7.x
mul r0.x, r0.y, r1.y
mul r2.x, r0, r0.z
max_pp r0.x, r1.w, c7.z
mul r0.y, r1.x, r0
add_pp r1.z, -r0.x, c8
mul r1.w, r0.z, r0.y
mul r3.w, r0, c11.x
pow_pp r0, r1.z, c5.x
min r0.y, r2.x, r1.w
min r0.z, r0.y, c8
mov_pp r0.y, r0.x
mov r0.x, c4
add r0.x, c8.z, -r0
mad_sat r0.x, r0, r0.y, c4
mul_pp r1.z, c3.x, c3.x
max r0.x, r0, c7.z
mul_pp r0.y, r1.x, r1.z
mul r1.w, r0.x, r0.z
mul_pp r0.x, r1, r0.y
rcp r2.x, r0.x
pow_pp r0, r1.x, c11.y
mul_pp r0.y, r1.x, r1.x
mul_pp r1.y, r1.x, r1
add r0.y, r0, c7
mul r2.y, r0, r2.x
mov_pp r2.x, r0
pow r0, c11.z, r2.y
mul r0.y, r1.z, r2.x
mov r0.z, r0.x
mul r0.y, r0, c11
rcp r0.y, r0.y
texld r0.xw, v0, s3
mul r0.y, r0, r0.z
mul r0.y, r0, r0.w
mul r0.z, r1.w, r0.y
max_pp r0.w, r1.y, c7.z
add r0.w, r0, c8.x
rcp_pp r0.w, r0.w
mul_pp r0.z, r0, r0.w
mul_pp r2.xyz, r0.z, c2
mul_pp r2.xyz, r2, r0.x
add r0.y, r2.w, c7.w
rcp r0.y, r0.y
mul r0.y, r2.w, r0
mad r0.y, -r0, c10, r3.w
add r0.w, r0.y, c8.z
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
mul_pp r2.xyz, r2, c0
max r1.x, r1, c7.z
mul_pp r0.xyz, r0, c0
mul_pp r0.xyz, r0, r1.x
mad_pp r0.xyz, r0, r0.w, r2
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_MainTex] 2D
SetTexture 1 [_BumpMap] 2D
SetTexture 2 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 82.67 (62 instructions), vertex: 0, texture: 12,
//   sequencer: 26, interpolator: 12;    12 GPRs, 15 threads,
// Performance (if enough threads): ~82 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacamaaaaadomaaaaaaaaaaaaaaceaaaaabliaaaaaboaaaaaaaaa
aaaaaaaaaaaaabjaaaaaaabmaaaaabidppppadaaaaaaaaakaaaaaabmaaaaaaaa
aaaaabhmaaaaaaoeaaadaaabaaabaaaaaaaaaapaaaaaaaaaaaaaabaaaaacaaab
aaabaaaaaaaaabaiaaaaaaaaaaaaabbiaaacaaaaaaabaaaaaaaaabaiaaaaaaaa
aaaaabcfaaadaaaaaaabaaaaaaaaaapaaaaaaaaaaaaaabcoaaadaaacaaabaaaa
aaaaaapaaaaaaaaaaaaaabdlaaacaaacaaabaaaaaaaaabaiaaaaaaaaaaaaabef
aaacaaaeaaabaaaaaaaaabfaaaaaaaaaaaaaabgaaaacaaafaaabaaaaaaaaabfa
aaaaaaaaaaaaabghaaacaaagaaabaaaaaaaaabfaaaaaaaaaaaaaabhbaaacaaad
aaabaaaaaaaaabfaaaaaaaaafpechfgnhaengbhaaaklklklaaaeaaamaaabaaab
aaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaa
fpemgjghgiheedgpgmgphcdaaafpengbgjgofegfhiaafpfdhagfgdhfgmgbhcen
gbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklklklaaaaaaadaaabaaab
aaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphfghgigogf
hdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaad
aaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaiaaaaaadgmbaaaalaaaaaaaaaeaaaaaaaaaaaacigdaaahaaahaaaaaaab
aaaapafaaaaahbfbaaaahcfcaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalmjjgoda
maaaaaaaaaaaaaaaaaaaaaaadpiaaaaaaaaaaaaadnjibgchdpmjankedplikkdl
eamjapnleaejapnlmaejapnllpiaaaaadpbbolifdnlifbomlofjdeiedoccpjid
dpaaaaaadoogggggeaiaaaaaaabfdaahaaaabcaameaaaaaaaaaagaakgababcaa
bcaaaaaaaaaagabggabmbcaabcaaaaaaaaaagaccgacibcaabcaaaaaaaaaagaco
gadebcaabcaaaaaaaaaagadkgaeabcaabcaaaaaaaaaacaegaaaaccaaaaaaaaaa
bacidaabbpbppomhaaaaeaaabaailaabbpbppoiiaaaaeaaadibidaabbpbpphpj
aaaaeaaamiaeaaaaaaloloaapaacacaamiabaaaaaaloloaapaababaaaiecajaa
aagmblgmabadppagfibdaaajaagpgpgmoaadadiakiioajafaagmpmebmbaaabad
miapaaaeaapeoaaakaajpoaamiabaaagaegogogmnbaeaepmfiedaaaaaamememg
obaeaeiaaaboafagaamgpmgbobaaacaakabpabaaaaaaaagmoaafagigfieiabai
aegmgmgmcaaepmiabeacaaabaamdmdmgpaaaaaabamedaiaiaamemggmobaeabab
mjaiaaacaalomdaapaaiagaamjaeaaakaalomdaapaaiafaamiabaaaeaalomdaa
paaiagaamiahaaahaemagmbfolaiaeagaibcakakaamgmggmmaakakadfibbaaab
aalbbllbobakacibbechabacaamamagmkbalabaebeehabacaamamalbibacaapm
becnaaaaaaafgmlgobaaaaabljbeaaaaaamdmpebnaagaapmemipakacaaaamgmg
obacakaaeacoaaabaakgmggmobakakiakibaadaaaaaaaaebmcaaaaafaieeagae
aalomdlbpaaiafabembhagaaaamimllbobabakaeemciagaaaalbgmblkdaapmae
diioaeagaaagpmgmobajagadmjaiaaadaablblgmmlaiaeaemiahaaafaemamgbf
olaiaeafmiadaaajaamegmmgilieplpmmiadaaaiaemegmaakaiepmaakabcaiae
aablgmgmodaaaaiikacmaiaiaeomomlbofaeaeiimiadaaajaalameblmlajiepo
miadaaajaalameblmlajiepmmiafaaaeaalalbaakbaiplaamiamaaajaaomkmmg
mlaeajpnmiapaaaiaaaaaaaaobajaiaamiafaaaeaalabkaaoaaiaiaabiciaaaa
aalologgpaahafaebebiagaaaabllbggkcaapmaekiboafafaapmpmebibagpppp
bebfaaaeaalalbblkaafppacembmaeaeaaomaamgoiaeaaaalmenaaaeabaelaeb
ibaepnpmemcdaaabaamhblblkaaepnagmeeiababaagmmglbobaeaaabdibeaeaa
aemggmblkaafpmabmaieaaaeaablbllbobafaaabembkadaaaammbbmgobaeaaab
mabkaeaaaallmmgmobaaadablabkaaaaaallgbmambaaaepoembbaaabaalbblgm
obaaadaamiabaaaaaagmgmaaobabaaaamiahaaabaagmmaaakbaaacaabeahaaab
aamalbmgobabadaaaeihaaaaaamamablkbabaaaamiahaaaaaamablmaolacaaaa
miahmaaaaamamaaaoaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
"sce_fp_rsx // 140 instructions using 4 registers
[Configuration]
24
ffffffff0001c0200007fff8000000000000840004000000
[Offsets]
7
_LightColor0 2 0
000008b000000130
_Color 1 0
00000080
cSpecular 1 0
00000800
roughnessV 1 0
00000100
freBias 2 0
00000720000006e0
frePow 1 0
00000580
orenNayar 1 0
00000240
[Microcode]
2240
940017005c011c9dc8000001c8003fe1068c0440ce001c9d00020000aa020000
000040000000bf8000000000000000008e001704c8011c9dc8000001c8003fe1
ce883940c8011c9dc8000029c800bfe108820240ab181c9cab180000c8000001
108c044001181c9e01180000550400030e8e0240c8001c9dc8020001c8000001
0000000000000000000000000000000002800340ff181c9d00020000c8000001
00003f80000000000000000000000000ae8a3940c8011c9dc8000029c800bfe1
0e020340c9101c9dc9140001c80000010e843940c8041c9dc8000029c8000001
08808540c9101c9dc9080001c80000011084024000021c9c00020000c8000001
00000000000000000000000000000000088c3b4001003c9cc9000001c8000001
0e840240c91c1c9dc8020001c800000100000000000000000000000000000000
0e8c3940c9181c9dc8000029c800000102828540c9101c9dc9180001c8000001
108c8540c9181c9dc9140001c800000110880540c9181c9dc9140001c8000001
028e0540c9101c9dc9180001c80000010e860440011c1c9cc9180003c9100001
0e8c0440c9181c9fff100001c914000110040100c9181c9dc8001001c8000001
028a0540c90c1c9dc9180001c800000108880240ff181c9dff080001c8000001
02880440c91c3c9d00020000aa0200006000bc9920003d980000000000000000
10800440011c3c9c01100000000200004000be59000000000000000000000000
04820240ff181c9d01040000c8000001048e024000021c9c00020000c8000001
0000000000000000000000000000000010060300ab1c1c9c00020000c8000001
51ec3db800000000000000000000000002040200fe081c9dc9040001c8000001
08000900ab041c9c00020000c800000100000000000000000000000000000000
92001706c8011c9dc8000001c8003fe110040200c8081c9dc9180001c8000001
048a0900011c1c9c00020000c800000100000000000000000000000000000000
10063a00ab1c1c9cfe0c0001c8000001028c0240ff181c9dff180001c8000001
0286030054001c9d00020000c800000151ec3db8000000000000000000000000
10023a0000081c9c55000001c800000102043a00fe081c9d55000001c8000001
1004090001141c9c00020000c800000100000000000000000000000000000000
02040800fe041c9dc8080001c800000104860240ff181c9d55100001c8000001
10020200c80c1c9dc8080001c8000001028a0340c91c3c9f00020000c8000001
00003f8000000000000000000000000008001a00ab0c1c9cc8000001c8000001
0e060100c80c1c9dc8000001c800000102060400c9181c9d5400000154000003
108e0440011c3c9cc90000010002000000003fc9000000000000000000000000
04861b40c9141c9dc8000001c800000102820a40c91c1c9d00020000c8000001
0000000000000000000000000000000004001d00ff181c9dc8002001c8000001
028a0340ab141c9e00020000c800000100003f80000000000000000000000000
108a0440c9103c9daa02000054020001000000006000bc9920003d9800000000
04001c00aa001c9cc8000001c8000001048a0340ff103c9f00020000c8000001
00003f80000000000000000000000000088a1b40ab141c9cc8000001c8000001
028e0440ff103c9dff140001000200004000be59000000000000000000000000
048a0440ff103c9d011c00000002000000003fc9000000000000000000000000
08881d00c9141c9dc8000001c8000001028e3a40ab141c9c55140001c8000001
04820900ff181c9d00020000c800000100000000000000000000000000000000
088c3a40ff1c1c9dab0c0000c800000106020100c8041c9dc8000001c8000001
10060200c9081c9daa002000c80000010486020055101c9d00020000c8000001
00000000000000000000000000000000108c0a40c9101c9d00020000c8000001
0000000000000000000000000000000010800240c9181c9d011c1000c8000001
02060200c80c1c9d00020000c8000001aa3a3fb8000000000000000000000000
028e0340c91c1c9dff000003c80000011088024001041c9c55181001c8000001
028a034055181c9dff100003c800000102061c00c80c1c9dc8000001c8000001
04003a00000c1c9cfe0c0001c800000110060300ab1c1c9c00020000c8000001
eb853f1100000000000000000000000002060800c8081c9d00020000c8000001
00003f80000000000000000000000000088c044001041c9caa02000001140000
0000000000004049000000000000000002040200aa001c9cfe000001c8000001
028e0440ff181c9d00020000c91c000100004049000000000000000000000000
108c1c40ab0c1c9cc8000001c800000104000400ff181c9d00020002ff180001
00000000000000000000000000000000108c084055181c9d011c0000c8000001
02822340ff181c9dc8000001c800000104008300c8001c9d00020000c8000001
0000000000000000000000000000000010040900aa001c9c00020000c8000001
00000000000000000000000000000000028a094055181c9dc91c0001c8000001
04040200fe081c9d000c0000c800000108802240ff181c9dc8000001c8000001
108a3a4001041c9c55000001c800000102880200aa081c9cc8080001c8000001
10842340c9141c9dc8000001c800000102820240ff081c9dff140001c8000001
10843a4001101c9cc90c0001c800000102800240ff081c9dc8000001c8000001
10003a00ab1c1c9cfe0c5001c80000010e80024001001c9cc8020001c8000001
0000000000000000000000000000000010020200c8041c9d01040000c8000001
0e840240c9081c9dab040000c800000110000400c8041c9d00020000c8000003
66663ee600000000000000000000000010800300c8001c9d00020000c8000001
00003f800000000000000000000000000e820240c9081c9dff000001c8000001
1080014000021c9cc8000001c800000100000000000000000000000000000000
0e810440c9001c9dc8021001c904000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
ConstBuffer "$Globals" 160 // 116 used size, 14 vars
Vector 16 [_LightColor0] 4
Vector 48 [_Color] 4
Vector 80 [cSpecular] 4
Float 96 [roughnessV]
Float 104 [freBias]
Float 108 [frePow]
Float 112 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 1
SetTexture 1 [_MainTex] 2D 0
SetTexture 2 [_SpecularMap] 2D 2
// 103 instructions, 4 temp regs, 0 temp arrays:
// ALU 71 float, 0 int, 2 uint
// TEX 3 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhpbeedpjkljbfdkhpgnjoidkfogefgkmabaaaaaaneanaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcoeamaaaaeaaaaaaadjadaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaahaaaaaa
akiacaaaaaaaaaaaahaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
ahaaaaaaagiacaaaaaaaaaaaahaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaagaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaagaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaagaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaagaaaaaaakiacaaa
aaaaaaaaagaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaafaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaadaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
"ps_3_0
; 156 ALU, 5 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c7, 0.00000000, 1.00000000, 0.50000000, 0.56999999
def c8, 2.00000000, -1.00000000, 0.09000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c8.x, c8.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c7.y
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c9.x, c9
mad_pp r0.y, r0, r0.x, c8.w
add_pp r0.z, -r0.x, c7.y
mad_pp r0.y, r0, r0.x, c9.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c7
mad_pp r3.x, r0.w, c9, c9.y
mad_pp r3.x, r3, r0.w, c8.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c7, c7.y
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c8.x, r0.y
mad_pp r0.z, r0.x, c9.w, r0
mad_pp r0.w, r3.x, r0, c9.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c7.x, c7.y
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c8.x, r3.x
mad_pp r0.x, r0.w, c9.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c10.x, c10
frc_pp r0.y, r0
mad_pp r3.y, r0, c10.z, c10.w
mad_pp r3.x, r0, c10, c10.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c10, c10.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c6.x, c6.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c8.z
rcp r0.x, r2.w
max r0.y, r0, c7.x
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c11.x
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c8.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c7
min r2.z, r0.y, c7.y
add_pp r0.y, -r0.x, c7
pow_pp r1, r0.y, c5.x
mul_pp r0.x, c3, c3
mul_pp r1.y, r2.x, r0.x
mov r0.y, c4.x
mov_pp r0.z, r1.x
add r0.y, c7, -r0
mad_sat r0.y, r0, r0.z, c4.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c11.y
max r0.y, r0, c7.x
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c8.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c11.z, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c11.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
mul_pp r0.z, r2.x, r2.y
add r0.x, r0.w, c7.w
max_pp r0.z, r0, c7.x
add r0.z, r0, c8
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c2
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c7.z, r2.w
add r0.w, r0.x, c7.y
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, c0
max r1.w, r2.x, c7.x
mul_pp r2.xyz, r0, r1.w
mul_pp r1.xyz, r1, c0
mad_pp r2.xyz, r2, r0.w, r1
rcp r0.x, v3.w
mad r1.xy, v3, r0.x, c7.z
dp3 r0.x, v3, v3
texld r0.w, r1, s4
cmp r0.y, -v3.z, c7.x, c7
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s5
mul_pp r0.x, r0.y, r0
mul_pp r0.xyz, r0.x, r2
mul_pp oC0.xyz, r0, c8.x
mov_pp oC0.w, c7.x
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_BumpMap] 2D
SetTexture 4 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 92.00 (69 instructions), vertex: 0, texture: 20,
//   sequencer: 28, interpolator: 16;    14 GPRs, 12 threads,
// Performance (if enough threads): ~92 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacfeaaaaaefiaaaaaaaaaaaaaaceaaaaabpmaaaaacceaaaaaaaa
aaaaaaaaaaaaabneaaaaaabmaaaaabmhppppadaaaaaaaaamaaaaaabmaaaaaaaa
aaaaabmaaaaaabamaaadaaadaaabaaaaaaaaabbiaaaaaaaaaaaaabciaaacaaab
aaabaaaaaaaaabdaaaaaaaaaaaaaabeaaaacaaaaaaabaaaaaaaaabdaaaaaaaaa
aaaaabenaaadaaaaaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaadaaabaaabaaaa
aaaaabbiaaaaaaaaaaaaabgmaaadaaacaaabaaaaaaaaabbiaaaaaaaaaaaaabhf
aaadaaaeaaabaaaaaaaaabbiaaaaaaaaaaaaabicaaacaaacaaabaaaaaaaaabda
aaaaaaaaaaaaabimaaacaaaeaaabaaaaaaaaabjeaaaaaaaaaaaaabkeaaacaaaf
aaabaaaaaaaaabjeaaaaaaaaaaaaabklaaacaaagaaabaaaaaaaaabjeaaaaaaaa
aaaaablfaaacaaadaaabaaaaaaaaabjeaaaaaaaafpechfgnhaengbhaaaklklkl
aaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefegfhihehf
hcgfdaaafpemgjghgihefegfhihehfhcgfecdaaafpengbgjgofegfhiaafpfdha
gfgdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaaaaaaaad
aaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphf
ghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaiaaaaaadnibaaaanaaaaaaaaaeaaaaaaaaaaaadiieaaapaaap
aaaaaaabaaaapafaaaaahbfbaaaahcfcaaaapdfdaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaalmjjgodaeamjapnlaaaaaaaaaaaaaaaadnjibgchdpmjankeaaaaaaaa
doccpjidmaejapnllofjdeiedpiaaaaamaaaaaaalpiaaaaadpbbolifdnlifbom
eaiaaaaadplikkdldpaaaaaadoogggggeaejapnlaaajgaahgaanbcaabcaaaaaa
aaaagabdgabjbcaabcaaaaaaaaaagabpgacfbcaabcaaaffaaaaaaaaagaclmeaa
bcaaaaaaaaaagadbgadhbcaabcaaaaaaaaaagadngaedbcaabcaaaaaaaaaagaej
caepbcaaccaaaaaadidaeaabbpbpppnjaaaaeaaamiaeaaaaaagmblaacbadpoaa
miaiaaaaaaloloaapaababaamiaiaaabaaloloaapaacacaafiidabamaagngnbl
oaaeaeibfiihaaahaablmablobabaciaaieoamabaablpmgmmbaaabagkiibamab
aamdmdecnaababadmiapaaaeaapoonaakaampoaamiaiaaahaelclcmgnbaeaepn
fibmabaaaapbpbgmobaeaeibaaihacacaabfgmmlobababaakaipaaajaaaaaabl
oaacahihfieiaaalaegmmgblcaaepnijmiaeaaalaamgblaaobaaaaaamiadaaal
aamfmgaaobaeaaaamiabaaakaaloloaapaalahaamiaiaaaaaagmmgaakcakpmaa
liebaaagaalolomdnaajajpneaeiaaagaalolomgpaadadiakibaabaaaaaaaaec
mcaaaaafdiecakakaalologmpaalacabmjaeaaafaablmggmmlalakaemiadaaab
aalagmgmilikplpmemegabaeaelmmgblkaikpnadkabiafafaamgmglbkfadpmie
kacmafabaamgkmmgobabadiemiadaaabaalalalbmlabikpnmiagaaagaalmlmlb
mlabikpmmiadaaabaalablaakbafpnaamiadaaabaalamfaaobabagaamiapaaab
aadojjaakaabppaapmbidambbpbppppiaaaaeaaadaaigacbbpbpphppaaaaeaaa
baeieaabbpbppomhaaaaeaaabaciaaabbpbppoiiaaaaeaaamiahaaaaaamamaaa
kbaaabaafibhaaaiaamamagmkbaaaaigmiahaaaaaamagmaaobajaaaamjaiaaaa
aaloloaapaahaaaaajbeaaaaaalologmnaalacadmiahaaajaemalbmaolalakac
abciaaaiaalolomgpaalahaaemipaaacaaaamgblobaiaaaabeaoaaanaapmmglb
obaaaaaaambianadacblmgblkaanpnaiembeaiaiaablblgmobananaeemchaiaa
aagfbkblobanaaaebeboaeaiaaagpmlbobamaiaaembkaiaaaelmlmgmofakakaa
miahaaakaemagmmaolalakahbeihaeahaamamamgibaipppnbiceadadaalologl
paakajaebeceadadaamgmglbkcadpmademijadabaamemhblobahadaidibeaead
aelbmggmkaahpnabbeibadaaaagmblmgobaeadaabibeaaaaaagmmgllobaaaead
bebbaaagaamggmblobaaaaaclaepaaafaappkhmambagafpomiajaaaaaamfbjbk
olabaaafbibcaaaaaagmblglocaaaaaamiadaaaaaagnbllbilaapmppemcdadaa
aalaaamgoiaaaaaamiadaaabaalalbgmilaaplpnmeedabadaalalalbobafadab
maboaaaaaalbpmlbkbadacabembbaeaaaablgmmgobabaaabmabpabaaaaaalagm
obaaaeabmiaiaaadaagmgmaaobaaabaamiahaaabaabfmaaakbaaaaaamiajaaaa
aagogpaaoaadadaamiahaaaaaamagmmaolacaaabmiahmaaaaablmaaaobaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
"sce_fp_rsx // 157 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff0000000000000840004000000
[Offsets]
7
_LightColor0 2 0
0000099000000760
_Color 1 0
00000590
cSpecular 1 0
00000900
roughnessV 1 0
000000f0
freBias 2 0
00000340000002e0
frePow 1 0
00000210
orenNayar 1 0
00000790
[Microcode]
2512
940017005c011c9dc8000001c8003fe106860440ce001c9d00020000aa020000
000040000000bf800000000000000000ce843940c8011c9dc8000029c800bfe1
10800240ab0c1c9cab0c0000c800000192061706c8011c9dc8000001c8003fe1
ae803940c8011c9dc8000029c800bfe110820440010c1c9e010c0000c9000003
0e883940c9001c9dc8000029c80000010e000340c9081c9dc9100001c8000001
10880340c9041c9d00020000c800000100003f80000000000000000000000000
0e8a3940c8001c9dc8000029c8000001028a8540c9081c9dc9140001c8000001
1080024000021c9c00020000c800000100000000000000000000000000000000
08863b40ff103c9dff100001c80000010e863940c90c1c9dc8000029c8000001
10868540c90c1c9dc9100001c800000110840540c9081c9dc90c0001c8000001
08001d00ff0c1c9dc8002001c800000102800900ff081c9d00020000c8000001
0000000000000000000000000000000010820240c90c1c9dc9000001c8000001
02800340c9001c9f00020000c800000100003f80000000000000000000000000
10041c0054001c9dc8000001c800000102820240ff0c1c9dff0c0001c8000001
10820240c90c1c9dc9040001c800000110888540c9081c9dc90c0001c8000001
02801d00c9001c9dc8000001c800000104000200ff001c9dfe082001c8000001
02800200c9001c9d00020000c800000100000000000000000000000000000000
10001a00ff041c9dc8000001c800000102801c40c9001c9dc8000001c8000001
0800040001041c9cfe000001fe0000031000020054001c9d00020000c8000001
aa3a3fb80000000000000000000000000e840440ff081c9dc90c0003c9080001
08001c00fe001c9dc8000001c800000104063a0054001c9daa000000c8000001
08060100ff0c1c9dc8001001c800000110040200540c1c9dc90c0001c8000001
1e7e7d00c8001c9dc8000001c80000010800040001001c9c0002000201000000
0000000000000000000000000000000008060200c80c1c9dff100001c8000001
04003a00540c1c9dc9140001c800000110003a00c8081c9dc9140001c8000001
02000800aa001c9cfe000001c80000010400830054001c9d00020000c8000001
000000000000000000000000000000001000080000001c9caa020000c8000001
0000000000003f80000000000000000004000900c8001c9d00020000c8000001
0000000000000000000000000000000002000200aa001c9cfe000001c8000001
10000200aa0c1c9cc80c0001c8000001088c020000001c9cfe000001c8000001
fe000100c8011c9dc8000001c8003fe1108e0440c9083c9d00020000aa020000
6000bc9920003d98000000000000000018043a0080001c9cfe000001c8000001
02000500c8001c9dc8000001c800000110800d0054001c9d00020000c8000001
0000000000000000000000000000000018040300c8081c9d00020000c8000001
00003f000000000000000000000000000200170a00001c9cc8000001c8000001
10880240c90c1c9dc9100001c8000001100017085c081c9dc8000001c8000001
08040900ff101c9d00020000c800000100000000000000000000000000000000
108c030054081c9d00020000c800000151ec3db8000000000000000000000000
028a0540c90c1c9dc9100001c8000001048a034001143c9e00020000c8000001
00003f80000000000000000000000000108a044001143c9caa02000054020001
000000006000bc9920003d980000000010883a4055181c9dff180001c8000001
088a044001143c9cff140001000200004000be59000000000000000000000000
10880240c9101c9d000c0000c800000118020100c8041c9dc8000001c8000001
8e061704c8011c9dc8000001c8003fe10e860440c90c1c9f01140000c9100001
0e8c0240c80c1c9dc8020001c800000100000000000000000000000000000000
048a1b40ab141c9cc8000001c8000001028e0340ff083c9f00020000c8000001
00003f8000000000000000000000000008880a40ff081c9daa020000c8000001
0000000000000000000000000000000004881b40c91c1c9dc8000001c8000001
02820440ff083c9dff1c0001000200004000be59000000000000000000000000
108a044001143c9c551400010002000000003fc9000000000000000000000000
02880440ff083c9dc90400010002000000003fc9000000000000000000000000
108c3a40c9141c9dab140000c800000104820540c9081c9dc90c0001c8000001
1e7e7d00c8001c9dc8000001c8000001108a0a4001141c9c00020000c8000001
0000000000000000000000000000000002883a40c9101c9dab100000c8000001
028a024055101c9dc9101001c8000001108e0240c9141c9dc9181001c8000001
10840340c9181c9dc91c0003c8000001028e0340c9101c9dc9140003c8000001
028e044055101c9d00020000c91c000100004049000000000000000000000000
108c0440c9141c9d00020000c908000100004049000000000000000000000000
10840940011c1c9cc9180001c80000010e880240c9181c9dc8020001c8000001
00000000000000000000000000000000048a2340ff081c9dc8000001c8000001
028a024000021c9c00020000c800000100000000000000000000000000000000
02820840c91c1c9dff180001c80000011004030001141c9c00020000c8000001
51ec3db800000000000000000000000008802340c9041c9dc8000001c8000001
10043a0001141c9cfe080001c800000102822240c9041c9dc8000001c8000001
1e7e7d00c8001c9dc8000001c800000102020900ab041c9c00020000c8000001
0000000000000000000000000000000010843a4055001c9dc9040001c8000001
10840240ab141c9cc9080001c800000102820900ff0c1c9d00020000c8000001
0000000000000000000000000000000002020200fe081c9dc8040001c8000001
10840100c9081c9dc8000001c800000102020200c8041c9dff080001c8000001
1006030001141c9c00020000c8000001eb853f11000000000000000000000000
10023a0001141c9cfe0c5001c80000011004040000041c9cc8020001c8040003
00000000000000000000000066663ee60e840240ff101c9dc8020001c8000001
0000000000000000000000000000000010860300c8081c9d00020000c8000001
00003f8000000000000000000000000006040100c8081c9dc8000001c8000001
0e860240c9101c9d01040000c800000110840240c9001c9dc8000001c8000001
0e860240c90c1c9dff0c0001c800000110800240c9081c9d00000000c8000001
0e800440c9081c9dc8020001c90c000100000000000000000000000000000000
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_OFF" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 3
SetTexture 1 [_MainTex] 2D 2
SetTexture 2 [_SpecularMap] 2D 4
SetTexture 3 [_LightTexture0] 2D 0
SetTexture 4 [_LightTextureB0] 2D 1
// 112 instructions, 4 temp regs, 0 temp arrays:
// ALU 77 float, 0 int, 3 uint
// TEX 5 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedkbjcpoecghiciobpoiakmackognmamjnabaaaaaaeiapaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefceaaoaaaaeaaaaaaajaadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaogbkbaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaaaaaaaaaa
hgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaaaaaaaaaa
elaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaa
aaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaaabeaaaaa
dagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaakbcaabaaa
acaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaaiedefjlo
dcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaa
abeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaah
ecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaajecaabaaa
acaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaai
icaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaadgcaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaadkaabaaa
acaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaaacaaaaaa
bkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaabaaaaaah
bcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaa
baaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaachbgjidn
dcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaa
abeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaaakaabaia
mbaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaackaabaaa
aaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaamaabeaaaaa
nlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaiaebaaaaaa
adaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaa
abaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaaj
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
ddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaadeaaaaah
ccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaagccaabaaa
aaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaabcaabaaa
acaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaaabaaaaaa
akaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaaakiacaaa
aaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaaalaaaaaa
agiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaadcaaaaak
ecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaggggogdo
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaafgaobaaa
acaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaaaaaaaaaa
eeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaajgahbaaa
acaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaackaabaaa
aaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaai
ccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
ccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaa
abaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
omfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaajecaabaaa
aaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdccaaaak
ecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaaaaaaaaaa
akaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaaaaaaaaaa
akaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaaaaaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
aaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
aoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
ocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaaaoaaaaah
dcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaaaaaaaakdcaabaaa
abaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaadaaaaaaaagabaaa
aaaaaaaadbaaaaahicaabaaaaaaaaaaaabeaaaaaaaaaaaaackbabaaaaeaaaaaa
abaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpdiaaaaah
icaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaa
agaabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaaapaaaaahicaabaaa
aaaaaaaapgapbaaaaaaaaaaaagaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTextureB0] 2D
SetTexture 5 [_LightTexture0] CUBE
"ps_3_0
; 152 ALU, 5 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_cube s5
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c9.x, c9
mad_pp r0.y, r0, r0.x, c8.w
add_pp r0.z, -r0.x, c8
mad_pp r0.y, r0, r0.x, c9.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c8.z
mad_pp r3.x, r0.w, c9, c9.y
mad_pp r3.x, r3, r0.w, c8.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c8.y, c8.z
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c7.x, r0.y
mad_pp r0.z, r0.x, c9.w, r0
mad_pp r0.w, r3.x, r0, c9.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c7.x, r3.x
mad_pp r0.x, r0.w, c9.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c10.x, c10
frc_pp r0.y, r0
mad_pp r3.y, r0, c10.z, c10.w
mad_pp r3.x, r0, c10, c10.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c10, c10.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c6.x, c6.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c8.x
rcp r0.x, r2.w
max r0.y, r0, c7.z
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c11.x
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c7.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c7.z
min r2.z, r0.y, c8
add_pp r0.y, -r0.x, c8.z
pow_pp r1, r0.y, c5.x
mul_pp r0.x, c3, c3
mul_pp r1.y, r2.x, r0.x
mov r0.y, c4.x
mov_pp r0.z, r1.x
add r0.y, c8.z, -r0
mad_sat r0.y, r0, r0.z, c4.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c11.y
max r0.y, r0, c7.z
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c7.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c11.z, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c11.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
add r0.x, r0.w, c7.w
mul_pp r0.z, r2.x, r2.y
max_pp r0.z, r0, c7
add r0.z, r0, c8.x
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c2
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c10.y, r2.w
add r0.w, r0.x, c8.z
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
mul_pp r1.xyz, r1, c0
max r1.w, r2.x, c7.z
mul_pp r0.xyz, r0, c0
mul_pp r0.xyz, r0, r1.w
mad_pp r1.xyz, r0, r0.w, r1
dp3 r0.x, v3, v3
texld r0.w, v3, s5
texld r0.x, r0.x, s4
mul r0.x, r0, r0.w
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_LightTexture0] CUBE
SetTexture 1 [_LightTextureB0] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_BumpMap] 2D
SetTexture 4 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 90.67 (68 instructions), vertex: 0, texture: 20,
//   sequencer: 28, interpolator: 16;    12 GPRs, 15 threads,
// Performance (if enough threads): ~90 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacgeaaaaaeemaaaaaaaaaaaaaaceaaaaacamaaaaacdeaaaaaaaa
aaaaaaaaaaaaaboeaaaaaabmaaaaabnhppppadaaaaaaaaamaaaaaabmaaaaaaaa
aaaaabnaaaaaabamaaadaaadaaabaaaaaaaaabbiaaaaaaaaaaaaabciaaacaaab
aaabaaaaaaaaabdaaaaaaaaaaaaaabeaaaacaaaaaaabaaaaaaaaabdaaaaaaaaa
aaaaabenaaadaaaaaaabaaaaaaaaabfmaaaaaaaaaaaaabgmaaadaaabaaabaaaa
aaaaabbiaaaaaaaaaaaaabhmaaadaaacaaabaaaaaaaaabbiaaaaaaaaaaaaabif
aaadaaaeaaabaaaaaaaaabbiaaaaaaaaaaaaabjcaaacaaacaaabaaaaaaaaabda
aaaaaaaaaaaaabjmaaacaaaeaaabaaaaaaaaabkeaaaaaaaaaaaaableaaacaaaf
aaabaaaaaaaaabkeaaaaaaaaaaaaabllaaacaaagaaabaaaaaaaaabkeaaaaaaaa
aaaaabmfaaacaaadaaabaaaaaaaaabkeaaaaaaaafpechfgnhaengbhaaaklklkl
aaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefegfhihehf
hcgfdaaaaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpemgjghgihefegfhihehfhc
gfecdaaafpengbgjgofegfhiaafpfdhagfgdhfgmgbhcengbhaaagdfdhagfgdhf
gmgbhcaagghcgfecgjgbhdaaaaaaaaadaaabaaabaaabaaaaaaaaaaaagghcgffa
gphhaagphcgfgoeogbhjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadc
codacodcdadddfddcodaaaklaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabe
abpiaacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaadmmbaaaalaa
aaaaaaaeaaaaaaaaaaaadeieaaapaaapaaaaaaabaaaapafaaaaahbfbaaaahcfc
aaaahdfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalmjjgodadpmjankemaaaaaaa
aaaaaaaadpiaaaaamaejapnlaaaaaaaadnjibgcheamjapnldplikkdllofjdeie
eaejapnllpiaaaaadpbbolifdnlifbomdpmaaaaadoccpjiddpaaaaaadooggggg
eaiaaaaaafaagaahdaanbcaabcaaaabfaaaaaaaagabameaabcaaaaaaaaaagabg
gabmbcaabcaaaaaaaaaagaccgacibcaabcaaaaaaaaaagacogadebcaabcaaaaaa
aaaagadkgaeabcaabcaaaaaaaaaagaegeaembcaaccaaaaaamiaiaaabaaloloaa
paadadaamiapaaadaakgmnaapcadadaaemiiacafaablblmgocadadidmiadaaaf
aagnblblmladacpobaeieaabbpbpppniaaaaeaaabacidaabbpbppoiiaaaaeaaa
pmbifacbbpbppodpaaaaeaaanaaigakbbpbpphppaaaamaaadidiaaabbpbppghp
aaaaeaaamiabaaaaaaloloaapaababaamiacaaaaaaloloaapaacacaaficdaaag
aamhmhlboaaaaaiafibhaaaiaalbmagmobaaaciaaiehagabaagmmagmmbaaabag
miapaaacaapoonaakaagpoaamiaiaaaiaelclcgmnbacacpmembeafaaaalologm
paababacfiedaaaaaamfmfmgobacaciaemchafajaamamgblobabaaacaaioajah
aaagpmgbobagafaakabpaaabaaaaaabloaajaiiifiebaaacaablblbloaahahib
miaeaaagaamggmaaobaaaaaamialaaaaaamamaaakbadabaabeahaaadaabamagm
ibaaaaadamcbaaaaaaloloblnaababppfibdaaagaamfmggmobacaaiakiinagaa
aapagmebmbabaaadmiacaaalaaloloaapaagajaamjaeaaaaaalompaapaaiaaaa
mjaiaaadaaloloaapaagaiaamjaeaaafaaloloaapaagajaaaibbafalaalologm
naagaiadmiahaaaiaemagmmaolagalaiaaccafaaaagmmgmgkcalpmaflibbaaab
aalbblebmbafadpmemipafadaaaamgmgobadafaaeaeoaaabaakgmggmobafafia
aiehalafaagkbklbobabafabmiapaaagaapplcaaobagalaamiamaaakaekmkmaa
ofalalaamiadaaaaaalagmblililplpmmiagaaacaelmgmaakailpmaakabiakaa
aalbgmlbkdafpmickaccakacaablmgmgodaaaficmiadaaaaaalalamgmlaailpn
miamaaalaakmkmlbmlaailplbeadaaaaablamggmibakplaemiadaaalaalabkbl
mlaaalpnaeepafakaaaakkgmmbalakpmlmijacaaabbklaebmaakakpmbechaaab
acmabfgloaajagaabibeahacaalologlpaaiabaakicnababaapapaebibahpppp
kibkaaaaaalmlbeciaabppafemcmaaaaaadbaagmoiaaaaafdieoaaagaadghmgm
kbaapnaaembkaaaaaabblbgmkaagpmagmeeeacaeaamgmglbkcacpmaamaeiaeae
aablmglbobabaeaaemebacagaablmgmgobaeaeacmackaaafaammbgblobagacaa
dibiafabaemggmblkaabpmafbeboaaaaaapmpmblobafaaadlabbaaabaalblbma
mbaaaepolcbcababaagmlbedmbabacaeembbaaabaalbgmgmobababaamiabaaaa
aagmgmaaobabaaaamiahaaabaagmmaaakbaaacaabeahaaabaamagmblobabaeab
aebhaaabaamamamgkbabaaaamiahaaaaaamagmmaoladaaabmiahmaaaaagmmaaa
obacaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTextureB0] 2D
SetTexture 5 [_LightTexture0] CUBE
"sce_fp_rsx // 148 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff0000000000000840004000000
[Offsets]
7
_LightColor0 2 0
0000090000000110
_Color 1 0
000000c0
cSpecular 1 0
000008a0
roughnessV 1 0
00000030
freBias 2 0
000006a000000660
frePow 1 0
00000570
orenNayar 1 0
00000610
[Microcode]
2368
ee040100c8011c9dc8000001c8003fe108040500c8081c9dc8080001c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
940017005c011c9dc8000001c8003fe106800440ce001c9d00020000aa020000
000040000000bf80000000000000000008800240ab001c9cab000000c8000001
108a044001001c9e01000000550000038e021704c8011c9dc8000001c8003fe1
ae063940c8011c9dc8000029c800bfe10e840240c8041c9dc8020001c8000001
000000000000000000000000000000000e823940c80c1c9dc8000029c8000001
10800340c9141c9dc8020001c800000100000000000000000000000000003f80
0e840240c9081c9dc8020001c800000100000000000000000000000000000000
ce883940c8011c9dc8000029c800bfe10e060340c9101c9dc9040001c8000001
08803b40ff003c9dff000001c80000010e863940c9001c9dc8000029c8000001
10840540c9101c9dc90c0001c80000010200170854081c9dc8000001c8000001
0e8a3940c80c1c9dc8000029c800000108808540c90c1c9dc9040001c8000001
10860540c90c1c9dc9040001c800000110828540c9101c9dc90c0001c8000001
0e8c0440ff081c9dc90c0003c9100001108c0340c90c3c9f00020000c8000001
00003f800000000000000000000000000e820440c90c1c9fff0c0001c9040001
028e024055001c9dff040001c800000110060900011c1c9c00020000c8000001
0000000000000000000000000000000008888540c9101c9dc9140001c8000001
08040100c9001c9dc8001001c800000192041706c8011c9dc8000001c8003fe1
10800540c9181c9dc9040001c80000011000020054081c9dc9040001c8000001
04821b40ff181c9dc8000001c800000102820300fe0c1c9d00020000c8000001
51ec3db800000000000000000000000008040200c8081c9dc9000001c8000001
108c024055001c9dc9100001c800000102063a00fe001c9d55100001c8000001
0286024055001c9dff180001c8000001108e024055001c9d55000001c8000001
04063a0054081c9d55100001c800000108800100c9001c9dc8000001c8000001
02060800c80c1c9daa0c0000c800000104061d0055001c9dc8002001c8000001
08021a00c90c1c9dc8000001c800000108860440ff0c3c9d00020000aa020000
6000bc9920003d98000000000000000008041c00aa0c1c9cc8000001c8000001
08020400ff1c1c9dc8040001c804000308820440ff0c3c9dc90c000100020000
4000be5900000000000000000000000004060800000c1c9caa020000c8000001
0000000000003f80000000000000000010820440c90c3c9d5504000100020000
00003fc900000000000000000000000008020200c8041c9d00020000c8000001
aa3a3fb800000000000000000000000004040200ff101c9d54082001c8000001
08041c0054041c9dc8000001c800000102860a40ff0c1c9d00020000c8000001
0000000000000000000000000000000008043a00c8081c9daa080000c8000001
06020100c8041c9dc8000001c800000110880900c9081c9d00020000c8000001
0000000000000000000000000000000010860340c9101c9f00020000c8000001
00003f8000000000000000000000000008863a40ff041c9dab040000c8000001
04860240010c1c9c550c1001c800000110880340c9083c9f00020000c8000001
00003f8000000000000000000000000004860340550c1c9dc90c0003c8000001
08860440ff083c9d00020000aa0200006000bc9920003d980000000000000000
028e0440ff083c9d550c0001000200004000be59000000000000000000000000
10861d00ff0c1c9dc8000001c800000108861b40ff101c9dc8000001c8000001
048e0200ff0c1c9d00020000c800000100000000000000000000000000000000
028e0440ff083c9dc91c00010002000000003fc9000000000000000000000000
048e1c40ab1c1c9cc8000001c8000001028e3a40c91c1c9d550c0001c8000001
10840a40c9081c9d00020000c800000100000000000000000000000000000000
10860240c9081c9d011c1000c80000010206020054081c9dfe080001c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
048a0440010c1c9caa020000c90c000100000000000040490000000000000000
028e0340c91c1c9dff0c0003c800000110060400ab1c1c9c00020002ab1c0000
00000000000000000000000000000000028a0440ff081c9daa020000c91c0001
0000000000004049000000000000000010028300c80c1c9d00020000c8000001
000000000000000000000000000000001084090055001c9d00020000c8000001
000000000000000000000000000000000888084001141c9cab140000c8000001
10040300c9101c9d00020000c800000151ec3db8000000000000000000000000
028a0940c9141c9dab140000c8000001028a2340c9141c9dc8000001c8000001
08020900fe041c9d00020000c800000100000000000000000000000000000000
1006020054041c9daa0c0000c80000010e840240c9081c9dff080001c8000001
028c0200fe0c1c9dc80c0001c800000110020900c9001c9d00020000c8000001
0000000000000000000000000000000002863a40c9181c9dc9040001c8000001
1080234055101c9dc8000001c800000102860240c90c1c9dc8080001c8000001
10043a00c9101c9dfe080001c80000010482224055101c9dc8000001c8000001
1e7e7d00c8001c9dc8000001c800000104060300ff101c9d00020000c8000001
eb853f1100000000000000000000000008883a40ff001c9dab040000c8000001
10040200c8081c9dc8040001c8000001f000170ac8011c9dc8000001c8003fe1
108e024001141c9c55100001c800000102040200fe081c9dff1c0001c8000001
10023a00c9101c9daa0c5000c80000011004040000081c9cc8020001c8040003
00000000000000000000000066663ee60e860240010c1c9cc8020001c8000001
0000000000000000000000000000000010840300c8081c9d00020000c8000001
00003f800000000000000000000000000e840240c9081c9dff080001c8000001
1080020000001c9cc8000001c80000010e800440c90c1c9dc8020001c9080001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
1081014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 3
SetTexture 1 [_MainTex] 2D 2
SetTexture 2 [_SpecularMap] 2D 4
SetTexture 3 [_LightTextureB0] 2D 1
SetTexture 4 [_LightTexture0] CUBE 0
// 107 instructions, 4 temp regs, 0 temp arrays:
// ALU 73 float, 0 int, 2 uint
// TEX 5 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedambkecnmfaoejdnlmkogfiokkhlnhdgmabaaaaaalaaoaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefckianaaaaeaaaaaaagkadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaogbkbaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaaaaaaaaaa
hgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaaaaaaaaaa
elaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaa
aaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaaabeaaaaa
dagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaakbcaabaaa
acaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaaiedefjlo
dcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaa
abeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaah
ecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaajecaabaaa
acaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaai
icaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaadgcaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaadkaabaaa
acaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaaacaaaaaa
bkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaabaaaaaah
bcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaa
baaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaachbgjidn
dcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaa
abeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaaakaabaia
mbaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaackaabaaa
aaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaamaabeaaaaa
nlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaiaebaaaaaa
adaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaa
abaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaaj
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
ddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaadeaaaaah
ccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaagccaabaaa
aaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaabcaabaaa
acaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaaabaaaaaa
akaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaaakiacaaa
aaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaaalaaaaaa
agiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaadcaaaaak
ecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaggggogdo
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaafgaobaaa
acaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaaaaaaaaaa
eeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaajgahbaaa
acaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaackaabaaa
aaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaai
ccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
ccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaa
abaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
omfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaajecaabaaa
aaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdccaaaak
ecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaaaaaaaaaa
akaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaaaaaaaaaa
akaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaaaaaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
aaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
aoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
ocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaapgapbaaaaaaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbcbaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaa
apaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaacaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
"ps_3_0
; 147 ALU, 4 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xy
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r2.xyz, r0.w, r0
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
dp3_pp r0.w, r2, r1
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
mul_pp r3.xyz, r0.y, v2
dp3_pp r1.w, r2, r3
mad_pp r4.xyz, -r2, r0.w, r1
mad_pp r0.xyz, -r2, r1.w, r3
dp3_pp r0.x, r0, r4
abs_pp r0.y, r0.w
add_pp r2.w, -r0.y, c8.z
mad_pp r0.z, r0.y, c9.x, c9.y
mad_pp r0.z, r0, r0.y, c8.w
mad_pp r0.y, r0.z, r0, c9.z
rsq_pp r2.w, r2.w
rcp_pp r2.w, r2.w
mul_pp r0.y, r0, r2.w
abs_pp r2.w, r1
cmp_pp r0.z, r0.w, c8.y, c8
mul_pp r4.x, r0.z, r0.y
mad_pp r4.x, -r4, c7, r0.y
add_pp r3.w, -r2, c8.z
mad_pp r0.w, r2, c9.x, c9.y
mad_pp r0.w, r0, r2, c8
rsq_pp r3.w, r3.w
mad_pp r0.w, r0, r2, c9.z
rcp_pp r3.w, r3.w
mul_pp r2.w, r0, r3
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.w, r0, r2
mad_pp r0.y, -r3.w, c7.x, r2.w
mad_pp r4.y, r0.w, c9.w, r0
mad_pp r4.x, r0.z, c9.w, r4
min_pp r0.y, r4, r4.x
mad_pp r0.z, r0.y, c10.x, c10.y
mul_pp r2.w, c6.x, c6.x
frc_pp r0.z, r0
add r0.y, r2.w, c8.x
rcp r0.y, r0.y
mad_pp r4.z, r0, c10, c10.w
max r0.x, r0, c7.z
mul r0.y, r2.w, r0
mul r3.w, r0.y, r0.x
sincos_pp r0.xy, r4.z
max_pp r0.z, r4.y, r4.x
add_pp r4.xyz, r1, r3
dp3_pp_sat r1.x, r2, r1
rcp_pp r0.w, r0.x
mad_pp r0.z, r0, c10.x, c10.y
frc_pp r0.x, r0.z
dp3_pp_sat r1.y, r2, r3
mul_pp r5.x, r0.y, r0.w
mad_pp r4.w, r0.x, c10.z, c10
sincos_pp r0.xy, r4.w
dp3_pp r0.x, r4, r4
mul_pp r0.w, r0.y, r5.x
mul r0.w, r3, r0
rsq_pp r0.x, r0.x
mul_pp r0.xyz, r0.x, r4
dp3_pp_sat r0.x, r3, r0
rcp r0.z, r0.x
mul r0.y, r1.x, c7.x
mul r0.x, r0.y, r1.y
mul r2.x, r0, r0.z
max_pp r0.x, r1.w, c7.z
mul r0.y, r1.x, r0
add_pp r1.z, -r0.x, c8
mul r1.w, r0.z, r0.y
mul r3.w, r0, c11.x
pow_pp r0, r1.z, c5.x
min r0.y, r2.x, r1.w
min r0.z, r0.y, c8
mov_pp r0.y, r0.x
mov r0.x, c4
add r0.x, c8.z, -r0
mad_sat r0.x, r0, r0.y, c4
mul_pp r1.z, c3.x, c3.x
max r0.x, r0, c7.z
mul_pp r0.y, r1.x, r1.z
mul r1.w, r0.x, r0.z
mul_pp r0.x, r1, r0.y
rcp r2.x, r0.x
pow_pp r0, r1.x, c11.y
mul_pp r0.y, r1.x, r1.x
mul_pp r1.y, r1.x, r1
add r0.y, r0, c7
mul r2.y, r0, r2.x
mov_pp r2.x, r0
pow r0, c11.z, r2.y
mul r0.y, r1.z, r2.x
mov r0.z, r0.x
mul r0.y, r0, c11
rcp r0.y, r0.y
texld r0.xw, v0, s3
mul r0.y, r0, r0.z
mul r0.y, r0, r0.w
mul r0.z, r1.w, r0.y
max_pp r0.w, r1.y, c7.z
add r0.w, r0, c8.x
rcp_pp r0.w, r0.w
mul_pp r0.z, r0, r0.w
mul_pp r2.xyz, r0.z, c2
mul_pp r2.xyz, r2, r0.x
add r0.y, r2.w, c7.w
rcp r0.y, r0.y
mul r0.y, r2.w, r0
mad r0.y, -r0, c10, r3.w
add r0.w, r0.y, c8.z
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
mul_pp r2.xyz, r2, c0
max r1.x, r1, c7.z
mul_pp r0.xyz, r0, c0
mul_pp r0.xyz, r0, r1.x
mad_pp r0.xyz, r0, r0.w, r2
texld r0.w, v3, s4
mul_pp r0.xyz, r0.w, r0
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_LightTexture0] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [_BumpMap] 2D
SetTexture 3 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 84.00 (63 instructions), vertex: 0, texture: 16,
//   sequencer: 26, interpolator: 16;    13 GPRs, 12 threads,
// Performance (if enough threads): ~84 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacdaaaaaaeaeaaaaaaaaaaaaaaceaaaaabniaaaaacaaaaaaaaaa
aaaaaaaaaaaaablaaaaaaabmaaaaabkdppppadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabjmaaaaaapiaaadaaacaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaaab
aaabaaaaaaaaabbmaaaaaaaaaaaaabcmaaacaaaaaaabaaaaaaaaabbmaaaaaaaa
aaaaabdjaaadaaaaaaabaaaaaaaaabaeaaaaaaaaaaaaabeiaaadaaabaaabaaaa
aaaaabaeaaaaaaaaaaaaabfbaaadaaadaaabaaaaaaaaabaeaaaaaaaaaaaaabfo
aaacaaacaaabaaaaaaaaabbmaaaaaaaaaaaaabgiaaacaaaeaaabaaaaaaaaabha
aaaaaaaaaaaaabiaaaacaaafaaabaaaaaaaaabhaaaaaaaaaaaaaabihaaacaaag
aaabaaaaaaaaabhaaaaaaaaaaaaaabjbaaacaaadaaabaaaaaaaaabhaaaaaaaaa
fpechfgnhaengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcda
aafpemgjghgihefegfhihehfhcgfdaaafpengbgjgofegfhiaafpfdhagfgdhfgm
gbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaaaaaaaadaaabaaab
aaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphfghgigogf
hdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaaaaaaaaad
aaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaiaaaaaadiebaaaamaaaaaaaaaeaaaaaaaaaaaadaieaaapaaapaaaaaaab
aaaapafaaaaahbfbaaaahcfcaaaaddfdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
lmjjgodamaaaaaaaaaaaaaaaaaaaaaaadpiaaaaaaaaaaaaadnjibgchdpmjanke
dplikkdleamjapnleaejapnlmaejapnllpiaaaaadpbbolifdnlifbomlofjdeie
doccpjiddpaaaaaadoogggggeaiaaaaaaaffeaahaaaabcaameaaaaaaaaaagaal
gabbbcaabcaaaaaaaaaagabhgabnbcaabcaaaaaaaaaagacdgacjbcaabcaaaaaa
aaaagacpgadfbcaabcaaaaaaaaaagadlgaebbcaabcaaaaaaaaaadaehaaaaccaa
aaaaaaaabadieaabbpbppomhaaaaeaaababimaabbpbppoiiaaaaeaaabaaidagb
bpbppoppaaaaeaaadicidaabbpbpppnjaaaaeaaamiabaaaaaaloloaapaacacaa
miaeaaaaaaloloaapaababaaaiecakaaaagmblgmabadppagfiedaaakaagngnmg
oaadadiafibhaaafaamgmagmobaaabiakiioakajaagmpmebmbaaacadmiapaaah
aakggfaakaakpoaamiaeaaaaaemhmhgmnbahahpmbeadaaadabbkbkgmmbahahae
aeijaiaaaamemfgmmaadadpmkaecaaaaaagmmgmgoaaaaaiafibhabalaamabflb
oaafajiabeacaaaaaalologmpaalalabamedaiaiaabkgmmgobahabaamjaiaaac
aalomdaapaaiajaamjaeaaadaaloloaapaaiafaamiabaaajaalomdaapaaiajaa
miahaaagaemagmbfolaiajajaibcadadaamgmggmmaadadadficbababaalbbllb
obadaciabechaaacaamamagmkbamabajbeehaaacaamamalbibacaapmbecoaaab
aapmlblgobalabaaljceaaaaaamdmdebnaajabpmemipadacaaaamgmgobacadaa
eacoaaabaakgmglbobadadiakicaaaaaaaaaaaebmcaaaaafaiecahajaalololb
paaiafabembhahadaaghbhgmobabadahemciahadaagmgmlbkdadpmahdieoajah
aaagpmlbobakahaamjabaaadaablmggmmlaiajaemiahaaafaemalbmaolaiajaf
miagaaaaaalmgmmgilijplpmmiajaaaeaelagmaakaijpmaakabeaiadaablmggm
odadadiekacmaiaiaekmkmblofajajiemiagaaaaaamblmblmlaaijpomiadaaaj
aamflablmlaaijpmmiagaaaaaalmlbaakbaiplaamiamaaajaapbkmmgmlaaajpn
miapaaaiaaaaaaaaobajaiaamiajaaaeaalabkaaoaaiaiaabiceaaaaaalologl
paagafaebebeahaaaamglbglkcaapmaekicnafafaapapaebibahppppbebjaaae
aalalbblkaafppacembgagagaabmaalboiaeaaadlmehabagabmalaebibagpnpm
emcdaaabaamfblblkaagpnahmeecabadaagmmglbobagababdiciadabaemggmlb
kaafpmadmaeiaaadaablmglbobafaaabembgaeaaaabbmbmgobadaaabmacgadaa
aalgmmgmobaaaeablabgabaaaambmbmambaaadpoembcababaamggmgmobaaadab
miabaaabaalbgmaaobababaamiahaaabaagmmaaakbabacaabeahaaabaamalbbl
obabaeabaechaaabaamamalbkbabaaaamiahaaaaaamalbmaolacaaabmiahmaaa
aablmaaaobaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
"sce_fp_rsx // 141 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff8000000000000840004000000
[Offsets]
7
_LightColor0 2 0
000008b000000370
_Color 1 0
000002f0
cSpecular 1 0
00000840
roughnessV 1 0
00000040
freBias 2 0
000006f0000006d0
frePow 1 0
00000670
orenNayar 1 0
00000230
[Microcode]
2256
940017005c011c9dc8000001c8003fe106820440ce001c9daa02000054020001
00000000000040000000bf80000000001082024000021c9c00020000c8000001
0000000000000000000000000000000092041706c8011c9dc8000001c8003fe1
ce803940c8011c9dc8000029c800bfe110800240ab041c9cab040000c8000001
ae843940c8011c9dc8000029c800bfe10e060340c9001c9dc9080001c8000001
1084044001041c9e01040000c90000030e863940c80c1c9dc8000029c8000001
10840340c9081c9d00020000c800000100003f80000000000000000000000000
08823b40ff083c9dff080001c80000010e823940c9041c9dc8000029c8000001
10808540c9041c9dc9080001c800000110840240c9001c9dc9040001c8000001
028c0240ff001c9dff080001c800000104061d00ff001c9dc8002001c8000001
04041a00c9181c9dc8000001c8000001028a0240ff001c9dff000001c8000001
02060400c9141c9daa080000aa08000204061c00aa0c1c9cc8000001c8000001
10060200000c1c9c00020000c8000001aa3a3fb8000000000000000000000000
02060200ff041c9daa0c2000c800000104061c00fe0c1c9dc8000001c8000001
10828540c9001c9dc90c0001c8000001f0021708c8011c9dc8000001c8003fe1
10060100c9001c9dc8001001c800000104043a00c80c1c9dc80c0001c8000001
08040200aa081c9cfe080001c800000110888540c9001c9dc9040001c8000001
108a024000021c9c00020000c800000100000000000000000000000000000000
08060200fe0c1c9dff000001c800000108880540c9001c9dc9040001c8000001
0e80044055101c9dc9040003c9000001088a0540c9041c9dc9080001c8000001
0e820440c9041c9f55140001c908000102820540c9001c9dc9040001c8000001
02000300ff141c9d00020000c800000151ec3db8000000000000000000000000
02063a00ff141c9dc8000001c80000018e021704c8011c9dc8000001c8003fe1
0e800240c8041c9dc8020001c800000100000000000000000000000000000000
1084034055103c9fc8020001c800000100000000000000000000000000003f80
02020200fe0c1c9dff100001c800000110060300c9141c9d00020000c8000001
eb853f1100000000000000000000000004063a0000041c9cff040001c8000001
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
02023a00540c1c9dff040001c80000010802090001041c9c00020000c8000001
0000000000000000000000000000000008060200000c1c9cc8040001c8000001
02020800aa0c1c9cc8040001c800000108841b40ff081c9dc8000001c8000001
04860240ff001c9dff100001c8000001108c0a4055141c9d00020000c8000001
000000000000000000000000000000001082044055103c9d00020000aa020000
6000bc9920003d9800000000000000000286044055103c9dff04000100020000
4000be5900000000000000000000000008000900ab0c1c9caa020000c8000001
000000000000000000000000000000001084044055103c9d010c000000020000
00003fc900000000000000000000000002860a4055101c9daa020000c8000001
000000000000000000000000000000000282030054001c9d00020000c8000001
51ec3db800000000000000000000000010800900c9001c9daa020000c8000001
0000000000000000000000000000000004863a40ff081c9d55080001c8000001
08840440c9143c9d00020000aa0200006000bc9920003d980000000000000000
1084090055101c9d00020000c800000100000000000000000000000000000000
028c0240c90c1c9dab0c1000c800000104860340c90c1c9d01180002c8000001
1e7e7d00c8001c9dc8000001c800000110880340c9081c9f00020000c8000001
00003f800000000000000000000000001084034055143c9f00020000c8000001
00003f80000000000000000000000000048c1b40ff081c9dc8000001c8000001
028c044055143c9d55080001000200004000be59000000000000000000000000
028c044055143c9dc91800010002000000003fc9000000000000000000000000
08841d00ff101c9dc8000001c8000001028c3a40c9181c9dab180000c8000001
10840240c9181c9d01181000c8000001048c0440010c1c9c00020000c90c0001
00004049000000000000000000000000028c0340c9181c9dff080003c8000001
088c0200c9081c9d00020000c800000100000000000000000000000000000000
04821c4055181c9dc8000001c8000001028c0440ff181c9d00020000c9180001
00004049000000000000000000000000108c0840ab181c9c01180000c8000001
04020400c9041c9d00020002c904000100000000000000000000000000000000
04028300c8041c9d00020000c800000100000000000000000000000000000000
088c2340ff181c9dc8000001c800000104020900c8041c9d00020000c8000001
000000000000000000000000000000000802080000041c9caa020000c8000001
0000000000003f80000000000000000004040200c8041c9d54040001c8000001
02842240ff181c9dc8000001c8000001108c3a4055181c9dc9080001c8000001
02860940ab181c9cc9180001c8000001028c2340c90c1c9dc8000001c8000001
02840200aa081c9c54080001c800000110003a00c9141c9dfe0c5001c8000001
0e800240c9001c9dff000001c800000102823a40c9081c9dc9040001c8000001
02820240c9041c9dc8080001c80000011088024001181c9cc9180001c8000001
02040200540c1c9dff100001c80000011004040000081c9cc8020001c8000003
00000000000000000000000066663ee60e82024001041c9cc8020001c8000001
0000000000000000000000000000000010800300c8081c9d00020000c8000001
00003f800000000000000000000000000e800240c9001c9dff000001c8000001
1080014000021c9cc8000001c800000100000000000000000000000000000000
0e800440c9041c9dc8020001c900000100000000000000000000000000000000
0e810240fe041c9dc9001001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 2
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_SpecularMap] 2D 3
SetTexture 3 [_LightTexture0] 2D 0
// 105 instructions, 4 temp regs, 0 temp arrays:
// ALU 72 float, 0 int, 2 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedhjjkejpmkegnfbofblkjdmdmchocnpdoabaaaaaafeaoaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcemanaaaaeaaaaaaafdadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaa
akiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
alaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaa
aaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaadaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegbabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaa
aaaaaaaaaaaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Vector 3 [cSpecular]
Float 4 [roughnessV]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"ps_3_0
; 161 ALU, 6 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c8, 0.00000000, 1.00000000, 0.50000000, 0.56999999
def c9, 2.00000000, -1.00000000, 0.09000000, -0.21215820
def c10, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c11, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c12, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
dcl_texcoord4 v4
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c9.x, c9.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c8.y
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c10.x, c10
mad_pp r0.y, r0, r0.x, c9.w
add_pp r0.z, -r0.x, c8.y
mad_pp r0.y, r0, r0.x, c10.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c8
mad_pp r3.x, r0.w, c10, c10.y
mad_pp r3.x, r3, r0.w, c9.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c8, c8.y
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c9.x, r0.y
mad_pp r0.z, r0.x, c10.w, r0
mad_pp r0.w, r3.x, r0, c10.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c8.x, c8.y
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c9.x, r3.x
mad_pp r0.x, r0.w, c10.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c11.x, c11
frc_pp r0.y, r0
mad_pp r3.y, r0, c11.z, c11.w
mad_pp r3.x, r0, c11, c11.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c11, c11.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c7.x, c7.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c9.z
rcp r0.x, r2.w
max r0.y, r0, c8.x
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c12.x
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c9.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c8
min r2.z, r0.y, c8.y
add_pp r0.y, -r0.x, c8
pow_pp r1, r0.y, c6.x
mul_pp r0.x, c4, c4
mul_pp r1.y, r2.x, r0.x
mov r0.y, c5.x
mov_pp r0.z, r1.x
add r0.y, c8, -r0
mad_sat r0.y, r0, r0.z, c5.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c12.y
max r0.y, r0, c8.x
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c9.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c12.z, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c12.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
mul_pp r0.z, r2.x, r2.y
add r0.x, r0.w, c8.w
max_pp r0.z, r0, c8.x
add r0.z, r0, c9
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c3
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c8.z, r2.w
add r0.w, r0.x, c8.y
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c2
mul_pp r1.xyz, r1, c1
max r1.w, r2.x, c8.x
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, r1.w
mad_pp r2.xyz, r0, r0.w, r1
texldp r0.x, v4, s6
rcp r0.y, v4.w
mad r0.y, -v4.z, r0, r0.x
rcp r0.x, v3.w
mad r1.xy, v3, r0.x, c8.z
mov r0.z, c0.x
cmp r0.z, r0.y, c8.y, r0
dp3 r0.x, v3, v3
texld r0.w, r1, s4
cmp r0.y, -v3.z, c8.x, c8
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s5
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.xyz, r0.x, r2
mul_pp oC0.xyz, r0, c9.x
mov_pp oC0.w, c8.x
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Vector 2 [_Color]
Vector 1 [_LightColor0]
Vector 0 [_LightShadowData]
Vector 3 [cSpecular]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
Float 4 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
SetTexture 3 [_MainTex] 2D
SetTexture 4 [_BumpMap] 2D
SetTexture 5 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 93.33 (70 instructions), vertex: 0, texture: 24,
//   sequencer: 30, interpolator: 20;    14 GPRs, 12 threads,
// Performance (if enough threads): ~93 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaackeaaaaaehmaaaaaaaaaaaaaaceaaaaaceiaaaaachaaaaaaaaa
aaaaaaaaaaaaaccaaaaaaabmaaaaacbdppppadaaaaaaaaaoaaaaaabmaaaaaaaa
aaaaacamaaaaabdeaaadaaaeaaabaaaaaaaaabeaaaaaaaaaaaaaabfaaaacaaac
aaabaaaaaaaaabfiaaaaaaaaaaaaabgiaaacaaabaaabaaaaaaaaabfiaaaaaaaa
aaaaabhfaaacaaaaaaabaaaaaaaaabfiaaaaaaaaaaaaabigaaadaaabaaabaaaa
aaaaabeaaaaaaaaaaaaaabjfaaadaaacaaabaaaaaaaaabeaaaaaaaaaaaaaabkf
aaadaaadaaabaaaaaaaaabeaaaaaaaaaaaaaabkoaaadaaaaaaabaaaaaaaaabea
aaaaaaaaaaaaabmaaaadaaafaaabaaaaaaaaabeaaaaaaaaaaaaaabmnaaacaaad
aaabaaaaaaaaabfiaaaaaaaaaaaaabnhaaacaaafaaabaaaaaaaaaboaaaaaaaaa
aaaaabpaaaacaaagaaabaaaaaaaaaboaaaaaaaaaaaaaabphaaacaaahaaabaaaa
aaaaaboaaaaaaaaaaaaaacabaaacaaaeaaabaaaaaaaaaboaaaaaaaaafpechfgn
haengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaakl
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgj
ghgihefdgigbgegphheegbhegbaafpemgjghgihefegfhihehfhcgfdaaafpemgj
ghgihefegfhihehfhcgfecdaaafpengbgjgofegfhiaafpfdgigbgegphhengbha
fegfhihehfhcgfaafpfdhagfgdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagg
hcgfecgjgbhdaaklaaaaaaadaaabaaabaaabaaaaaaaaaaaagghcgffagphhaagp
hcgfgoeogbhjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodacodc
dadddfddcodaaaklaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaaca
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaadpmbaaaanaaaaaaaaae
aaaaaaaaaaaaeikfaabpaabpaaaaaaabaaaapafaaaaahbfbaaaahcfcaaaapdfd
aaaapefeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalmjjgodaeamjapnl
maaaaaaadpiaaaaalofjdeiedpmjankemaejapnleaaaaaaalpiaaaaaeaiaaaaa
eaejapnldpbbolifdnlifbomdnjibgchdpaaaaaadpaaaaaadoogggggdplikkdl
doccpjidaaajgaaigaaobcaabcaaaaaaaaaagabegabkbcaabcaaafeaaaafcaca
aaaabcaameaaaaaaaaaagaccgacibcaabcaaaaaaaaaagacogadebcaabcaaaaaa
aaaagadkgaeabcaabcaaaaaaaaaagaeggaembcaabcaaaaaaaaaacafcaaaaccaa
aaaaaaaadieafaabbpbpppnjaaaaeaaamiaiaaabaaloloaapaacacaamiadaaag
aagngmlbilafpnpnfiieabaaaaloloblpaababibfieoaaanaablpmmgobabacia
miabaaanaegngngmnbagagpmaibhacabaamgmagmobaaabagaiieabaaaalololb
paababagfiebaaaiaagmblmgoaacabiaemeoaaaiaapmmgblobabaaadkaipagab
aaaaaagmoaaianinfiemagafaamgkmgmobaaadibmiaoaaakaapmagaaobagagaa
miabaaahaamdmdaapaakanaamiaeaaaaaagmgmaakcahplaaembeacaaaemggmbl
kaaapmaeeaehaaacaagmlomgobacaeiakibiaeacaaloloecnaadadagdiecahah
aamdmdgmpaakaiaemiadaaafaalalbaakbihplaamiapaaalaakkmlaakaafpoaa
pmcifaebbpbppodpaaaaeaaababigbgbbpbpphppaaaaeaaabafieaabbpbppodl
aaaaeaaabadiaaabbpbppeehaaaaeaaageaiaaebbpbppppiaaaaeaaamiabaaaa
aagmgmaaofacaaaamiacaaafaagmgmgmioaaaapmmiabaaaaaamdmdaapaababaa
mjaiaaacaamdmdaapaakanaamjaeaaamaamdmdaapaakaiaamiahaaajaebfgmbf
olakahanaacbamakaegmgmmgcaafpmamfibbaaabaalbblgmobamaciamiaoaaaa
aaabpmaakbaaacaamiahaaacaabfmaaakbaaabaamiahaaaaaabfgmaaobabaaaa
ajbbamaaaamdlogmnaanaaaeemipamacaaaamggmobacamaaaieoaaabaakgmggm
mbamamahlailafaaaamimlecmbabampolacbaeafaalbgmicidaapmpomjaiaaae
aagmmggmmlakahafmiahaaaiaebflbbfolakahaiembfalagaelagmblkaihpmaf
kabbakafaagmgmgmodafaaigkacdakagaelalamgofahahigemcdalaaaalabllb
kbakplaemiamaaakaaagkmlbmlalihpmmiamaaalaaagkmmgmlakihpmbeapaaah
aamakkgmmbaaalaeamcmaaakaakmblmgiaahpnpnkiidaiagaabklaebmbakagae
miadaaagaabklalaolalakagbebcaaaaaalologbpaajaiagemieaaaaaagmlbbl
odagagaalmbhagaiabmpbkebibaapppmaicjagaaaalcgmlbkaaippabcmbeabaa
aalbgmgmkcaaplaacmcdabaaaagpgnblobaiagaamiadaaabaalamgblilabplpm
dicgaaagaabglmlbkbahppaaembcaaaeaelbgmgmkaagpmaacaibaaaaaalbgmmg
obaaaaadbebcaaaaaagmgmblobaaaeaclabcaaaaaalbgmiambaaafpoemcbaaag
aalbblgmobaaaeaamebhaaadaabebfgmobagaaabmaboafaaaagmpmgmkbadadab
embmafabaapbomgmobadafaamabjaaaeaamhgnlbobabafabbeaoaaaaaaabmgbl
obaaaeaeamehaeabaabfmagmkbaaabaamiadaaaaaalameaaoaaeaeaamiahaaab
aamalbmaolacaaabmiahmaaaaamagmaaobabaaaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Vector 3 [cSpecular]
Float 4 [roughnessV]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"sce_fp_rsx // 170 instructions using 5 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840005000000
[Offsets]
8
_LightShadowData 1 0
000006e0
_LightColor0 2 0
00000a6000000500
_Color 1 0
00000290
cSpecular 1 0
000009c0
roughnessV 1 0
00000320
freBias 2 0
00000820000007d0
frePow 1 0
00000780
orenNayar 1 0
000002c0
[Microcode]
2720
940417005c011c9dc8000001c8003fe106900440ce081c9d00020000aa020000
000040000000bf8000000000000000001602180dc8011c9dc8000001c8003fe1
08060500a6041c9dc8020001c800000100013f7f00013b7f0001377f00000000
fe020100c8011c9dc8000001c8003fe102920240ab201c9cab200000c8000001
10900d0054041c9d00020000c800000100000000000000000000000000000000
18043a0080041c9cfe040001c8000001060403005c081c9d00020000c8000001
00003f000000000000000000000000001086044001201c9e0120000001240002
10001708c8081c9dc8000001c8000001ae003940c8011c9dc8000029c800bfe1
04020500c8041c9dc8040001c80000010e923940c8001c9dc8000029c8000001
10800340c90c1c9d00020000c800000100003f80000000000000000000000000
08903b40ff003c9dff000001c800000110880240c9201c9dc8000001c8000001
ce8c3940c8011c9dc8000029c800bfe10e000340c9181c9dc9240001c8000001
0e903940c9201c9dc8000029c800000110908540c9201c9dc9240001c8000001
108c0540c9181c9dc9200001c800000104860540c9201c9dc9240001c8000001
92021706c8011c9dc8000001c8003fe10e803940c8001c9dc8000029c8000001
02868540c9181c9dc9000001c800000110000100c9201c9dc8001001c8000001
10928540c9181c9dc9200001c800000110040200c8001c9dc9240001c8000001
1e7e7d00c8001c9dc8000001c800000106060100c80c1c9dc8000001c8000001
0e800440ff181c9dc9200003c91800010e8c0440c9201c9fab0c0000c9240001
02900540c9001c9dc9180001c80000018e001704c8011c9dc8000001c8003fe1
0e880240c8001c9dc8020001c800000100000000000000000000000000000000
10000200c8001c9dc9200001c80000011080024000021c9c00020000c8000001
0000000000000000000000000000000008800240ff201c9dff240001c8000001
10080300c9001c9d00020000c800000151ec3db8000000000000000000000000
10063a00c8081c9dc90c0001c8000001088c024000021c9c00020000c8000001
0000000000000000000000000000000008900240ff201c9dc9180001c8000001
18040101c8011c9dc8000001c8003fe10200170aaa041c9cc8000001c8000001
02820240ff101c9dc8000001c800000102063a0054081c9dfe080001c8000001
037e4a00540c1c9dc80c0001c800000110880340c9183c9f00020000c8000001
00003f800000000000000000000000001004090055001c9d00020000c8000001
0000000000000000000000000000000006060100c80c1c9dc8000001c8000001
028a0300fe081c9d00020000c800000151ec3db8000000000000000000000000
108a0440c9183c9daa02000054020001000000006000bc9920003d9800000000
08083a00fe001c9dc90c0001c800000102003a00ff001c9dfe100001c8000001
1000090001201c9c00020000c800000100000000000000000000000000000000
02000200c8001c9dfe000001c800000102081d00ff201c9dc8002001c8000001
10920240c9201c9d55200001c800000102060800fe0c1c9d54100001c8000001
08061c00c8101c9dc8000001c800000102920240ff201c9dff200001c8000001
02081a00ff241c9dc8000001c80000010402020055181c9d540c2001c8000001
02080400c9241c9dc8100001c81000030e880240c9101c9dc8020001c8000001
00000000000000000000000000000000088c1b40ff101c9dc8000001c8000001
10880a40c9181c9d00020000c800000100000000000000000000000000000000
02860440ff183c9dff140001000200004000be59000000000000000000000000
028e0440ff183c9dc90c00010002000000003fc9000000000000000000000000
1006020000101c9caa020000c800000100000000aa3a3fb80000000000000000
048a3a40011c1c9c55180001c8000001028e0900ff181c9d00020000c8000001
0000000000000000000000000000000004061c00fe0c1c9dc8000001c8000001
04023a00c80c1c9daa040000c8000001108a0340011c1c9e00020000c8000001
00003f8000000000000000000000000002861d00ff141c9dc8000001c8000001
088a0440ab0c3c9c00020000aa0200006000bc9920003d980000000000000000
108a0240c9101c9dab141000c8000001088a0440ab0c3c9cc914000100020000
4000be59000000000000000000000000048a0340c9141c9dff140003c8000001
108a0340ab0c3c9e00020000c800000100003f80000000000000000000000000
08801b40ff141c9dc8000001c800000104820440c90c3c9d5514000100020000
00003fc90000000000000000000000001082014000021c9cc8000001c8000001
0000000000000000000000000000000002080200aa041c9cfe040001c8000001
108c0a40ab0c1c9c00020000c800000100000000000000000000000000000000
08843a40ab041c9c55000001c800000110840240c9181c9d55081001c8000001
028e0440ff101c9d00020000ab14000000004049000000000000000000000000
048a034055081c9dff080003c800000110880200010c1c9c00020000c8000001
0000000000000000000000000000000010881c40ff101c9dc8000001c8000001
048a0440ff181c9d00020000c914000100004049000000000000000000000000
04020400ff101c9d00020002ff10000100000000000000000000000000000000
10880840011c1c9cab140000c800000110020300c9001c9daa020000c8000001
00000000eb853f11000000000000000004028300c8041c9d00020000c8000001
0000000000000000000000000000000006020100c8041c9dc8000001c8000001
088c2340ff101c9dc8000001c800000104020900c8041c9d00020000c8000001
0000000000000000000000000000000008020800000c1c9c00020000c8000001
00003f80000000000000000000000000068a0100c9141c9dc8000001c8000001
10040200aa041c9c54040001c800000102860940c91c1c9dab140000c8000001
08020100c8041c9dc8000001c800000108842340c90c1c9dc8000001c8000001
02900200fe081c9dc8100001c8000001028a3a40c9201c9dc9140001c8000001
1082014000020008c8000001c800000100003f80000000000000000000000000
10882240ff101c9dc8000001c800000110843a4055181c9dff100001c8000001
068a0100c9141c9dc8000001c80000011084024055081c9dc9080001c8000001
028a0240c9141c9dc8040001c800000102000200c8001c9dff080001c8000001
10043a00c9001c9dfe045001c80000011004040000001c9cc8020001c8080003
00000000000000000000000066663ee60e80024001141c9cc8020001c8000001
0000000000000000000000000000000010880900c9201c9d00020000c8000001
000000000000000000000000000000000e840240c9101c9dff100001c8000001
1e7e7d00c8001c9dc8000001c800000110800300c8081c9d00020000c8000001
00003f800000000000000000000000000e840240c9081c9dff000001c8000001
1080024001041c9cc9040001c80000010e800440c9001c9dc8020001c9080001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
1081014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityShadows" 1
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_LightTextureB0] 2D 2
SetTexture 5 [_ShadowMapTexture] 2D 0
// 117 instructions, 4 temp regs, 0 temp arrays:
// ALU 80 float, 0 int, 3 uint
// TEX 6 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedpcbfoojbpajgakcfjfggjjmcelppklpdabaaaaaadibaaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbiapaaaa
eaaaaaaamgadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaabjaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaa
gcbaaaadpcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
efaaaaajpcaabaaaaaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpdcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaa
bkaabaaaaaaaaaaadkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaa
acaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaadaaaaaabaaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaa
jgahbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaa
agaabaaaadaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaaaaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaa
akaabaaaadaaaaaaabeaaaaaaaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaa
acaaaaaabkaabaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaa
bkaabaaaaaaaaaaaenaaaaagccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaa
enaaaaahbcaabaaaabaaaaaabcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaa
aaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaa
akiacaaaaaaaaaaaalaaaaaaakiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaa
abaaaaaaagiacaaaaaaaaaaaalaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaa
ifolbbdpomfblidnaaaaaaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaa
aaaaaaaaegaabaaaabaaaaaadcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaa
acaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaa
jgahbaaaaaaaaaaajgahbaaaaaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaa
bacaaaahccaabaaaaaaaaaaajgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaa
abaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaa
diaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaa
bjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaa
aaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaabaaaaaackiacaaaaaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaa
aaaaaaaaakaaaaaaakiacaaaaaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaa
dkaabaaaaaaaaaaabkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiaeadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaaaoaaaaakicaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpdkaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
ckaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agijcaaaaaaaaaaaajaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaa
fgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaahaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaa
pgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaadbaaaaahicaabaaaaaaaaaaa
abeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaagaabaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaa
abaaaaaaaoaaaaahhcaabaaaabaaaaaaegbcbaaaafaaaaaapgbpbaaaafaaaaaa
efaaaaajpcaabaaaacaaaaaaegaabaaaabaaaaaaeghobaaaafaaaaaaaagabaaa
aaaaaaaadbaaaaahbcaabaaaabaaaaaaakaabaaaacaaaaaackaabaaaabaaaaaa
dhaaaaakbcaabaaaabaaaaaaakaabaaaabaaaaaaakiacaaaabaaaaaabiaaaaaa
abeaaaaaaaaaiadpapaaaaahicaabaaaaaaaaaaapgapbaaaaaaaaaaaagaabaaa
abaaaaaadiaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
dgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" }
"!!GLES"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Vector 3 [cSpecular]
Float 4 [roughnessV]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"ps_3_0
; 160 ALU, 6 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c8, 0.00000000, 1.00000000, 0.50000000, 0.56999999
def c9, 2.00000000, -1.00000000, 0.09000000, -0.21215820
def c10, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c11, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c12, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
dcl_texcoord4 v4
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c9.x, c9.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c8.y
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c10.x, c10
mad_pp r0.y, r0, r0.x, c9.w
add_pp r0.z, -r0.x, c8.y
mad_pp r0.y, r0, r0.x, c10.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c8
mad_pp r3.x, r0.w, c10, c10.y
mad_pp r3.x, r3, r0.w, c9.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c8, c8.y
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c9.x, r0.y
mad_pp r0.z, r0.x, c10.w, r0
mad_pp r0.w, r3.x, r0, c10.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c8.x, c8.y
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c9.x, r3.x
mad_pp r0.x, r0.w, c10.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c11.x, c11
frc_pp r0.y, r0
mad_pp r3.y, r0, c11.z, c11.w
mad_pp r3.x, r0, c11, c11.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c11, c11.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c7.x, c7.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c9.z
rcp r0.x, r2.w
max r0.y, r0, c8.x
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c12.x
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c9.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c8
min r2.z, r0.y, c8.y
add_pp r0.y, -r0.x, c8
pow_pp r1, r0.y, c6.x
mul_pp r0.x, c4, c4
mul_pp r1.y, r2.x, r0.x
mov r0.y, c5.x
mov_pp r0.z, r1.x
add r0.y, c8, -r0
mad_sat r0.y, r0, r0.z, c5.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c12.y
max r0.y, r0, c8.x
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c9.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c12.z, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c12.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
mul_pp r0.z, r2.x, r2.y
add r0.x, r0.w, c8.w
max_pp r0.z, r0, c8.x
add r0.z, r0, c9
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c3
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c8.z, r2.w
add r0.w, r0.x, c8.y
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c2
mul_pp r1.xyz, r1, c1
max r1.w, r2.x, c8.x
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, r1.w
mad_pp r2.xyz, r0, r0.w, r1
mov r0.x, c0
rcp r0.y, v3.w
mad r1.xy, v3, r0.y, c8.z
add r0.z, c8.y, -r0.x
texldp r0.x, v4, s6
mad r0.z, r0.x, r0, c0.x
dp3 r0.x, v3, v3
texld r0.w, r1, s4
cmp r0.y, -v3.z, c8.x, c8
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s5
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.xyz, r0.x, r2
mul_pp oC0.xyz, r0, c9.x
mov_pp oC0.w, c8.x
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_Color]
Vector 3 [cSpecular]
Float 4 [roughnessV]
Float 5 [freBias]
Float 6 [frePow]
Float 7 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"sce_fp_rsx // 161 instructions using 4 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840004000000
[Offsets]
8
_LightShadowData 2 0
0000090000000190
_LightColor0 2 0
000009c0000000a0
_Color 1 0
00000060
cSpecular 1 0
000009a0
roughnessV 1 0
00000430
freBias 2 0
000007a000000780
frePow 1 0
000006e0
orenNayar 1 0
00000120
[Microcode]
2576
940017005c011c9dc8000001c8003fe1068e0440ce001c9d00020000aa020000
000040000000bf8000000000000000008e021704c8011c9dc8000001c8003fe1
ae003940c8011c9dc8000029c800bfe10e840240c8041c9dc8020001c8000001
000000000000000000000000000000000e8c3940c8001c9dc8000029c8000001
108c0240ab1c1c9cab1c0000c80000010e840240c9081c9dc8020001c8000001
00000000000000000000000000000000fe040100c8011c9dc8000001c8003fe1
04000500c8081c9dc8080001c800000118003a0080081c9cfe080001c8000001
02800440c91c1c9fc91c0001ff18000318000300c8001c9daa020000c8000001
0000000000003f0000000000000000000488024000021c9c00020000c8000001
00000000000000000000000000000000100017085c001c9dc8000001c8000001
ce863940c8011c9dc8000029c800bfe11084034001001c9c00020000c8000001
00003f800000000000000000000000000200180dc8011c9dc8000001c8003fe1
1004040000001c9c000200020000000000000000000000000000000000000000
108c0d0054081c9d00020000c800000100000000000000000000000000000000
088e3b40ff083c9dff080001c800000110820240c9181c9dc8000001c8000001
0e8e3940c91c1c9dc8000029c800000110848540c91c1c9dc9180001c8000001
02888540c90c1c9dc91c0001c8000001108e0540c91c1c9dc9180001c8000001
10880240c9081c9d01100000c800000110860540c90c1c9dc91c0001c8000001
0e820440ff0c1c9dc91c0003c90c00010e8e0440c91c1c9fff1c0001c9180001
08880540c9041c9dc91c0001c80000010200170aaa001c9cc8000001c8000001
0e060340c90c1c9dc9180001c80000010e823940c80c1c9dc8000029c8000001
028a0900ff0c1c9d00020000c800000100000000000000000000000000000000
088c8540c90c1c9dc9040001c8000001108c0240c9041c9d00000000c8000001
088e0a40ff1c1c9d00020000c800000100000000000000000000000000000000
028e0340ff1c3c9faa020000c80000010000000000003f800000000000000000
02060100ff081c9dc8001001c800000108860440ff1c3c9d00020000aa020000
6000bc9920003d98000000000000000008020200000c1c9c01100000c8000001
02060200c80c1c9dff080001c8000001048e034001141c9e00020000c8000001
00003f8000000000000000000000000008040300ab101c9caa020000c8000001
0000000051ec3db80000000000000000048e1d00ab1c1c9cc8000001c8000001
10003a00000c1c9c55180001c800000102003a0054041c9d55180001c8000001
02000800c8001c9dfe000001c800000108021d00ff081c9dc8002001c8000001
02880440ff1c3c9d550c0001aa020000000000004000be590000000000000000
0886024000021c9c00020000c800000100000000000000000000000000000000
02880440ff1c3c9dc91000010002000000003fc9000000000000000000000000
1000090055101c9d00020000c800000100000000000000000000000000000000
04003a00c9101c9d54080001c8000001108e0240c9081c9d550c0001c8000001
08000200aa001c9cfe000001c8000001028c0240ff081c9dff1c0001c8000001
088c1b40c91c1c9dc8000001c8000001108e0a40c90c1c9d00020000c8000001
0000000000000000000000000000000004001a00c9181c9dc8000001c8000001
028a0240ff081c9dff080001c80000010400040001141c9cc8000001c8000003
10001c0054041c9dc8000001c800000102860340ff0c3c9f00020000c8000001
00003f8000000000000000000000000010840900c9081c9daa020000c8000001
0000000000000000000000000000000002060200550c1c9dfe002001c8000001
08860440ff0c3c9d00020000aa0200006000bc9920003d980000000000000000
028e0440ff0c3c9d550c0001000200004000be59000000000000000000000000
04861b40c90c1c9dc8000001c800000102860440ff0c3c9dc91c000100020000
00003fc90000000000000000000000001002080000001c9caa020000c8000001
0000000000003f800000000000000000028e3a40c90c1c9dab0c0000c8000001
10000200aa001c9c00020000c8000001aa3a3fb8000000000000000000000000
04001c00fe001c9dc8000001c800000102063a00aa001c9cc80c0001c8000001
02860240ff1c1c9dc91c1001c80000011e7e7d00c8001c9dc8000001c8000001
08040300ab101c9c00020000c8000001eb853f11000000000000000000000000
92001706c8011c9dc8000001c8003fe104000200000c1c9cfe000001c8000001
028c3a40c9101c9d55180001c800000110820200ab1c1c9c00020000c8000001
00000000000000000000000000000000028e0340c91c1c9dc90c0003c8000001
048c1c40ff041c9dc8000001c8000001108e0440c91c1c9d00020000011c0000
00004049000000000000000000000000028e0240551c1c9dc9181001c8000001
028c0340c9181c9dc91c0003c8000001028e0440551c1c9daa020000c9180001
0000000000004049000000000000000010000400ab181c9c00020002ab180000
0000000000000000000000000000000010008300c8001c9d00020000c8000001
0000000000000000000000000000000002060900fe001c9d00020000c8000001
00000000000000000000000000000000088c0840ff1c1c9d011c0000c8000001
0486224055181c9dc8000001c800000110000200000c1c9cc8040001c8000001
02880940ff1c1c9dc91c0001c800000102882340c9101c9dc8000001c8000001
1e7e7d00c8001c9dc8000001c800000102060900ff101c9d00020000c8000001
0000000000000000000000000000000010023a00ab101c9c54085001c8000001
048e234055181c9dc8000001c800000102860300c80c1c9d00020000c8000001
51ec3db800000000000000000000000010883a40ab1c1c9cab0c0000c8000001
04860200fe001c9dc8000001c80000011e7e7d00c8001c9dc8000001c8000001
1080024001101c9cc9100001c800000108000100c8001c9dc8000001c8000001
0404020054001c9dff000001c800000110800300c8081c9d00020000c8000001
0000000000000000000000000000000002863a40ab0c1c9cc90c0001c8000001
10020400aa081c9c00020000c804000366663ee6000000000000000000000000
02860240c90c1c9dc8000001c80000010e800240c9081c9dff080001c8000001
10820300c8041c9d00020000c800000100003f80000000000000000000000000
0e800240c9001c9dff040001c80000010e880240010c1c9cc8020001c8000001
000000000000000000000000000000000e800440c9101c9dc8020001c9000001
0000000000000000000000000000000010800240c9181c9dc9000001c8000001
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityShadows" 1
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_LightTextureB0] 2D 2
SetTexture 5 [_ShadowMapTexture] 2D 0
// 117 instructions, 4 temp regs, 0 temp arrays:
// ALU 80 float, 0 int, 3 uint
// TEX 5 (0 load, 1 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedjicoffkhabpfanglmenbgaoiciaabpnbabaaaaaaeibaaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcciapaaaa
eaaaaaaamkadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaabjaaaaaafkaiaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaa
gcbaaaadpcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
efaaaaajpcaabaaaaaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpdcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaa
bkaabaaaaaaaaaaadkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaa
acaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaadaaaaaabaaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaa
jgahbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaa
agaabaaaadaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaaaaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaa
akaabaaaadaaaaaaabeaaaaaaaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaa
acaaaaaabkaabaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaa
bkaabaaaaaaaaaaaenaaaaagccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaa
enaaaaahbcaabaaaabaaaaaabcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaa
aaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaa
akiacaaaaaaaaaaaalaaaaaaakiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaa
abaaaaaaagiacaaaaaaaaaaaalaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaa
ifolbbdpomfblidnaaaaaaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaa
aaaaaaaaegaabaaaabaaaaaadcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaa
acaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaa
jgahbaaaaaaaaaaajgahbaaaaaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaa
bacaaaahccaabaaaaaaaaaaajgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaa
abaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaa
diaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaa
bjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaa
aaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
akaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaabaaaaaackiacaaaaaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaa
aaaaaaaaakaaaaaaakiacaaaaaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaa
dkaabaaaaaaaaaaabkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiaeadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaaaoaaaaakicaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpdkaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
ckaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agijcaaaaaaaaaaaajaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaa
fgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaahaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaa
pgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaadbaaaaahicaabaaaaaaaaaaa
abeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaagaabaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaa
abaaaaaaaoaaaaahhcaabaaaabaaaaaaegbcbaaaafaaaaaapgbpbaaaafaaaaaa
ehaaaaalbcaabaaaabaaaaaaegaabaaaabaaaaaaaghabaaaafaaaaaaaagabaaa
aaaaaaaackaabaaaabaaaaaaaaaaaaajccaabaaaabaaaaaaakiacaiaebaaaaaa
abaaaaaabiaaaaaaabeaaaaaaaaaiadpdcaaaaakbcaabaaaabaaaaaaakaabaaa
abaaaaaabkaabaaaabaaaaaaakiacaaaabaaaaaabiaaaaaaapaaaaahicaabaaa
aaaaaaaapgapbaaaaaaaaaaaagaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] 2D
"ps_3_0
; 147 ALU, 4 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r2.xyz, r0.w, r0
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
dp3_pp r0.w, r2, r1
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
mul_pp r3.xyz, r0.y, v2
dp3_pp r1.w, r2, r3
mad_pp r4.xyz, -r2, r0.w, r1
mad_pp r0.xyz, -r2, r1.w, r3
dp3_pp r0.x, r0, r4
abs_pp r0.y, r0.w
add_pp r2.w, -r0.y, c8.z
mad_pp r0.z, r0.y, c9.x, c9.y
mad_pp r0.z, r0, r0.y, c8.w
mad_pp r0.y, r0.z, r0, c9.z
rsq_pp r2.w, r2.w
rcp_pp r2.w, r2.w
mul_pp r0.y, r0, r2.w
abs_pp r2.w, r1
cmp_pp r0.z, r0.w, c8.y, c8
mul_pp r4.x, r0.z, r0.y
mad_pp r4.x, -r4, c7, r0.y
add_pp r3.w, -r2, c8.z
mad_pp r0.w, r2, c9.x, c9.y
mad_pp r0.w, r0, r2, c8
rsq_pp r3.w, r3.w
mad_pp r0.w, r0, r2, c9.z
rcp_pp r3.w, r3.w
mul_pp r2.w, r0, r3
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.w, r0, r2
mad_pp r0.y, -r3.w, c7.x, r2.w
mad_pp r4.y, r0.w, c9.w, r0
mad_pp r4.x, r0.z, c9.w, r4
min_pp r0.y, r4, r4.x
mad_pp r0.z, r0.y, c10.x, c10.y
mul_pp r2.w, c6.x, c6.x
frc_pp r0.z, r0
add r0.y, r2.w, c8.x
rcp r0.y, r0.y
mad_pp r4.z, r0, c10, c10.w
max r0.x, r0, c7.z
mul r0.y, r2.w, r0
mul r3.w, r0.y, r0.x
sincos_pp r0.xy, r4.z
max_pp r0.z, r4.y, r4.x
add_pp r4.xyz, r1, r3
dp3_pp_sat r1.x, r2, r1
rcp_pp r0.w, r0.x
mad_pp r0.z, r0, c10.x, c10.y
frc_pp r0.x, r0.z
dp3_pp_sat r1.y, r2, r3
mul_pp r5.x, r0.y, r0.w
mad_pp r4.w, r0.x, c10.z, c10
sincos_pp r0.xy, r4.w
dp3_pp r0.x, r4, r4
mul_pp r0.w, r0.y, r5.x
mul r0.w, r3, r0
rsq_pp r0.x, r0.x
mul_pp r0.xyz, r0.x, r4
dp3_pp_sat r0.x, r3, r0
rcp r0.z, r0.x
mul r0.y, r1.x, c7.x
mul r0.x, r0.y, r1.y
mul r2.x, r0, r0.z
max_pp r0.x, r1.w, c7.z
mul r0.y, r1.x, r0
add_pp r1.z, -r0.x, c8
mul r1.w, r0.z, r0.y
mul r3.w, r0, c11.x
pow_pp r0, r1.z, c5.x
min r0.y, r2.x, r1.w
min r0.z, r0.y, c8
mov_pp r0.y, r0.x
mov r0.x, c4
add r0.x, c8.z, -r0
mad_sat r0.x, r0, r0.y, c4
mul_pp r1.z, c3.x, c3.x
max r0.x, r0, c7.z
mul_pp r0.y, r1.x, r1.z
mul r1.w, r0.x, r0.z
mul_pp r0.x, r1, r0.y
rcp r2.x, r0.x
pow_pp r0, r1.x, c11.y
mul_pp r0.y, r1.x, r1.x
mul_pp r1.y, r1.x, r1
add r0.y, r0, c7
mul r2.y, r0, r2.x
mov_pp r2.x, r0
pow r0, c11.z, r2.y
mul r0.y, r1.z, r2.x
mov r0.z, r0.x
mul r0.y, r0, c11
rcp r0.y, r0.y
texld r0.xw, v0, s3
mul r0.y, r0, r0.z
mul r0.y, r0, r0.w
max_pp r0.w, r1.y, c7.z
mul r0.z, r1.w, r0.y
add r0.w, r0, c8.x
rcp_pp r0.w, r0.w
mul_pp r0.z, r0, r0.w
mul_pp r2.xyz, r0.z, c2
mul_pp r2.xyz, r2, r0.x
add r0.y, r2.w, c7.w
rcp r0.y, r0.y
mul r0.y, r2.w, r0
mad r0.y, -r0, c10, r3.w
add r0.w, r0.y, c8.z
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
max r1.x, r1, c7.z
mul_pp r0.xyz, r0, c0
mul_pp r0.xyz, r0, r1.x
mul_pp r2.xyz, r2, c0
mad_pp r1.xyz, r0, r0.w, r2
texldp r0.x, v3, s4
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_MainTex] 2D
SetTexture 2 [_BumpMap] 2D
SetTexture 3 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 81.33 (61 instructions), vertex: 0, texture: 16,
//   sequencer: 24, interpolator: 16;    12 GPRs, 15 threads,
// Performance (if enough threads): ~81 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacdeaaaaadoaaaaaaaaaaaaaaaceaaaaabnmaaaaacaeaaaaaaaa
aaaaaaaaaaaaableaaaaaabmaaaaabkhppppadaaaaaaaaalaaaaaabmaaaaaaaa
aaaaabkaaaaaaapiaaadaaacaaabaaaaaaaaabaeaaaaaaaaaaaaabbeaaacaaab
aaabaaaaaaaaabbmaaaaaaaaaaaaabcmaaacaaaaaaabaaaaaaaaabbmaaaaaaaa
aaaaabdjaaadaaabaaabaaaaaaaaabaeaaaaaaaaaaaaabecaaadaaaaaaabaaaa
aaaaabaeaaaaaaaaaaaaabfeaaadaaadaaabaaaaaaaaabaeaaaaaaaaaaaaabgb
aaacaaacaaabaaaaaaaaabbmaaaaaaaaaaaaabglaaacaaaeaaabaaaaaaaaabhe
aaaaaaaaaaaaabieaaacaaafaaabaaaaaaaaabheaaaaaaaaaaaaabilaaacaaag
aaabaaaaaaaaabheaaaaaaaaaaaaabjfaaacaaadaaabaaaaaaaaabheaaaaaaaa
fpechfgnhaengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgm
gphcaaklaaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcda
aafpengbgjgofegfhiaafpfdgigbgegphhengbhafegfhihehfhcgfaafpfdhagf
gdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphf
ghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaiaaaaaadgabaaaalaaaaaaaaaeaaaaaaaaaaaadiieaaapaaap
aaaaaaabaaaapafaaaaahbfbaaaahcfcaaaapdfdaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaalmjjgodamaejapnlaaaaaaaaaaaaaaaadnjibgchdpmjankedoccpjid
eamjapnleaejapnlaaaaaaaadpiaaaaamaaaaaaalpiaaaaadpbbolifdnlifbom
lofjdeiedplikkdldpaaaaaadoogggggeaiaaaaaaffagaagaaaabcaameaaaaaa
aaaagaamgabcbcaabcaaaaaaaaaagabigabobcaabcaaaaaaaaaagacegackbcaa
bcaaaaaaaaaagadagadgbcaabcaaaaaaaaaagadmfaecbcaaccaaaaaaemiiacab
aaloloblpaababadmiadaaadaabllaaaobacadaabaaieagbbpbpppmhaaaaeaaa
badifaabbpbppgdpaaaaeaaababidaabbpbppoecaaaaeaaadicieaabbpbppopj
aaaaeaaamiaeaaaaaegmmgaacaaepnaamiaiaaaaaaloloaapaacacaaaiecahaa
aagmblgmabadppagfibdaaahaagogobloaaeaeibkiioahajaagmpmebmbaaabad
aibpaiabaaieeagmiaahpoadmiabaaalaegpgpmgnbababpnfiidaaaaaabibibl
obababiaaaboajalaablpmgbobaaacaakabpaaacaaaaaagmoaajalilficiaaaa
aamdmdgmpaacacicfiidaaakaabilbblobabaaiabeahaaacaabfbllbobacaaaa
aneiakadaamdlogmpaalacaaknciaaacaalomdebpaakalabknbeaaaiaalomdic
paakajabkmicaaagaalomdmapaakajabkibbacagaalomdebnaakalaamianaaae
aepagmafolakagalmiahaaadaemalbbfolakagajkiccacaiaamgmgiamaaiaiaa
kiebacakaalbblmdmbaiacaaemipaiacaaaamgblobacaiadbeboaaakaapmmgbl
obaiaiaclabbabajacblmgmaiaakpnpoaiieaeagaamploblpaaeadakembkaeaj
aagglblbkcagpnabmiadaaaaaalagmgmiligplpmemejaeadaelamgmgkaigpnab
kabgafabaelmlmgmofagagidkachafadaagfbkblobakaiidmiadaaaaaalalabl
mlaaigpomiagaaagaalmlmlbmlaaigpmembbaiaaaeblmggmkaajpnadeacoaaai
aaagamgmobahaeiakiibabaaaalbmgebidadpnafbebgahahaalmblgmkbafpnaa
dielajaaaamamablkbaippabemilabadaaboloblobaaajaidjbiaeagaagmgmlb
kaadaeadbeibahagaagmblmgobaeabadbiinabaeaapakpglobagafahembbabah
aagmblgmobaeababmiahaaagaagfbflmmlahagpnmiahaaadaalomaaaobagabaa
miahaaabaagmmaaakbadacaamiajaaaeaabkmfaaoaaeadaabibeaeaeaagmblgl
ocaeaeaemiafaaaeaamemglbilaepmppmiafaaaeaagoaaaaoiaeaaaamiadaaad
aagobllbilaepmplmeihababaamamggmobabafadmaehadabaamamagmkbabaaad
emieabadaablmgblobadadabmaibabadaamgbllbobadabadlibeaeaeaagmblmb
mbadabpnmiadaaaaaalalcaaoaaeaeaamiahaaabaamagmmaolacaaabmiahmaaa
aamalbaaobabaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] 2D
"sce_fp_rsx // 143 instructions using 4 registers
[Configuration]
24
ffffffff0003c020000ffff0000000000000840004000000
[Offsets]
7
_LightColor0 2 0
000008d000000210
_Color 1 0
000001c0
cSpecular 1 0
00000850
roughnessV 1 0
00000040
freBias 2 0
000006a000000650
frePow 1 0
00000610
orenNayar 1 0
00000570
[Microcode]
2288
940017005c011c9dc8000001c8003fe118820440ee001c9caa02000054020001
00000000000040000000bf80000000000486024000021c9c00020000c8000001
00000000000000000000000000000000ce883940c8011c9dc8000029c800bfe1
02800240ff041c9dff040001c8000001ae8a3940c8011c9dc8000029c800bfe1
1088044055041c9f55040001010000020e000340c9101c9dc9140001c8000001
92021706c8011c9dc8000001c8003fe10e803940c8001c9dc8000029c8000001
10800340c9101c9d00020000c800000100003f80000000000000000000000000
08848540c9101c9dc9000001c800000102823b40ff003c9dff000001c8000001
0e8c39401d041c9cc8000029c800000110848540c9101c9dc9180001c8000001
10880540c9101c9dc9180001c8000001108a0540c9181c9dc9140001c8000001
108c0440c9103c9d00020000aa0200006000bc9920003d980000000000000000
02868540c9181c9dc9140001c80000010e880440ff101c9dc9180003c9100001
18040100c8081c9dc8000001c80000018e001704c8011c9dc8000001c8003fe1
0e8a0440c9181c9fff140001c91400010e800240c8001c9dc8020001c8000001
00000000000000000000000000000000028e0240c90c1c9dc90c0001c8000001
10800540c9101c9dc9140001c800000110820240010c1c9cab0c0000c8000001
0e800240c9001c9dc8020001c800000100000000000000000000000000000000
028a0240c90c1c9dff040001c800000110820240010c1c9cc9080001c8000001
02040900ff041c9d00020000c800000100000000000000000000000000000000
10000100010c1c9cc8001001c8000001e2061808c8011c9dc8000001c8003fe1
088a030000081c9c00020000c800000151ec3db8000000000000000000000000
02041a00c9141c9dc8000001c800000108880440ff103c9dff18000100020000
4000be5900000000000000000000000008880440ff103c9dc910000100020000
00003fc900000000000000000000000002040400c91c1c9dc8080001c8080003
028e0900ff101c9d00020000c800000100000000000000000000000000000000
08041d00c90c1c9dc8002001c8000001028e0340c91c1c9f00020000c8000001
00003f8000000000000000000000000008000200fe001c9dff080001c8000001
10000200c8001c9d010c0000c800000102860900c90c1c9d00020000c8000001
0000000000000000000000000000000010063a00c8001c9d55080001c8000001
04063a0054001c9d55080001c800000104060800c80c1c9dfe0c0001c8000001
08041c0054081c9dc8000001c800000102820340ff103c9f00020000c8000001
00003f8000000000000000000000000008020100c8041c9dc8000001c8000001
04020200c90c1c9d54082001c80000011000020000081c9c00020000c8000001
aa3a3fb8000000000000000000000000048e1b40c9041c9dc8000001c8000001
02880440ff143c9d00020000aa0200006000bc9920003d980000000000000000
10880a40c9101c9d00020000c800000100000000000000000000000000000000
048a0440ff143c9d01100000aa020000000000004000be590000000000000000
04863a4055101c9dab1c0000c800000108880240ff101c9dab0c1000c8000001
028a0340ab0c1c9c55100003c800000110880100c9101c9dc8000001c8000001
08001c00fe001c9dc8000001c8000001028a0440ff101c9d00020000c9140001
0000404900000000000000000000000002043a0054001c9daa040000c8000001
10880440c9143c9dab1400000002000000003fc9000000000000000000000000
04020800c80c1c9daa020000c80000010000000000003f800000000000000000
0486024000021c9c00020000c800000100000000000000000000000000000000
048a0a40ff141c9d00020000c800000100000000000000000000000000000000
108a0340c9143c9faa020000c80000010000000000003f800000000000000000
02040200c8081c9dfe040001c8000001048e1b40ff141c9dc8000001c8000001
088c1d00c91c1c9dc8000001c8000001028e3a40ff101c9dab1c0000c8000001
1088020055181c9d00020000c800000100000000000000000000000000000000
10881c40ff101c9dc8000001c8000001048e0240c9141c9d011c1000c8000001
10020400c9101c9d00020002c910000100000000000000000000000000000000
08880340011c1c9cab1c0002c8000001048a0440c9141c9daa02000055100001
0000000000004049000000000000000010028300c8041c9d00020000c8000001
0000000000000000000000000000000004040900fe041c9d00020000c8000001
00000000000000000000000000000000108a084001141c9cab140000c8000001
08000300ab0c1c9c00020000c800000151ec3db8000000000000000000000000
04040200c8081c9dc8040001c800000104023a00c90c1c9d54000001c8000001
10020900c9001c9d00020000c800000100000000000000000000000000000000
088c2340ff141c9dc8000001c800000104020200c8041c9dfe040001c8000001
10000300ab0c1c9c00020000c8000001eb853f11000000000000000000000000
02820940c9141c9dab140000c8000001108a2240ff141c9dc8000001c8000001
02880200aa081c9cc8080001c800000110803a4055181c9dff140001c8000001
04822340c9041c9dc8000001c800000102823a40c9101c9d55140001c8000001
10800240ab041c9cc9000001c800000102820240c9041c9dc8040001c8000001
02020200aa041c9cff000001c800000110003a00ab0c1c9cfe005001c8000001
1002040000041c9cc8020001c800000300000000000000000000000066663ee6
0e82024001041c9cc8020001c800000100000000000000000000000000000000
10800300c8041c9d00020000c800000100003f80000000000000000000000000
0e800240c9001c9d010c0000c80000010e800240c9001c9dff000001c8000001
1080014000021c9cc8000001c800000100000000000000000000000000000000
0e800440c9041c9dc8020001c900000100000000000000000000000000000000
0e810240000c1c9cc9001001c8000001
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 2
SetTexture 1 [_MainTex] 2D 1
SetTexture 2 [_SpecularMap] 2D 3
SetTexture 3 [_ShadowMapTexture] 2D 0
// 106 instructions, 4 temp regs, 0 temp arrays:
// ALU 73 float, 0 int, 2 uint
// TEX 4 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefieceddgmpekfnhomjngajldbihnbjaeefgihaabaaaaaahaaoaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcgianaaaaeaaaaaaafkadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadlcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaa
akiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
alaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaa
aaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaadaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaabaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaefaaaaaj
pcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaa
aaaaaaahicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] 2D
SetTexture 5 [_LightTexture0] 2D
"ps_3_0
; 148 ALU, 5 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c7, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c8, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c9, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c10, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c11, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xy
dcl_texcoord4 v4
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c7.x, c7.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c8
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
rsq_pp r0.w, r0.w
mul_pp r2.xyz, r0.w, r0
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
dp3_pp r0.w, r2, r1
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
mul_pp r3.xyz, r0.y, v2
dp3_pp r1.w, r2, r3
mad_pp r4.xyz, -r2, r0.w, r1
mad_pp r0.xyz, -r2, r1.w, r3
dp3_pp r0.x, r0, r4
abs_pp r0.y, r0.w
add_pp r2.w, -r0.y, c8.z
mad_pp r0.z, r0.y, c9.x, c9.y
mad_pp r0.z, r0, r0.y, c8.w
mad_pp r0.y, r0.z, r0, c9.z
rsq_pp r2.w, r2.w
rcp_pp r2.w, r2.w
mul_pp r0.y, r0, r2.w
abs_pp r2.w, r1
cmp_pp r0.z, r0.w, c8.y, c8
mul_pp r4.x, r0.z, r0.y
mad_pp r4.x, -r4, c7, r0.y
add_pp r3.w, -r2, c8.z
mad_pp r0.w, r2, c9.x, c9.y
mad_pp r0.w, r0, r2, c8
rsq_pp r3.w, r3.w
mad_pp r0.w, r0, r2, c9.z
rcp_pp r3.w, r3.w
mul_pp r2.w, r0, r3
cmp_pp r0.w, r1, c8.y, c8.z
mul_pp r3.w, r0, r2
mad_pp r0.y, -r3.w, c7.x, r2.w
mad_pp r4.y, r0.w, c9.w, r0
mad_pp r4.x, r0.z, c9.w, r4
min_pp r0.y, r4, r4.x
mad_pp r0.z, r0.y, c10.x, c10.y
mul_pp r2.w, c6.x, c6.x
frc_pp r0.z, r0
add r0.y, r2.w, c8.x
rcp r0.y, r0.y
mad_pp r4.z, r0, c10, c10.w
max r0.x, r0, c7.z
mul r0.y, r2.w, r0
mul r3.w, r0.y, r0.x
sincos_pp r0.xy, r4.z
max_pp r0.z, r4.y, r4.x
add_pp r4.xyz, r1, r3
dp3_pp_sat r1.x, r2, r1
rcp_pp r0.w, r0.x
mad_pp r0.z, r0, c10.x, c10.y
frc_pp r0.x, r0.z
dp3_pp_sat r1.y, r2, r3
mul_pp r5.x, r0.y, r0.w
mad_pp r4.w, r0.x, c10.z, c10
sincos_pp r0.xy, r4.w
dp3_pp r0.x, r4, r4
mul_pp r0.w, r0.y, r5.x
mul r0.w, r3, r0
rsq_pp r0.x, r0.x
mul_pp r0.xyz, r0.x, r4
dp3_pp_sat r0.x, r3, r0
rcp r0.z, r0.x
mul r0.y, r1.x, c7.x
mul r0.x, r0.y, r1.y
mul r2.x, r0, r0.z
max_pp r0.x, r1.w, c7.z
mul r0.y, r1.x, r0
add_pp r1.z, -r0.x, c8
mul r1.w, r0.z, r0.y
mul r3.w, r0, c11.x
pow_pp r0, r1.z, c5.x
min r0.y, r2.x, r1.w
min r0.z, r0.y, c8
mov_pp r0.y, r0.x
mov r0.x, c4
add r0.x, c8.z, -r0
mad_sat r0.x, r0, r0.y, c4
mul_pp r1.z, c3.x, c3.x
max r0.x, r0, c7.z
mul_pp r0.y, r1.x, r1.z
mul r1.w, r0.x, r0.z
mul_pp r0.x, r1, r0.y
rcp r2.x, r0.x
pow_pp r0, r1.x, c11.y
mul_pp r0.y, r1.x, r1.x
mul_pp r1.y, r1.x, r1
add r0.y, r0, c7
mul r2.y, r0, r2.x
mov_pp r2.x, r0
pow r0, c11.z, r2.y
mul r0.y, r1.z, r2.x
mov r0.z, r0.x
mul r0.y, r0, c11
rcp r0.y, r0.y
texld r0.xw, v0, s3
mul r0.y, r0, r0.z
mul r0.y, r0, r0.w
max_pp r0.w, r1.y, c7.z
mul r0.z, r1.w, r0.y
add r0.w, r0, c8.x
rcp_pp r0.w, r0.w
mul_pp r0.z, r0, r0.w
mul_pp r2.xyz, r0.z, c2
mul_pp r2.xyz, r2, r0.x
add r0.y, r2.w, c7.w
rcp r0.y, r0.y
mul r0.y, r2.w, r0
mad r0.y, -r0, c10, r3.w
add r0.w, r0.y, c8.z
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c1
max r1.x, r1, c7.z
mul_pp r0.xyz, r0, c0
mul_pp r0.xyz, r0, r1.x
mul_pp r2.xyz, r2, c0
mad_pp r1.xyz, r0, r0.w, r2
texldp r0.x, v4, s4
texld r0.w, v3, s5
mul r0.x, r0.w, r0
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c7.x
mov_pp oC0.w, c7.z
"
}

SubProgram "xbox360 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 1 [_Color]
Vector 0 [_LightColor0]
Vector 2 [cSpecular]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
Float 3 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_BumpMap] 2D
SetTexture 4 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 82.67 (62 instructions), vertex: 0, texture: 20,
//   sequencer: 26, interpolator: 20;    13 GPRs, 12 threads,
// Performance (if enough threads): ~82 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacfmaaaaaeaeaaaaaaaaaaaaaaceaaaaacaaaaaaacciaaaaaaaa
aaaaaaaaaaaaabniaaaaaabmaaaaabmlppppadaaaaaaaaamaaaaaabmaaaaaaaa
aaaaabmeaaaaabamaaadaaadaaabaaaaaaaaabbiaaaaaaaaaaaaabciaaacaaab
aaabaaaaaaaaabdaaaaaaaaaaaaaabeaaaacaaaaaaabaaaaaaaaabdaaaaaaaaa
aaaaabenaaadaaabaaabaaaaaaaaabbiaaaaaaaaaaaaabfmaaadaaacaaabaaaa
aaaaabbiaaaaaaaaaaaaabgfaaadaaaaaaabaaaaaaaaabbiaaaaaaaaaaaaabhh
aaadaaaeaaabaaaaaaaaabbiaaaaaaaaaaaaabieaaacaaacaaabaaaaaaaaabda
aaaaaaaaaaaaabioaaacaaaeaaabaaaaaaaaabjiaaaaaaaaaaaaabkiaaacaaaf
aaabaaaaaaaaabjiaaaaaaaaaaaaabkpaaacaaagaaabaaaaaaaaabjiaaaaaaaa
aaaaabljaaacaaadaaabaaaaaaaaabjiaaaaaaaafpechfgnhaengbhaaaklklkl
aaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaae
aaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefegfhihehf
hcgfdaaafpengbgjgofegfhiaafpfdgigbgegphhengbhafegfhihehfhcgfaafp
fdhagfgdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklkl
aaaaaaadaaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhc
aahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaakl
aaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaiaaaaaadiebaaaamaaaaaaaaaeaaaaaaaaaaaaeakf
aabpaabpaaaaaaabaaaapafaaaaahbfbaaaahcfcaaaaddfdaaaapefeaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalmjjgodaaaaaaaaaaaaaaaaadplikkdl
dnjibgcheamjapnlmaaaaaaamaejapnldpiaaaaadpmjankedoccpjiddpaaaaaa
dooggggglofjdeieeaejapnllpiaaaaadpbbolifdnlifbomeaiaaaaaaffagaah
baanbcaabcaaaaabaaaaaaaagaaomeaabcaaaaaaaaaagabegabkbcaabcaaaaaa
aaaagacagacgbcaabcaaaaaaaaaagacmgadcbcaabcaaaaaaaaaagadigadobcaa
bcaaaaaaaaaagaeeaaaaccaaaaaaaaaaemiiabacaaloloblpaababaemiamaaad
aablkmaaobabaeaabaeieaabbpbppomhaaaaeaaabacigaabbpbppoiiaaaaeaaa
babifagbbpbppoppaaaaeaaaliaidagbbpbppppiaaaaeaaadididaabbpbppomp
aaaaeaaamiaiaaabaaloloaapaacacaafielaaaaaagcgcbloaadadicaieoaaaj
aamgpmgmmbaaabagfibpabadaamapmblkaaappibmiabaaamaegngnlbnbadadpn
emboafamaagmpmmgobabacademcdafabaalalablobadadadaablajaaaabgmagb
obaaafabkaepaaabaaaaaagmoaajamimfibmacafaakmkmgmkbaapoibmiaeaaak
aagmmgaaobacaaaaaiboagacaapmpmgmibagabadbeahaaalabbfmagmibacaaae
aeieakaaaamdmdlbnaababpnfiedaaakaalagmmgobadaciabeahaaabaabfmggm
mbabaaadanceaaagaalomdblnaakajppkiibahadaalomdebnaakamadmiahaaai
aemagmbfolakadamaacbagaaaagmgmmgkcadplagljeiaaalaalomdianaakampn
bfabaaabaamdlolbpaamabagamcpabacaaaamgblobalagalemiiagadaablmggm
kaacppabeacnaaabaakomgmgobagagialmbcafadablomdianaakajpnkieladag
aamjmlebmbabagafdieeadaaaalblbmgkdagpnadmjabaaaeaablmggmmlakadae
aiciafaeaamggmgmodaaagabmiahaaagaemalbbfolakadajmiadaaabaalalblb
ilidplpmemedaaaaaelalbblkaidpnagkabbaaahaamggmgmkbaapmiamiadaaab
aalalamgmlabidpomiagaaahaalmlmmgmlabidpnkacdaaabaabilalbobahafia
dibeahaaaalologmpaaiagabemeiaaahaamggmlbkcaaplabkibhafagaamaloaa
mbahaapmkicbafabaagmmgabmbagaepmbeagaaabaelmlmgmofadadabamehaaad
aalimjblobafahaemiabaaahaamggmaaobaaaeaaembgabahaammblblkaadpoad
miahaaabaamnmnaaobahabaamiadaaagaamfmeaaoaagabaabebiaeaeaagmlbgb
odagagagmiajaaaeaabiblgmilaepnpomiajaaaeaabiaaaaoiaeaaaamiadaaaa
aabimggmilaepmpnmebeabaaaemglblbkaafpnaamaboadabaalbpmlbkbabacaa
embbabadaalbgmgmobadadabmabbaeabaagmgmgmobadabaamiapaaabaaaalaaa
obabaeaamiaeaaaaaamggmaaoaaaabaamiahaaabaabfmaaakbabaaaamiahaaaa
aamamgmaolacaaabmiahmaaaaablmaaaobaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
"
}

SubProgram "ps3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
Vector 0 [_LightColor0]
Vector 1 [_Color]
Vector 2 [cSpecular]
Float 3 [roughnessV]
Float 4 [freBias]
Float 5 [frePow]
Float 6 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] 2D
SetTexture 5 [_LightTexture0] 2D
"sce_fp_rsx // 144 instructions using 4 registers
[Configuration]
24
ffffffff0007c020001fffe8000000000000840004000000
[Offsets]
7
_LightColor0 2 0
000008c0000007a0
_Color 1 0
00000090
cSpecular 1 0
00000850
roughnessV 1 0
00000110
freBias 2 0
0000069000000630
frePow 1 0
000005e0
orenNayar 1 0
00000460
[Microcode]
2304
940017005c011c9dc8000001c8003fe106880440ce001c9d00020000aa020000
000040000000bf8000000000000000008e001704c8011c9dc8000001c8003fe1
ce843940c8011c9dc8000029c800bfe108820240ab101c9cab100000c8000001
92061706c8011c9dc8000001c8003fe11088044001101c9e0110000055040003
0e8a0240c8001c9dc8020001c800000100000000000000000000000000000000
f000170ac8011c9dc8000001c8003fe1ae863940c8011c9dc8000029c800bfe1
02800340ff101c9d00020000c800000100003f80000000000000000000000000
08883b4001003c9cc9000001c80000010e000340c9081c9dc90c0001c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
0e803940c8001c9dc8000029c800000110868540c9081c9dc9000001c8000001
0e803940c9101c9dc8000029c800000110848540c9001c9dc90c0001c8000001
02820540c9001c9dc90c0001c800000110808540c9081c9dc9000001c8000001
08061d00ff081c9dc8002001c800000104820540c9081c9dc9000001c8000001
0e840440ab041c9cc9000003c90800010e860440c9001c9f01040000c90c0001
02800240ff081c9dff000001c80000011e7e7d00c8001c9dc8000001c8000001
108a034001043c9e00020000c800000100003f80000000000000000000000000
02040900c9001c9daa020000c800000100000000000000000000000000000000
08880540c9081c9dc90c0001c800000108841b40ff141c9dc8000001c8000001
02000100ff081c9dc8001001c800000102020200c8001c9dff000001c8000001
0886044001043c9c00020000aa0200006000bc9920003d980000000000000000
02000200c8001c9dff080001c800000102860300c8081c9d00020000c8000001
51ec3db800000000000000000000000002043a00c8041c9dff0c0001c8000001
108a0240c9081c9dc9100001c800000102840240ff081c9dff140001c8000001
02021a00c9081c9dc8000001c80000010486044001043c9c550c000100020000
4000be590000000000000000000000000886044001043c9cab0c000000020000
00003fc900000000000000000000000002820a40c9041c9daa020000c8000001
0000000000000000000000000000000004063a0000001c9cff0c0001c8000001
10860240c9081c9dc9080001c80000010406080000081c9cc80c0001c8000001
02000400ff0c1c9dc8040001c804000310863a40550c1c9d55080001c8000001
02021c00540c1c9dc8000001c80000010486024001041c9cff0c1001c8000001
0400020000001c9c00020000c8000001aa3a3fb8000000000000000000000000
08840340ab043c9eaa020000c80000010000000000003f800000000000000000
04001c00aa001c9cc8000001c800000102020200ff101c9dc8042001c8000001
04881b4055081c9dc8000001c80000010404090055101c9d00020000c8000001
00000000000000000000000000000000028e024000021c9c00020000c8000001
0000000000000000000000000000000002023a00aa001c9cc8040001c8000001
10800900ab041c9c00020000c800000100000000000000000000000000000000
10800340c9001c9f00020000c800000100003f80000000000000000000000000
08800340ff0c1c9dab0c0002c800000102020200c8041c9dfe0c0001c8000001
10060300011c1c9c00020000c800000151ec3db8000000000000000000000000
10860440ab043c9c00020000aa0200006000bc9920003d980000000000000000
048e044001041c9c540200015500000100000000000000000000404900000000
02880440ab043c9cff0c0001000200004000be59000000000000000000000000
02880440ab043c9cc91000010002000000003fc9000000000000000000000000
04861d00ff001c9dc8000001c800000110800a40ab041c9c00020000c8000001
0000000000000000000000000000000008843a4001101c9cab100000c8000001
10860240c9001c9d55081001c800000104860200c90c1c9d00020000c8000001
0000000000000000000000000000000002001809c8011c9dc8000001c8003fe1
0482034055081c9dff0c0003c800000108841c40ab0c1c9cc8000001c8000001
1002040055081c9d000200025508000100000000000000000000000000000000
04860440ff001c9daa020000c904000100000000000040490000000000000000
02040800aa0c1c9caa020000c80000010000000000003f800000000000000000
10028300c8041c9d00020000c800000100000000000000000000000000000000
02820940ab0c1c9cab1c0000c800000104060900fe041c9d00020000c8000001
0000000000000000000000000000000008802340c9041c9dc8000001c8000001
10023a00011c1c9cfe0c0001c800000108840840ab0c1c9cab1c0000c8000001
02040200aa0c1c9cc8080001c8000001108a234055081c9dc8000001c8000001
04060300011c1c9c00020000c8000001eb853f11000000000000000000000000
10060200c8041c9daa080000c800000102840200c8081c9dc8040001c8000001
02883a40c9081c9dc90c0001c800000110880900c9081c9d00020000c8000001
000000000000000000000000000000000e8a0240c9141c9dc8020001c8000001
000000000000000000000000000000000888224055081c9dc8000001c8000001
10803a40c9141c9d55100001c800000106040100c8081c9dc8000001c8000001
1080024055001c9dc9000001c800000102880240c9101c9dc80c0001c8000001
02060200fe0c1c9dff000001c800000110023a00011c1c9caa0c5000c8000001
10060400000c1c9cc8020001c804000300000000000000000000000066663ee6
0e84024001101c9cc8020001c800000100000000000000000000000000000000
10840300c80c1c9d00020000c800000100003f80000000000000000000000000
0e860240c9141c9dff100001c80000010e860240c90c1c9dff080001c8000001
10800200c8001c9d00000000c80000010e800440c9081c9dc8020001c90c0001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
1081014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
ConstBuffer "$Globals" 288 // 244 used size, 16 vars
Vector 16 [_LightColor0] 4
Vector 176 [_Color] 4
Vector 208 [cSpecular] 4
Float 224 [roughnessV]
Float 232 [freBias]
Float 236 [frePow]
Float 240 [orenNayar]
BindCB "$Globals" 0
SetTexture 0 [_BumpMap] 2D 3
SetTexture 1 [_MainTex] 2D 2
SetTexture 2 [_SpecularMap] 2D 4
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_ShadowMapTexture] 2D 0
// 107 instructions, 4 temp regs, 0 temp arrays:
// ALU 73 float, 0 int, 2 uint
// TEX 5 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedlaaebekfeghadkcmmpkjjhoomkdbipfbabaaaaaaneaoaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcleanaaaa
eaaaaaaagnadaaaafjaaaaaeegiocaaaaaaaaaaabaaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaagcbaaaadlcbabaaaafaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaapaaaaaa
akiacaaaaaaaaaaaapaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
apaaaaaaagiacaaaaaaaaaaaapaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaaoaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaaoaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaaoaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaaoaaaaaaakiacaaa
aaaaaaaaaoaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaanaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaalaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaafaaaaaapgbpbaaaafaaaaaaefaaaaaj
pcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaa
efaaaaajpcaabaaaacaaaaaaegbabaaaaeaaaaaaeghobaaaadaaaaaaaagabaaa
abaaaaaaapaaaaahicaabaaaaaaaaaaapgapbaaaacaaaaaaagaabaaaabaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTexture0] 2D
"ps_3_0
; 160 ALU, 5 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
def c9, 1.00000000, 0.00392157, 0.00001538, 0.00000001
def c10, 0.97000003, 2.00000000, -1.00000000, 0.00000000
def c11, 0.56999999, 0.09000000, 0.00000000, 1.00000000
def c12, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c13, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c14, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c10.y, c10.z
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c9.x
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c12.x, c12
mad_pp r0.y, r0, r0.x, c12.z
add_pp r0.z, -r0.x, c9.x
mad_pp r0.y, r0, r0.x, c12.w
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c9.x
mad_pp r3.x, r0.w, c12, c12.y
mad_pp r3.x, r3, r0.w, c12.z
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c11.z, c11.w
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c10.y, r0.y
mad_pp r0.z, r0.x, c13.x, r0
mad_pp r0.w, r3.x, r0, c12
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c11.z, c11
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c10, r3.x
mad_pp r0.x, r0.w, c13, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c13, c13.z
frc_pp r0.y, r0
mad_pp r3.y, r0, c14.x, c14
mad_pp r3.x, r0, c13.y, c13.z
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c14.x, c14.y
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c8.x, c8.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c11.y
rcp r0.x, r2.w
max r0.y, r0, c10.w
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c13
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c10.y
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c10.w
min r2.z, r0.y, c9.x
add_pp r0.y, -r0.x, c9.x
pow_pp r1, r0.y, c7.x
mul_pp r0.x, c5, c5
mul_pp r1.y, r2.x, r0.x
mov r0.y, c6.x
mov_pp r0.z, r1.x
add r0.y, c9.x, -r0
mad_sat r0.y, r0, r0.z, c6.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c14.z
max r0.y, r0, c10.w
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c10
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c14.w, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c14.z
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
mul_pp r0.z, r2.x, r2.y
add r0.x, r0.w, c11
max_pp r0.z, r0, c10.w
add r0.z, r0, c11.y
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c4
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c13.z, r2.w
add r0.w, r0.x, c9.x
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c3
mul_pp r0.xyz, r0, c2
max r1.w, r2.x, c10
mul_pp r2.xyz, r0, r1.w
dp3 r0.x, v4, v4
rsq r1.w, r0.x
mul_pp r1.xyz, r1, c2
mad_pp r1.xyz, r2, r0.w, r1
texld r0, v4, s4
dp4 r0.y, r0, c9
rcp r1.w, r1.w
mul r0.x, r1.w, c0.w
mad r0.y, -r0.x, c10.x, r0
mov r0.z, c1.x
dp3 r0.x, v3, v3
cmp r0.y, r0, c9.x, r0.z
texld r0.x, r0.x, s5
mul r0.x, r0, r0.y
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c10.y
mov_pp oC0.w, c10
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 3 [_Color]
Vector 2 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 4 [cSpecular]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
Float 5 [roughnessV]
SetTexture 0 [_ShadowMapTexture] CUBE
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_BumpMap] 2D
SetTexture 4 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 104.00 (78 instructions), vertex: 0, texture: 20,
//   sequencer: 32, interpolator: 20;    11 GPRs, 15 threads,
// Performance (if enough threads): ~104 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacliaaaaaenaaaaaaaaaaaaaaaceaaaaacfmaaaaacieaaaaaaaa
aaaaaaaaaaaaacdeaaaaaabmaaaaacchppppadaaaaaaaaaoaaaaaabmaaaaaaaa
aaaaaccaaaaaabdeaaadaaadaaabaaaaaaaaabeaaaaaaaaaaaaaabfaaaacaaad
aaabaaaaaaaaabfiaaaaaaaaaaaaabgiaaacaaacaaabaaaaaaaaabfiaaaaaaaa
aaaaabhfaaacaaaaaaabaaaaaaaaabfiaaaaaaaaaaaaabijaaacaaabaaabaaaa
aaaaabfiaaaaaaaaaaaaabjkaaadaaabaaabaaaaaaaaabeaaaaaaaaaaaaaabkj
aaadaaacaaabaaaaaaaaabeaaaaaaaaaaaaaablcaaadaaaaaaabaaaaaaaaabme
aaaaaaaaaaaaabneaaadaaaeaaabaaaaaaaaabeaaaaaaaaaaaaaabobaaacaaae
aaabaaaaaaaaabfiaaaaaaaaaaaaabolaaacaaagaaabaaaaaaaaabpeaaaaaaaa
aaaaacaeaaacaaahaaabaaaaaaaaabpeaaaaaaaaaaaaacalaaacaaaiaaabaaaa
aaaaabpeaaaaaaaaaaaaacbfaaacaaafaaabaaaaaaaaabpeaaaaaaaafpechfgn
haengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaakl
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgj
ghgihefagphdgjhegjgpgofcgbgoghgfaafpemgjghgihefdgigbgegphheegbhe
gbaafpemgjghgihefegfhihehfhcgfdaaafpengbgjgofegfhiaafpfdgigbgegp
hhengbhafegfhihehfhcgfaaaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpfdhagf
gdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphf
ghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaiaaaaaaefabaaaakaaaaaaaaaeaaaaaaaaaaaaeakfaabpaabp
aaaaaaabaaaapafaaaaahbfbaaaahcfcaaaahdfdaaaahefeaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamaaaaaaadphifbom
maejapnlaaaaaaaalmjjgodaaaaaaaaadoccpjideamjapnldnjibgchlofjdeie
eaejapnldpmjankelpiaaaaadpbbolifdnlifbomdpmaaaaadplikkdldpaaaaaa
doogggggeaiaaaaadbnfpiimdhibabicdliaiaibdpiaaaaaafaagaaidaaobcaa
bcaaaabfaaaaaaaagabbmeaabcaaaaaaaaaagabhgabnbcaabcaaaaaaaaaagacd
gacjbcaabcaaaaaaaaaagacpgadfbcaabcaaaaaaaaaagadlgaebbcaabcaaaaaa
aaaagaehgaenbcaabcaaaaaaaaaagafdcafjbcaaccaaaaaamiaiaaabaaloloaa
paadadaamiapaaadaakgmnaapcaeaeaaemieacafaablblmgocadadidmiadaaaf
aagnblblmladacpnbaeidaabbpbpppniaaaaeaaapmbifacbbpbppbppaaaaeaaa
baciiaabbpbppeehaaaaeaaadidiaaabbpbppompaaaaeaaajaaijakbbpbppgii
aaaamaaamiabaaaaaaloloaapaaeaeaamiaiaaaaaaloloaapaababaafiiiaaab
aaloloblpaacaciamiahaaabaablmaaaobaaabaafiiiabaaaaloloblpaababib
fiihaaagaablmablobabaciabeahaaahaamablblmbabaaaaamihacacaamamalb
maahagpkkaciabaaaalologmpaacaciafibbabaaaahhaablkpajppiamiapaaae
aaaakmaaobacabaamiabaaaaaablgmaaofaeaaaamiabaaaaaagmgmblioaaabpp
aielababaagcgcgmmaaaaaaimiapaaaaaapoonaakaabpnaamiacaaacaelclcbl
nbaaaappbeafaaacaamfmfgmmbaaaaafamebacacaagmmgblmaacacpokacbacac
aagmlblboaacacicfibiacaeaamggmgmkbacaficbeaeaaajabgmlbgmmbacacag
aeidajajaamfgmblmbaaacppmjaiaaacaaloloaapaajagaamjaeaaaaaaloloaa
paajahaamiabaaaiaaloloaapaajagaamiahaaakaemagmmaolajaiagemccafaa
aamgmggmoaaaaaaaemebafafaalbblblobaaacaamiahaaacaabfmaaakbaiadaa
miahaaacaamamaaakbacacaamjaiaaaaaaloloaapaagaeaamiaoaaabaaagabaa
obabafaaaibbaaagaagmlbgmicaiplafemipaaacaaaamgblobacaaaamiaoaaaf
aapmmgaaobaaaaaamiahaaaaaagfbkaaobafaaaaembcabaeacblblgmkaafppaa
miaoaaagaapmpmaakbabpoaamiamaaadaeomblaakaagppaaeaciaaaaaalbblmg
kdaappidkibcaaaiaaloloebnaajahahdieeaiaaaablmggmodaaaaaamjacaaaa
aablmggmmlajaiagmiafaaaeaalagmgmiliiplpmmiahaaajaemalbmaolajaiah
miajaaaaaelablaakaiippaakabmahahaekmkmgmofaiaiiakacbahaaaalolobl
paakajiamiafaaaeaamelalbmlaeiipmmiadaaaiaamelablmlaeiipmmiafaaae
aalagmaakbahpkaamiamaaaiaaomkmmgmlaeaipmmiapaaahaaaaaaaaobaiahaa
miadaaahaalabkaaoaahahaabebeaeaeaagmlbgbodahahahmiafaaaeaamemglb
ilaeplpoaiifaaaeaameaabloiaeaaafmiadaaafaameblmgilaeplpkmebbaaae
aagmlblbkcaaplafmaedaeaeaaldlalbobagaeafembeaaaeaagmmggmobaeaeaa
mabeaaaeaamggmgmobaeaaafdiejadaaaamhgplbobaeaaaeembiaaaaaablblgm
oaadaaaamiabaaaaaamggmaaobadaaaabebeaaadaagmlbblobaaadaclabeaaaa
aamgmgmambadaapnembcaaaaaamglbgmobaaaaaamiabaaaaaalbgmaaobaaaaaa
miahaaaaaagmmaaakbaaaeaamiahaaaaaamagmaaobaaadaamiahaaaaaamamaaa
kbaaacaamiahaaaaaamablmaolacaaaamiahmaaaaablmaaaobabaaaaaaaaaaaa
aaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTexture0] 2D
"sce_fp_rsx // 163 instructions using 4 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840004000000
[Offsets]
9
_LightPositionRange 1 0
00000540
_LightShadowData 1 0
000004c0
_LightColor0 2 0
000009f0000006e0
_Color 1 0
00000520
cSpecular 1 0
00000980
roughnessV 1 0
00000040
freBias 2 0
0000039000000350
frePow 1 0
00000300
orenNayar 1 0
000006b0
[Microcode]
2608
940017005c011c9dc8000001c8003fe106840440ce001c9daa02000054020001
00000000000040000000bf80000000001086024000021c9c00020000c8000001
00000000000000000000000000000000ae883940c8011c9dc8000029c800bfe1
02800240ab081c9cab080000c80000011082044001081c9e0108000001000002
0e000101c8011c9dc8000001c8003fe108820340ff041c9d00020000c8000001
00003f800000000000000000000000000e883940c9101c9dc8000029c8000001
08040500c8001c9dc8000001c800000108843b40c9043c9d55040001c8000001
0e843940c9081c9dc8000029c800000110848540c9081c9dc9100001c8000001
ce863940c8011c9dc8000029c800bfe110800240c9081c9dc90c0001c8000001
02820240ff081c9dff080001c8000001028c0240ff081c9dff000001c8000001
10060100c9081c9dc8001001c800000110880540c90c1c9dc9080001c8000001
04061d00ff081c9dc8002001c800000102061a00c9181c9dc8000001c8000001
02800900ff101c9d00020000c800000100000000000000000000000000000000
04061c00aa0c1c9cc8000001c800000108041b0054081c9dc8000001c8000001
06040100c8081c9dc8000001c80000011080034001001c9e00020000c8000001
00003f800000000000000000000000000e800340c90c1c9dc9100001c8000001
0e803940c9001c9dc8000029c8000001028e1d00ff001c9dc8000001c8000001
02060400c9041c9dc80c0001c80c000310000200000c1c9c00020000c8000001
aa3a3fb800000000000000000000000006000100c8001c9dc8000001c8000001
048e8540c90c1c9dc9000001c800000104001c00fe001c9dc8000001c8000001
02000200ff0c1c9daa0c2000c800000110868540c90c1c9dc9080001c8000001
04063a00c8001c9dc8000001c800000102060200fe0c1c9dff080001c8000001
10060200c80c1c9dc90c0001c800000102003a00fe0c1c9dab1c0000c8000001
10003a00000c1c9cab1c0000c8000001028e0200c91c1c9d00020000c8000001
0000000000000000000000000000000092061706c8011c9dc8000001c8003fe1
0400080000001c9cfe000001c8000001048e1c40c91c1c9dc8000001c8000001
10000400ab1c1c9c00020002ab1c000000000000000000000000000000000000
02000200aa0c1c9cfe0c0001c8000001028e0240ff081c9dff0c0001c8000001
08008300fe001c9d00020000c800000100000000000000000000000000000000
0406090054001c9d00020000c800000100000000000000000000000000000000
10060800aa001c9caa020000c80000010000000000003f800000000000000000
04000200c80c1c9dfe0c0001c800000110000900011c1c9c00020000c8000001
0000000000000000000000000000000010860200aa001c9c00000000c8000001
ee000100c8011c9dc8000001c8003fe110840900c9081c9d00020000c8000001
0000000000000000000000000000000008820300fe001c9daa020000c8000001
0000000051ec3db8000000000000000010823a40c90c1c9d55040001c8000001
02000500c8001c9dc8000001c800000110860240c9041c9d000c0000c8000001
0206170a00001c9cc8000001c80000011006010000021c9cc8000001c8000001
000000000000000000000000000000001e001709c8011c9dc8000001c8003fe1
10040600c8001c9dc8020001c800000100003f8080813b8001823781f88c31d5
8e001704c8011c9dc8000001c8003fe10e800240c8001c9dc8020001c8000001
0000000000000000000000000000000008003a00fe021c9d54080001c8000001
0000000000000000000000000000000010820440c9103c9d00020000aa020000
6000bc9920003d98000000000000000008040200c8001c9dc8020001c8000001
000000000000000051ec3f7800000000117e4a00c8081c9d54080001c8000001
028a0540c9081c9dc9100001c80000010e820440ff101c9dc9080003c90c0001
1080044001143c9c00020000aa0200006000bc9920003d980000000000000000
048a034001143c9e00020000c800000100003f80000000000000000000000000
108a0a4001141c9caa020000c800000100000000000000000000000000000000
1006010000021fe8c8000001c800000100003f80000000000000000000000000
04861b40ab141c9cc8000001c800000102860440c9143c9dff00000100020000
4000be590000000000000000000000001080044001143c9c010c000000020000
00003fc90000000000000000000000000e840440c9081c9f01140000c9100001
028a024000021c9c00020000c800000100000000000000000000000000000000
10803a40c9001c9dab0c0000c80000010e860240c9001c9dc8020001c8000001
0000000000000000000000000000000004800340ff103c9f00020000c8000001
00003f8000000000000000000000000004881b40ab001c9cc8000001c8000001
02800440ff103c9dff040001000200004000be59000000000000000000000000
02880440ff103c9dc90000010002000000003fc9000000000000000000000000
10880a40c9101c9daa020000c800000100000000000000000000000000000000
02803a40c9101c9dab100000c800000110820240c9141c9dc9001001c8000001
04800240ff101c9d01001000c800000110800340c9001c9dc9040003c8000001
02880340c9001c9dab000002c800000104880440ff101c9d0002000001100000
0000404900000000000000000000000010880440c9141c9d00020000c9000001
0000404900000000000000000000000002880940ab101c9cff100001c8000001
1004030001141c9c00020000c8000001eb853f11000000000000000000000000
02882340c9101c9dc8000001c800000104880840c9101c9dff100001c8000001
02000300c9141c9d00020000c800000151ec3db8000000000000000000000000
18000100c8001c9dc8000001c800000108802340ab101c9cc8000001c8000001
10800540c9041c9dc9080001c80000011e7e7e00c8001c9dc8000001c8000001
10003a0001141c9cc8000001c800000102000900ff001c9d00020000c8000001
0000000000000000000000000000000010802240ab101c9cc8000001c8000001
02020200fe001c9dc8000001c800000108843a40c9001c9dff000001c8000001
02880240c9101c9d55080001c800000102000200c8041c9dc9100001c8000001
10003a0001141c9cfe085001c80000011000040000001c9cc8020001c8000003
00000000000000000000000066663ee60e800240ff0c1c9dc8020001c8000001
000000000000000000000000000000000e840240c90c1c9dff080001c8000001
10840300c8001c9d00020000c800000100003f80000000000000000000000000
0e840240c9081c9dff080001c800000110800200000c1c9cc80c0001c8000001
0e800440c9001c9dc8020001c908000100000000000000000000000000000000
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_CUBE" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
BindCB "UnityShadows" 2
SetTexture 0 [_BumpMap] 2D 3
SetTexture 1 [_MainTex] 2D 2
SetTexture 2 [_SpecularMap] 2D 4
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_ShadowMapTexture] CUBE 0
// 114 instructions, 4 temp regs, 0 temp arrays:
// ALU 79 float, 0 int, 2 uint
// TEX 5 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedkgellpemfoppcbmmhagmknoefackpipaabaaaaaammapaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefckmaoaaaa
eaaaaaaakladaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaaacaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaaeaahabaaaaeaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaa
akiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
alaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaa
aaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaafaaaaaaegbcbaaaafaaaaaaelaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkiacaaaabaaaaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaomfbhidpefaaaaajpcaabaaaabaaaaaaegbcbaaaafaaaaaa
eghobaaaaeaaaaaaaagabaaaaaaaaaaabbaaaaakbcaabaaaabaaaaaaegaobaaa
abaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbdbaaaaahicaabaaa
aaaaaaaaakaabaaaabaaaaaadkaabaaaaaaaaaaadhaaaaakicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakiacaaaacaaaaaabiaaaaaaabeaaaaaaaaaiadpbaaaaaah
bcaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaaagaabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaaapaaaaah
icaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaaaaaaaaadiaaaaahhccabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_LightTexture0] CUBE
"ps_3_0
; 161 ALU, 6 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_cube s6
def c9, 1.00000000, 0.00392157, 0.00001538, 0.00000001
def c10, 0.97000003, 2.00000000, -1.00000000, 0.00000000
def c11, 0.56999999, 0.09000000, 0.00000000, 1.00000000
def c12, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c13, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c14, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c10.y, c10.z
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c9.x
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c12.x, c12
mad_pp r0.y, r0, r0.x, c12.z
add_pp r0.z, -r0.x, c9.x
mad_pp r0.y, r0, r0.x, c12.w
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c9.x
mad_pp r3.x, r0.w, c12, c12.y
mad_pp r3.x, r3, r0.w, c12.z
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c11.z, c11.w
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c10.y, r0.y
mad_pp r0.z, r0.x, c13.x, r0
mad_pp r0.w, r3.x, r0, c12
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c11.z, c11
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c10, r3.x
mad_pp r0.x, r0.w, c13, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c13, c13.z
frc_pp r0.y, r0
mad_pp r3.y, r0, c14.x, c14
mad_pp r3.x, r0, c13.y, c13.z
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c14.x, c14.y
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c8.x, c8.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c11.y
rcp r0.x, r2.w
max r0.y, r0, c10.w
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c13
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c10.y
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c10.w
min r2.z, r0.y, c9.x
add_pp r0.y, -r0.x, c9.x
pow_pp r1, r0.y, c7.x
mul_pp r0.x, c5, c5
mul_pp r1.y, r2.x, r0.x
mov r0.y, c6.x
mov_pp r0.z, r1.x
add r0.y, c9.x, -r0
mad_sat r0.y, r0, r0.z, c6.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c14.z
max r0.y, r0, c10.w
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c10
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c14.w, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c14.z
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
add r0.x, r0.w, c11
mul_pp r0.z, r2.x, r2.y
max_pp r0.z, r0, c10.w
add r0.z, r0, c11.y
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c4
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c13.z, r2.w
add r0.w, r0.x, c9.x
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c3
max r1.w, r2.x, c10
mul_pp r0.xyz, r0, c2
mul_pp r0.xyz, r0, r1.w
mul_pp r1.xyz, r1, c2
mad_pp r1.xyz, r0, r0.w, r1
texld r0, v4, s4
dp4 r0.y, r0, c9
dp3 r1.w, v4, v4
rsq r1.w, r1.w
rcp r0.x, r1.w
mul r0.x, r0, c0.w
mad r0.x, -r0, c10, r0.y
mov r0.z, c1.x
cmp r0.y, r0.x, c9.x, r0.z
dp3 r0.x, v3, v3
texld r0.w, v3, s6
texld r0.x, r0.x, s5
mul r0.x, r0, r0.w
mul r0.x, r0, r0.y
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c10.y
mov_pp oC0.w, c10
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 3 [_Color]
Vector 2 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 4 [cSpecular]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
Float 5 [roughnessV]
SetTexture 0 [_ShadowMapTexture] CUBE
SetTexture 1 [_LightTexture0] CUBE
SetTexture 2 [_LightTextureB0] 2D
SetTexture 3 [_MainTex] 2D
SetTexture 4 [_BumpMap] 2D
SetTexture 5 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 98.67 (74 instructions), vertex: 0, texture: 24,
//   sequencer: 32, interpolator: 20;    14 GPRs, 12 threads,
// Performance (if enough threads): ~98 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacoaaaaaaekmaaaaaaaaaaaaaaceaaaaacieaaaaackmaaaaaaaa
aaaaaaaaaaaaacfmaaaaaabmaaaaacepppppadaaaaaaaaapaaaaaabmaaaaaaaa
aaaaaceiaaaaabeiaaadaaaeaaabaaaaaaaaabfeaaaaaaaaaaaaabgeaaacaaad
aaabaaaaaaaaabgmaaaaaaaaaaaaabhmaaacaaacaaabaaaaaaaaabgmaaaaaaaa
aaaaabijaaacaaaaaaabaaaaaaaaabgmaaaaaaaaaaaaabjnaaacaaabaaabaaaa
aaaaabgmaaaaaaaaaaaaabkoaaadaaabaaabaaaaaaaaabmaaaaaaaaaaaaaabna
aaadaaacaaabaaaaaaaaabfeaaaaaaaaaaaaaboaaaadaaadaaabaaaaaaaaabfe
aaaaaaaaaaaaabojaaadaaaaaaabaaaaaaaaabmaaaaaaaaaaaaaabplaaadaaaf
aaabaaaaaaaaabfeaaaaaaaaaaaaacaiaaacaaaeaaabaaaaaaaaabgmaaaaaaaa
aaaaacbcaaacaaagaaabaaaaaaaaacbmaaaaaaaaaaaaaccmaaacaaahaaabaaaa
aaaaacbmaaaaaaaaaaaaacddaaacaaaiaaabaaaaaaaaacbmaaaaaaaaaaaaacdn
aaacaaafaaabaaaaaaaaacbmaaaaaaaafpechfgnhaengbhaaaklklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaa
aaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefagphdgjhegjgpgofc
gbgoghgfaafpemgjghgihefdgigbgegphheegbhegbaafpemgjghgihefegfhihe
hfhcgfdaaaklklklaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpemgjghgihefegf
hihehfhcgfecdaaafpengbgjgofegfhiaafpfdgigbgegphhengbhafegfhihehf
hcgfaafpfdhagfgdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgb
hdaaklklaaaaaaadaaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeo
gbhjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaaecmbaaaanaaaaaaaaaeaaaaaaaa
aaaaeakfaabpaabpaaaaaaabaaaapafaaaaahbfbaaaahcfcaaaahdfdaaaahefe
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
maejapnleamjapnldphifbommaaaaaaalmjjgodadpmjankeeaaaaaaaaaaaaaaa
dnjibgchdpmaaaaaeaejapnllofjdeiedplikkdldoccpjidlpiaaaaaeaiaaaaa
dpbbolifdnlifbomdpaaaaaadoogggggdbnfpiimdhibabicdliaiaibdpiaaaaa
aaaagaaigaaobcaabcaaaffeaaabbabeaaaabcaameaaaaaaaaaagabfgablbcaa
bcaaaaaaaaaagacbgachbcaabcaaaaaaaaaagacngaddbcaabcaaaaaaaaaagadj
gadpbcaabcaaaaaaaaaagaefgaelbcaabcaaaaaaaaaagafbbafhbcaaccaaaaaa
miaiaaabaaloloaapaadadaamiapaaafaakgmnaapcaeaeaamiapaaadaakgmnaa
pcadadaaemieacagaablblmgocadadifemieaeahaablblmgocafafidmiadaaag
aagnbllbmladaepmmiadaaahaagnbllbmlafacpmbafidaabbpbpppniaaaaeaaa
pmciiacbbpbppbppaaaaeaaajabihambbpbpphppaaaamaaabadigaabbpbppoii
aaaaeaaadieiaaabbpbppghpaaaaeaaajaaifaobbpbppgiiaaaamaaamiaiaaad
aaloloaapaaeaeaamiabaaaaaaloloaapaababaabeacaaaaaaloloblnaacacaa
amecaiaeaahhaamgipafpppkmiadaaafaamhmgmgilaaplpnficnaaaeaapapalb
kbagadiafiboaaagaalbpmgmobaaaciamiabaaagaegngnblnbafafppaicoabaa
aagmpmgmobaaabafaibbabaaaamdmdlbpaaaaaaffibbaaanaalbgmgmoaababia
beaoaaanababgmgmmbaaaaagaeipalaaaaffffblmaanagppkaibafabaalologm
paaaaaigfibhabacaabemagmkbaeacibfiehafaaaamagmblobaaabiaaiboafak
aapmaggmmbafafafajibaaaaaamdlogmnaagaaaibfaiaaacaamdmdgmnaakagaf
anceaaafaamdmdblnaakanpnkibbakahaamdmdebnaakagafmiahaaalaebfgmbf
olakahaglabcaeafaamgmgedmaafafpolaicaeabaalbblidmbafacpoemipafac
aaaamggmobacafaabeenaaabaakomgblobafafaclmecadahabmdmdaanaakanpp
aiehahafaabfbhgmobabafabbebeagajaagmblmgkcahplafmiadaaaaaalagmgm
ilihplpmembdamabaelablgmkaihppaekaepagakaaaalcgmobakahibkaifagae
aelalalbofahahibmiadaaaaaalalablmlaaihpmmiamaaamaakmkmlbmlaaihpl
emcdamaaaabkblblkbagpkaebecpagabaadpffblmbaaamppbebhaaahacbfbfbl
oaanakabkibkajaaaambmgmaiaabpmpokmcdajaaaabjmeaambaaaepoemijabae
aemebllbkaajppafmiakaaaaaabgbglmolamagaabebbabaaaalolollpaalahaa
eaccaaabaalbblblodaaaaiekiieaaabaagmblebicaaplahkaehahalaalplabl
kbabpniddiidadaaaamfmgblkaalpoaaembdahabaagpmhgmobaladakdibdaiaa
aagnaalboiaaaaabmiajaaaaaalalbgmilaapkpkmeccaaabaalbmggmobajabaa
mbbeabadaagmgmgmkaabagaaemccahaiaalbgmlbobababaabicpaaabaaaaaagb
obaiahagbeaiaaadaalbgmgmodaaafabamccaeaaaamglblbofabaeadmiacaaaa
aalbgmblioaaabpplaeiaaadaalbblicmbaeadpoemeeaaadaablmgmgobadadaa
maibaaaaaamgmgblobadaaaamiagaaaeaallbbaaobabaaaamiahaaabaagmmaaa
kbaaaeaamiadaaaaaalalcaaoaaeaeaamiahaaabaamagmaaobabadaamiahaaab
aamamaaakbabacaamiahaaabaamagmmaolacaaabmiahmaaaaamalbaaobabaaaa
aaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_LightTexture0] CUBE
"sce_fp_rsx // 165 instructions using 4 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840004000000
[Offsets]
9
_LightPositionRange 1 0
00000290
_LightShadowData 1 0
00000800
_LightColor0 2 0
00000a1000000350
_Color 1 0
00000310
cSpecular 1 0
00000990
roughnessV 1 0
00000040
freBias 2 0
00000710000006f0
frePow 1 0
00000620
orenNayar 1 0
000007d0
[Microcode]
2640
940017005c011c9dc8000001c8003fe106800440ce001c9daa02000054020001
00000000000040000000bf80000000001082024000021c9c00020000c8000001
0000000000000000000000000000000010800240ab001c9cab000000c8000001
ee020100c8011c9dc8000001c8003fe10886044001001c9e01000000ff000003
0e040101c8011c9dc8000001c8003fe110800340550c1c9d00020000c8000001
00003f8000000000000000000000000008040500c8081c9dc8080001c8000001
08803b40ff003c9dff000001c800000102040500c8041c9dc8040001c8000001
ce823940c8011c9dc8000029c800bfe10e843940c9001c9dc8000029c8000001
08888540c9041c9dc9080001c8000001ae803940c8011c9dc8000029c800bfe1
10880540c9041c9dc9080001c80000010e863940c9001c9dc8000029c8000001
08808540c9081c9dc90c0001c800000110800540c9081c9dc90c0001c8000001
10061b0054081c9dc8000001c80000010e060340c9041c9dc90c0001c8000001
0e860440c9081c9fff000001c90c00011084024055001c9dc9040001c8000001
1084024055001c9dc9080001c80000010e8a3940c80c1c9dc8000029c8000001
02061d0055001c9dc8002001c8000001028e024055001c9d55000001c8000001
04061a00ff081c9dc8000001c800000106020100c8041c9dc8000001c8000001
0e840440ff101c9dc9080003c904000104828540c9041c9dc9140001c8000001
02820540c9081c9dc90c0001c80000010200170a00081c9cc8000001c8000001
02041c00c80c1c9dc8000001c800000108040400011c1c9caa0c0000aa0c0002
0206020054081c9d00020000c8000001aa3a3fb8000000000000000000000000
10063a00c8021c9dfe0c0001c800000100000000000000000000000000000000
08041c00c80c1c9dc8000001c800000102040200ff041c9dc8082001c8000001
1e021709c8011c9dc8000001c8003fe110020600c8041c9dc8020001c8000001
00003f8080813b8001823781f88c31d58e021704c8011c9dc8000001c8003fe1
0e840240c8041c9dc8020001c800000100000000000000000000000000000000
1084024055001c9d55100001c800000110003a0054081c9dc8080001c8000001
0e840240c9081c9dc8020001c800000100000000000000000000000000000000
92041706c8011c9dc8000001c8003fe102060200fe001c9dfe080001c8000001
10040200c80c1c9d00020000c800000151ec3f78000000000000000000000000
f000170cc8011c9dc8000001c8003fe1117e4a00c8041c9dc8080001c8000001
08020900ff081c9d00020000c800000100000000000000000000000000000000
028e030054041c9d00020000c800000151ec3db8000000000000000000000000
108a0440c9103c9daa02000054020001000000006000bc9920003d9800000000
028a0440ff103c9dff140001000200004000be59000000000000000000000000
108a0340c9103c9faa020000c80000010000000000003f800000000000000000
048a1b40ff141c9dc8000001c8000001028a0440ff103c9dc914000100020000
00003fc900000000000000000000000002860900ff101c9d00020000c8000001
0000000000000000000000000000000010840a40c9101c9d00020000c8000001
0000000000000000000000000000000004863a4001141c9cab140000c8000001
1002010055001c9dc8001001c8000001108a0440c9003c9d00020000aa020000
6000bc9920003d98000000000000000004040200fe041c9d55100001c8000001
10063a00aa081c9cab040000c8000001048e0440ff003c9dff14000100020000
4000be5900000000000000000000000004060200fe041c9d55000001c8000001
10860440c9003c9dab1c00000002000000003fc9000000000000000000000000
108a0240c9081c9dab0c1000c8000001088a0340010c1c9e00020000c8000001
00003f8000000000000000000000000002861d0055141c9dc8000001c8000001
04043a00c80c1c9dab040000c800000110800100c9001c9dc8000001c8000001
04820340c90c1c9dff140003c8000001108a0340c9003c9f00020000c8000001
00003f8000000000000000000000000004860200010c1c9c00020000c8000001
0000000000000000000000000000000002861b40ff141c9dc8000001c8000001
088a1c40ab0c1c9cc8000001c8000001028a0440ff081c9d00020000ab040000
00004049000000000000000000000000048a3a40ff0c1c9dc90c0001c8000001
108a0a40c9001c9d00020000c800000100000000000000000000000000000000
04040800fe0c1c9dc8080001c8000001108e0240c9141c9dab141000c8000001
04040800c8081c9d00020000c800000100003f80000000000000000000000000
0406040055141c9d000200025514000100000000000000000000000000000000
10028300aa0c1c9c00020000c800000100000000000000000000000000000000
048a0340c9141c9dff1c0003c8000001048a0440ff141c9d00020000c9140001
0000404900000000000000000000000010020900c8041c9daa020000c8000001
0000000000000000000000000000000004040200fe041c9dc8080001c8000001
1080094001141c9cab140000c800000110802340ff001c9dc8000001c8000001
04820200c8081c9d000c0000c800000102863a40ab041c9cc91c0001c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
10840240010c1c9c00080000c80000010204010000021c9cc8000001c8000001
0000000000000000000000000000000010040300c9101c9d00020000c8000001
51ec3db8000000000000000000000000028a0840c9141c9dab140000c8000001
08882340c9141c9dc8000001c80000010204010000021fe8c8000001c8000001
00003f8000000000000000000000000002063a00ff101c9dfe080001c8000001
1006090001041c9c00020000c800000100000000000000000000000000000000
08000200000c1c9cfe0c0001c80000011086090055001c9d00020000c8000001
0000000000000000000000000000000006020100c8041c9dc8000001c8000001
028c2240c9141c9dc8000001c80000010e840240c9081c9dff0c0001c8000001
02863a4055101c9dc9180001c800000110040300c9101c9d00020000c8000001
eb853f11000000000000000000000000028a0240ff001c9dc90c0001c8000001
10043a00c9101c9dfe085001c800000108040200c8001c9d01140000c8000001
1004040054081c9dc8020001c808000300000000000000000000000066663ee6
0e860240ff081c9dc8020001c800000100000000000000000000000000000000
10840300c8081c9d00020000c800000100003f80000000000000000000000000
0e840100c9081c9dc8000001c80000010e840240c9081c9dff080001c8000001
1004020000001c9c00080000c800000110800200c8081c9dc8000001c8000001
0e800440c90c1c9dc8020001c908000100000000000000000000000000000000
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
BindCB "UnityShadows" 2
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTextureB0] 2D 2
SetTexture 4 [_LightTexture0] CUBE 1
SetTexture 5 [_ShadowMapTexture] CUBE 0
// 116 instructions, 4 temp regs, 0 temp arrays:
// ALU 80 float, 0 int, 2 uint
// TEX 6 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedfjgdhcfngdklkinapbbpdaikjjnecplfabaaaaaacibaaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcaiapaaaa
eaaaaaaamcadaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaaacaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fidaaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaogbkbaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaeaaaaaadcaaaaapdcaabaaaaaaaaaaa
hgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaaaaaaaaaa
elaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaa
aaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaaabeaaaaa
dagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaakbcaabaaa
acaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaaiedefjlo
dcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaa
abeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaah
ecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaajecaabaaa
acaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaai
icaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaadgcaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaadkaabaaa
acaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaaacaaaaaa
bkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaabaaaaaah
bcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaa
baaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaachbgjidn
dcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaa
abeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaaakaabaia
mbaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaackaabaaa
aaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaamaabeaaaaa
nlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaiaebaaaaaa
adaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaa
abaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaaj
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
ddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaadeaaaaah
ccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaagccaabaaa
aaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaabcaabaaa
acaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaaabaaaaaa
akaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaaakiacaaa
aaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaaalaaaaaa
agiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaadcaaaaak
ecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaggggogdo
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaafgaobaaa
acaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaaaaaaaaaa
eeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaajgahbaaa
acaaaaaajgahbaaaaaaaaaaaaaaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaackaabaaa
aaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaai
ccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
ccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaa
abaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
omfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaajecaabaaa
aaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdccaaaak
ecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaaaaaaaaaa
akaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaaaaaaaaaa
akaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaaaaaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
aaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaafaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
aoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
ocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegbcbaaaafaaaaaaegbcbaaaafaaaaaaelaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaabaaaaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaomfbhidpefaaaaajpcaabaaaabaaaaaaegbcbaaaafaaaaaaeghobaaa
afaaaaaaaagabaaaaaaaaaaabbaaaaakbcaabaaaabaaaaaaegaobaaaabaaaaaa
aceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbdbaaaaahicaabaaaaaaaaaaa
akaabaaaabaaaaaadkaabaaaaaaaaaaadhaaaaakicaabaaaaaaaaaaadkaabaaa
aaaaaaaaakiacaaaacaaaaaabiaaaaaaabeaaaaaaaaaiadpbaaaaaahbcaabaaa
abaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaa
agaabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegbcbaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaadiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaacaaaaaaapaaaaahicaabaaa
aaaaaaaaagaabaaaabaaaaaapgapbaaaaaaaaaaadiaaaaahhccabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_ShadowOffsets0]
Vector 3 [_ShadowOffsets1]
Vector 4 [_ShadowOffsets2]
Vector 5 [_ShadowOffsets3]
Vector 6 [_Color]
Vector 7 [cSpecular]
Float 8 [roughnessV]
Float 9 [freBias]
Float 10 [frePow]
Float 11 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"ps_3_0
; 169 ALU, 9 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c12, 0.00000000, 1.00000000, 0.50000000, 0.25000000
def c13, 2.00000000, -1.00000000, 0.56999999, 0.09000000
def c14, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c15, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c16, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
dcl_texcoord4 v4
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c13.x, c13.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c12.y
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c14.x, c14
mad_pp r0.y, r0, r0.x, c14.z
add_pp r0.z, -r0.x, c12.y
mad_pp r0.y, r0, r0.x, c14.w
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c12
mad_pp r3.x, r0.w, c14, c14.y
mad_pp r3.x, r3, r0.w, c14.z
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c12, c12.y
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c13.x, r0.y
mad_pp r0.z, r0.x, c15.x, r0
mad_pp r0.w, r3.x, r0, c14
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c12.x, c12.y
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c13.x, r3.x
mad_pp r0.x, r0.w, c15, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c15, c15.z
frc_pp r0.y, r0
mad_pp r3.y, r0, c16.x, c16
mad_pp r3.x, r0, c15.y, c15.z
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c16.x, c16.y
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c11.x, c11.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c13
rcp r0.x, r2.w
max r0.y, r0, c12.x
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r2.w, r0.x, c15
add_pp r0.xyz, r2, r4
dp3_pp_sat r2.x, r1, r2
mul r2.z, r2.x, c13.x
dp3_pp r2.y, r0, r0
rsq_pp r2.y, r2.y
mul_pp r0.xyz, r2.y, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.y, r1, r4
mul r3.x, r2, r2.z
rcp r0.y, r0.y
mul r0.x, r2.z, r2.y
mul r0.z, r0.y, r3.x
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c12
min r2.z, r0.y, c12.y
add_pp r0.y, -r0.x, c12
pow_pp r1, r0.y, c10.x
mul_pp r0.x, c8, c8
mul_pp r1.y, r2.x, r0.x
mov r0.y, c9.x
mov_pp r0.z, r1.x
add r0.y, c12, -r0
mad_sat r0.y, r0, r0.z, c9.x
mul_pp r0.z, r2.x, r1.y
pow_pp r1, r2.x, c16.z
max r0.y, r0, c12.x
mul r0.y, r0, r2.z
rcp r2.z, r0.z
mul_pp r0.z, r2.x, r2.x
add r0.z, r0, c13.y
mul r2.z, r0, r2
mov_pp r0.z, r1.x
pow r1, c16.w, r2.z
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c16.z
rcp r0.x, r0.x
mul r0.x, r0, r0.z
mul_pp r0.z, r2.x, r2.y
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
add r0.x, r0.w, c13.z
max_pp r0.z, r0, c12.x
add r0.z, r0, c13.w
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r3.xyz, r0.y, c7
rcp r0.x, r0.x
mul r0.x, r0.w, r0
mad r0.x, -r0, c12.z, r2.w
add r0.w, r0.x, c12.y
mul_pp r1.xyz, r3, r1.x
texld r0.xyz, v0, s2
mul_pp r0.xyz, r0, c6
mul_pp r0.xyz, r0, c1
max r2.x, r2, c12
mul_pp r2.xyz, r0, r2.x
rcp r1.w, v4.w
mad r0.xy, v4, r1.w, c5
mul_pp r1.xyz, r1, c1
mad_pp r1.xyz, r2, r0.w, r1
texld r0.x, r0, s6
mad r2.xy, v4, r1.w, c4
mov r0.w, r0.x
texld r0.x, r2, s6
mad r2.xy, v4, r1.w, c3
mov r0.z, r0.x
texld r0.x, r2, s6
mad r2.xy, v4, r1.w, c2
mov r0.y, r0.x
texld r0.x, r2, s6
mad r0, -v4.z, r1.w, r0
mov r2.x, c0
cmp r2, r0, c12.y, r2.x
dp4_pp r0.z, r2, c12.w
rcp r0.x, v3.w
mad r2.xy, v3, r0.x, c12.z
dp3 r0.x, v3, v3
texld r0.w, r2, s4
cmp r0.y, -v3.z, c12.x, c12
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s5
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c13.x
mov_pp oC0.w, c12.x
"
}

SubProgram "xbox360 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Vector 6 [_Color]
Vector 1 [_LightColor0]
Vector 0 [_LightShadowData]
Vector 2 [_ShadowOffsets0]
Vector 3 [_ShadowOffsets1]
Vector 4 [_ShadowOffsets2]
Vector 5 [_ShadowOffsets3]
Vector 7 [cSpecular]
Float 9 [freBias]
Float 10 [frePow]
Float 11 [orenNayar]
Float 8 [roughnessV]
SetTexture 0 [_ShadowMapTexture] 2D
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_LightTextureB0] 2D
SetTexture 3 [_MainTex] 2D
SetTexture 4 [_BumpMap] 2D
SetTexture 5 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 97.33 (73 instructions), vertex: 0, texture: 36,
//   sequencer: 30, interpolator: 20;    14 GPRs, 12 threads,
// Performance (if enough threads): ~97 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacniaaaaaemeaaaaaaaaaaaaaaceaaaaachmaaaaackeaaaaaaaa
aaaaaaaaaaaaacfeaaaaaabmaaaaacehppppadaaaaaaaaapaaaaaabmaaaaaaaa
aaaaaceaaaaaabeiaaadaaaeaaabaaaaaaaaabfeaaaaaaaaaaaaabgeaaacaaag
aaabaaaaaaaaabgmaaaaaaaaaaaaabhmaaacaaabaaabaaaaaaaaabgmaaaaaaaa
aaaaabijaaacaaaaaaabaaaaaaaaabgmaaaaaaaaaaaaabjkaaadaaabaaabaaaa
aaaaabfeaaaaaaaaaaaaabkjaaadaaacaaabaaaaaaaaabfeaaaaaaaaaaaaablj
aaadaaadaaabaaaaaaaaabfeaaaaaaaaaaaaabmcaaadaaaaaaabaaaaaaaaabfe
aaaaaaaaaaaaabneaaacaaacaaaeaaaaaaaaaboeaaaaaaaaaaaaabpeaaadaaaf
aaabaaaaaaaaabfeaaaaaaaaaaaaacabaaacaaahaaabaaaaaaaaabgmaaaaaaaa
aaaaacalaaacaaajaaabaaaaaaaaacbeaaaaaaaaaaaaacceaaacaaakaaabaaaa
aaaaacbeaaaaaaaaaaaaacclaaacaaalaaabaaaaaaaaacbeaaaaaaaaaaaaacdf
aaacaaaiaaabaaaaaaaaacbeaaaaaaaafpechfgnhaengbhaaaklklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaa
aaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefdgigbgegphheegbhe
gbaafpemgjghgihefegfhihehfhcgfdaaafpemgjghgihefegfhihehfhcgfecda
aafpengbgjgofegfhiaafpfdgigbgegphhengbhafegfhihehfhcgfaafpfdgigb
gegphhepgggghdgfhehdaaklaaabaaadaaabaaaeaaaeaaaaaaaaaaaafpfdhagf
gdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphf
ghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaiaaaaaaeeebaaaanaaaaaaaaaeaaaaaaaaaaaaeikfaabpaabp
aaaaaaabaaaapafaaaaahbfbaaaahcfcaaaapdfdaaaapefeaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaaaaalmjjgoda
eamjapnlmaaaaaaamaejapnldpiaaaaadpmjankedoccpjidaaaaaaaadoiaaaaa
eaejapnllofjdeiednjibgchdpaaaaaalpiaaaaaeaiaaaaadpaaaaaadooggggg
dpbbolifdnlifbomdplikkdlaaaaaaaaaaaaaaaaaaaaaaaaaaajgaaigaaobcaa
bcaaaaaaaaaagabegabkbcaabcaaaaaaafaagacagacgbcaabcaaafffaaaaaaaa
gacmmeaabcaaaaaaaaaagadcgadibcaabcaaaaaaaaaagadogaeebcaabcaaaaaa
aaaagaekgafabcaabcaaaaaaaaaaeafgaaaaccaaaaaaaaaadieafaabbpbppghp
aaaaeaaaemibabalaagmgmblcbaiaiademcmafagaablkmblobabadaemiabaaaf
aaloloaapaadadaamiaiaaabaaloloaapaababaamiaiaaacaaloloaapaacacaa
miadaaahaamhgmmgilafpkpnfiilacadaalbloblobafaeicfiihabaiaablmabl
obacacibmiaiaaaiaegngnlbnbahahplaicoacabaablpmgmobababahaibbacab
aamdmdlbpaababahfibiabakaalbgmgmoaacacibmiahaaakaabfgmaaobababaa
miapaaabaaaaaaaaoaakaiaakaieahacaaloloblpaababiifiedacacaabjlamg
kaadacicfiehahabaamamgblobabacibmiaoaaajaapmagaaobahahaamiabaaah
aamdloaapaajaiaamiacaaahaamdloaapaajakaalfbcababaaloloebpaaiabaf
lfieabalaamdloidpaajakafemicalalaamgmglboaalalableeoacanaapmmgeb
obalalaeleiiacahacbllbidkaanplaelebdaeagaalalbebkbihpkadlecpaeag
aajohnidkaagpnadaacifakbbpbppodpaaaaeaaabafibaabbpbppomhaaaaeaaa
baaicaebbpbppppiaaaaeaaabaaicaibbpbpppmhaaaaeaaaliaicaebbpbppodp
aaaaeaaadaaicacbbpbppbppaaaaeaaabadieaabbpbppoiiaaaaeaaacabiaamb
bpbppoppaaaaeaaaaicbaaaaaamggmgmifadpmalbeaiaaaaabgmblgmabaipnaj
aeebagagaablgmlbibaaaiplbeahaaaeaamamamgkbaeagaaamihaaaeaamamagm
kbaeabaalaipabacaagmaambmfadacpomiapaaacaaaagmlbioacaapllbbiabae
aamdloabnaajaipomiahaaaiaebfgmmaolajahaibeacaaadaakhlblbkpacpmal
ambpanacaaaamgblobaealaebebeaaahaagmgmblkcahpmaclabladaeaamnbkaa
mbanalpoemifadaaaelalbgmkaihplaekaekadafaelmlmgmofahahiakaibadaj
aablgmmgkbadppiaembfalaaaabkblblkbadpkabemcpalajaaaaldgmobajahab
miajaaabaabjlablmlagihpmmiamaaalaacmkmmgmlabihplaibpafamaalekkbl
obaaalanbebkabagaalmmgblkaampmaediidahahaabklagmkbampoajbeijabae
aemelblbiaahplplbibhabaaaababaglobagafabmiamaaadaaagagpbolaladaa
eaccaaafaagmlbblodabaeiekielaaagacmabfebmaakajakbebcabaaaalolpml
paaiagadembiaaabaamgblgmodadadaamiajaaabaabiblgmilabplpodiimabad
aacmaamgoiabaaaamiamaaadaaagmggmiladpkplmeccaeaaaalbgmblkcaapmad
mabdabagaaldlablobahaaadembhafaaaagfmilbobagabaelcbhaaafaabemaeb
mbaaafajmaecadaaaalbgmmgobafaaadembgaaaeaaggmbgmobafadadmiabaaaa
aalbgmaaobaaaaaamiahaaadaagmmaaakbaaahaamiadaaaaaalalcaaoaaeaeaa
miahaaabaamalbaaobadabaamiahaaabaamamaaakbababaamiahaaabaamagmma
olacaaabmiahmaaaaamalbaaobabaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_ShadowOffsets0]
Vector 3 [_ShadowOffsets1]
Vector 4 [_ShadowOffsets2]
Vector 5 [_ShadowOffsets3]
Vector 6 [_Color]
Vector 7 [cSpecular]
Float 8 [roughnessV]
Float 9 [freBias]
Float 10 [frePow]
Float 11 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"sce_fp_rsx // 181 instructions using 5 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840005000000
[Offsets]
12
_LightShadowData 1 0
00000690
_LightColor0 2 0
00000b0000000820
_ShadowOffsets[0] 1 0
00000630
_ShadowOffsets[1] 1 0
000005e0
_ShadowOffsets[2] 1 0
00000590
_ShadowOffsets[3] 1 0
00000130
_Color 1 0
00000570
cSpecular 1 0
00000aa0
roughnessV 1 0
00000180
freBias 2 0
0000087000000850
frePow 1 0
000007c0
orenNayar 1 0
00000540
[Microcode]
2896
940017005c011c9dc8000001c8003fe106800440ce001c9d00020000aa020000
000040000000bf800000000000000000ae823940c8011c9dc8000029c800bfe1
08800240ab001c9cab000000c80000010880044001001c9e01000000c9000003
08800340c9001c9d00020000c800000100003f80000000000000000000000000
0e8e3940c9041c9dc8000029c800000108803b40c9003c9d55000001c8000001
0e8c3940c9001c9dc8000029c8000001108c0540c9181c9dc91c0001c8000001
ce883940c8011c9dc8000029c800bfe10e820440c9181c9fff180001c91c0001
10860540c9101c9dc9180001c80000010e800440ff0c1c9dc9180003c9100001
0e023a01c8011c9dfe010001c800bfe108860540c9001c9dc9040001c8000001
06000300c8041c9d08020000c800000100000000000000000000000000000000
1600170cc8001c9dc8000001c800000110040500a6001c9df2020001c8000001
0000000000013f7f00013b7f0001377f1080024000021c9c00020000c8000001
000000000000000000000000000000000e800340c9101c9dc91c0001c8000001
10820340c9183c9f00020000c800000100003f80000000000000000000000000
048e8540c9181c9dc91c0001c80000010e803940c9001c9dc8000029c8000001
04828540c9101c9dc9000001c800000102821b40ff041c9dc8000001c8000001
02800240ab1c1c9cff000001c800000110820440c9183c9d00020000aa020000
6000bc9920003d980000000000000000028e0240ab1c1c9cc9000001c8000001
10000100c8001c9dc8000001c800000102800440ff183c9dff04000100020000
4000be5900000000000000000000000010061a00c91c1c9dc8000001c8000001
028e8540c9101c9dc9180001c800000108800440ff183c9d0100000000020000
00003fc900000000000000000000000002000100ab1c1c9cc8001001c8000001
1000020000001c9c011c0000c800000102823a4055001c9dc9040001c8000001
02060200c8001c9dab1c0000c800000102003a00fe001c9dab040000c8000001
10003a00000c1c9cab040000c80000010408080000001c9cfe000001c8000001
02001d00ab1c1c9cc8002001c8000001028c0240ab1c1c9cab1c0000c8000001
088c0340ff0c3c9f00020000c800000100003f80000000000000000000000000
1000040001181c9cc80c0001c80c0003028c0440ff0c3c9d00020000aa020000
6000bc9920003d98000000000000000004820440ff0c3c9d0118000000020000
4000be59000000000000000000000000028c1b4055181c9dc8000001c8000001
04820440ff0c3c9dc90400010002000000003fc9000000000000000000000000
108e0a40c9181c9daa020000c800000100000000000000000000000000000000
02001c00c8001c9dc8000001c800000102880240ff1c1c9dc9041001c8000001
04823a40c9041c9dc9180001c800000110000200c8001c9d00020000c8000001
aa3a3fb800000000000000000000000002060200ff001c9dc8002001c8000001
02001c00fe001c9dc8000001c8000001088c0a40ff0c1c9d00020000c8000001
000000000000000000000000000000001080024055181c9dab041000c8000001
02063a00c8001c9dc80c0001c800000102800340ab041c9cff000003c8000001
108c034001041c9c01100002c800000192081706c8011c9dc8000001c8003fe1
08080200000c1c9cfe100001c80000011092044055181c9d0002000001000000
0000404900000000000000000000000008920440ff1c1c9d00020000ff180001
00004049000000000000000000000000108c024000021c9c00020000c8000001
000000000000000000000000000000008e001704c8011c9dc8000001c8003fe1
0e8c0240c8001c9dc8020001c800000100000000000000000000000000000000
06000300c8041c9d08020000c800000100000000000000000000000000000000
1600170cc8001c9dc8000001c800000108040500a6001c9dc8020001c8000001
00013f7f00013b7f0001377f0000000006000300c8041c9d08020000c8000001
000000000000000000000000000000001600170cc8001c9dc8000001c8000001
04040500a6001c9dc8020001c800000100013f7f00013b7f0001377f00000000
06000300c8041c9d08020000c800000100000000000000000000000000000000
1600170cc8001c9dc8000001c800000102040500a6001c9dc8020001c8000001
00013f7f00013b7f0001377f000000001f7e4a00c8081c9d54040001c8000001
1e00010000021c9cc8000001c800000100000000000000000000000000000000
1e00010000021c88c8000001c800000100003f80000000000000000000000000
02860600c8001c9d00020000c800000100003e80000000000000000000000000
fe000100c8011c9dc8000001c8003fe102040800aa101c9c00020000c8000001
00003f8000000000000000000000000006023a00c8001c9dfe000001c8000001
02000500c8001c9dc8000001c800000110800900c90c1c9d00020000c8000001
0000000000000000000000000000000006020300c8041c9d00020000c8000001
00003f0000000000000000000000000008800340ff001c9faa020000c8000001
0000000000003f80000000000000000010001708c8041c9dc8000001c8000001
08801d0055001c9dc8000001c80000011084020055001c9d00020000c8000001
0000000000000000000000000000000002840d0054001c9daa020000c8000001
0000000000000000000000000000000002840240c9081c9dfe000001c8000001
088e1c40ff081c9dc8000001c80000010e820240c9181c9dc8020001c8000001
00000000000000000000000000000000028c0240ab1c1c9cc91c0001c8000001
10060400551c1c9d00020002551c000100000000000000000000000000000000
10048300c80c1c9d00020000c800000100000000000000000000000000000000
0408090001181c9caa020000c800000100000000000000000000000000000000
04040900fe081c9d00020000c800000100000000000000000000000000000000
02040200aa081c9cc8080001c800000110880940c9241c9d55240001c8000001
028a2340ff101c9dc8000001c8000001048a0300c8101c9d00020000c8000001
51ec3db800000000000000000000000010840840c9241c9d55240001c8000001
02880200c8081c9d54100001c800000104842340ff081c9dc8000001c8000001
04040900550c1c9d00020000c800000100000000000000000000000000000000
028c3a40c9101c9dab140000c8000001028e0240c9181c9dc8100001c8000001
10080300c9181c9d00020000c800000151ec3db8000000000000000000000000
10043a00c9181c9dfe100001c800000102040300ff181c9d00020000c8000001
eb853f1100000000000000000000000008842240ff081c9dc8000001c8000001
108e3a40ab081c9c55080001c800000102060200fe081c9daa080000c8000001
028a0240c9141c9dff1c0001c8000001108e0900ab1c1c9c00020000c8000001
0000000000000000000000000000000004020200000c1c9c01140000c8000001
10023a00c9181c9dc8085001c800000110020400aa041c9c00020000c8040003
66663ee60000000000000000000000000e820240c9041c9dff1c0001c8000001
0200170a00001c9cc8000001c80000011c840240011c1c9c20020001c8000001
0000000000000000000000000000000010800300c8041c9d00020000c8000001
00003f800000000000000000000000001082024001081c9c00000000c8000001
0e800240c9041c9dff000001c80000010e800440f3081c9dc8020001c9000001
0000000000000000000000000000000010800240c9041c9d010c0000c8000001
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
ConstBuffer "$Globals" 288 // 244 used size, 16 vars
Vector 16 [_LightColor0] 4
Vector 48 [_ShadowOffsets0] 4
Vector 64 [_ShadowOffsets1] 4
Vector 80 [_ShadowOffsets2] 4
Vector 96 [_ShadowOffsets3] 4
Vector 176 [_Color] 4
Vector 208 [cSpecular] 4
Float 224 [roughnessV]
Float 232 [freBias]
Float 236 [frePow]
Float 240 [orenNayar]
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityShadows" 1
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_LightTextureB0] 2D 2
SetTexture 5 [_ShadowMapTexture] 2D 0
// 128 instructions, 4 temp regs, 0 temp arrays:
// ALU 85 float, 0 int, 3 uint
// TEX 9 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedkhnbnfhohhnolcfofkfpkkdphmgjdjecabaaaaaajebbaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefchebaaaaa
eaaaaaaabnaeaaaafjaaaaaeegiocaaaaaaaaaaabaaaaaaafjaaaaaeegiocaaa
abaaaaaabjaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaa
gcbaaaadpcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
efaaaaajpcaabaaaaaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpdcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaa
bkaabaaaaaaaaaaadkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaa
acaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaadaaaaaabaaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaa
jgahbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaa
agaabaaaadaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaaaaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaa
akaabaaaadaaaaaaabeaaaaaaaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaa
acaaaaaabkaabaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaa
bkaabaaaaaaaaaaaenaaaaagccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaa
enaaaaahbcaabaaaabaaaaaabcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaa
aaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaa
akiacaaaaaaaaaaaapaaaaaaakiacaaaaaaaaaaaapaaaaaadcaaaaaodcaabaaa
abaaaaaaagiacaaaaaaaaaaaapaaaaaaagiacaaaaaaaaaaaapaaaaaaaceaaaaa
ifolbbdpomfblidnaaaaaaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaa
aaaaaaaaegaabaaaabaaaaaadcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaa
acaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaa
jgahbaaaaaaaaaaajgahbaaaaaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaa
bacaaaahccaabaaaaaaaaaaajgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaa
abaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaa
diaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaaaaaaaaaaoaaaaaa
bjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaa
aaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
aoaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaabaaaaaackiacaaaaaaaaaaaaoaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaa
aaaaaaaaaoaaaaaaakiacaaaaaaaaaaaaoaaaaaadiaaaaahecaabaaaabaaaaaa
dkaabaaaaaaaaaaabkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiaeadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaaaoaaaaakicaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpdkaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
ckaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agijcaaaaaaaaaaaanaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaa
fgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaalaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaaaoaaaaahhcaabaaaabaaaaaaegbcbaaaafaaaaaa
pgbpbaaaafaaaaaaaaaaaaaidcaabaaaacaaaaaaegaabaaaabaaaaaaegiacaaa
aaaaaaaaadaaaaaaefaaaaajpcaabaaaacaaaaaaegaabaaaacaaaaaaeghobaaa
afaaaaaaaagabaaaaaaaaaaaaaaaaaaidcaabaaaadaaaaaaegaabaaaabaaaaaa
egiacaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaa
eghobaaaafaaaaaaaagabaaaaaaaaaaadgaaaaafccaabaaaacaaaaaaakaabaaa
adaaaaaaaaaaaaaidcaabaaaadaaaaaaegaabaaaabaaaaaaegiacaaaaaaaaaaa
afaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaaaaaaaaadgaaaaafecaabaaaacaaaaaaakaabaaaadaaaaaaaaaaaaai
dcaabaaaabaaaaaaegaabaaaabaaaaaaegiacaaaaaaaaaaaagaaaaaaefaaaaaj
pcaabaaaadaaaaaaegaabaaaabaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaa
dgaaaaaficaabaaaacaaaaaaakaabaaaadaaaaaadbaaaaahpcaabaaaabaaaaaa
egaobaaaacaaaaaakgakbaaaabaaaaaadhaaaaanpcaabaaaabaaaaaaegaobaaa
abaaaaaaagiacaaaabaaaaaabiaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpbbaaaaakicaabaaaaaaaaaaaegaobaaaabaaaaaaaceaaaaaaaaaiado
aaaaiadoaaaaiadoaaaaiadoaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaa
pgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaadbaaaaahbcaabaaaabaaaaaa
abeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaadkaabaaaabaaaaaa
akaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaacaaaaaafgafbaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaacaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaa
acaaaaaaapaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaaaaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
"!!GLES"
}

SubProgram "d3d9 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_ShadowOffsets0]
Vector 3 [_ShadowOffsets1]
Vector 4 [_ShadowOffsets2]
Vector 5 [_ShadowOffsets3]
Vector 6 [_Color]
Vector 7 [cSpecular]
Float 8 [roughnessV]
Float 9 [freBias]
Float 10 [frePow]
Float 11 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"ps_3_0
; 169 ALU, 9 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c12, 0.00000000, 1.00000000, 0.50000000, 0.25000000
def c13, 2.00000000, -1.00000000, 0.56999999, 0.09000000
def c14, -0.01872253, 0.07427979, -0.21215820, 1.57031250
def c15, 3.14062500, 0.15917969, 0.50000000, 0.44999999
def c16, 6.28125000, -3.14062500, 4.00000000, 2.71828198
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
dcl_texcoord4 v4
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c13.x, c13.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c12.y
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c14.x, c14
mad_pp r0.y, r0, r0.x, c14.z
add_pp r0.z, -r0.x, c12.y
mad_pp r0.y, r0, r0.x, c14.w
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c12
mad_pp r3.x, r0.w, c14, c14.y
mad_pp r3.x, r3, r0.w, c14.z
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c12, c12.y
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c13.x, r0.y
mad_pp r0.z, r0.x, c15.x, r0
mad_pp r0.w, r3.x, r0, c14
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c12.x, c12.y
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c13.x, r3.x
mad_pp r0.x, r0.w, c15, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c15, c15.z
frc_pp r0.y, r0
mad_pp r3.y, r0, c16.x, c16
mad_pp r3.x, r0, c15.y, c15.z
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c16.x, c16.y
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c11.x, c11.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c13
rcp r0.x, r2.w
dp3_pp_sat r2.w, r1, r2
max r0.y, r0, c12.x
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r3.x, r0, c15.w
add_pp r0.xyz, r2, r4
mul r2.y, r2.w, c13.x
dp3_pp r2.x, r0, r0
rsq_pp r2.x, r2.x
mul_pp r0.xyz, r2.x, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.x, r1, r4
mul r2.z, r2.w, r2.y
rcp r0.y, r0.y
mul r0.x, r2.y, r2
mul r0.z, r0.y, r2
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c12
min r2.y, r0, c12
add_pp r0.y, -r0.x, c12
pow_pp r1, r0.y, c10.x
mul_pp r0.x, c8, c8
mul_pp r1.y, r2.w, r0.x
mov r0.y, c9.x
mov_pp r0.z, r1.x
add r0.y, c12, -r0
mad_sat r0.y, r0, r0.z, c9.x
mul_pp r0.z, r2.w, r1.y
pow_pp r1, r2.w, c16.z
max r0.y, r0, c12.x
mul r0.y, r0, r2
rcp r2.y, r0.z
mul_pp r0.z, r2.w, r2.w
add r0.z, r0, c13.y
mul r2.y, r0.z, r2
mov_pp r0.z, r1.x
pow r1, c16.w, r2.y
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c16.z
rcp r0.x, r0.x
mul r0.x, r0, r0.z
mul_pp r0.z, r2.w, r2.x
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
add r0.x, r0.w, c13.z
rcp r1.y, r0.x
mul r0.w, r0, r1.y
max_pp r0.z, r0, c12.x
add r0.z, r0, c13.w
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r0.xyz, r0.y, c7
mul_pp r0.xyz, r0, r1.x
mul_pp r2.xyz, r0, c1
texld r0.xyz, v0, s2
mul_pp r1.xyz, r0, c6
rcp r1.w, v4.w
mad r0.xyz, v4, r1.w, c5
mad r0.w, -r0, c12.z, r3.x
add r0.w, r0, c12.y
texld r0.x, r0, s6
max r2.w, r2, c12.x
mul_pp r1.xyz, r1, c1
mul_pp r1.xyz, r1, r2.w
mad_pp r2.xyz, r1, r0.w, r2
mov_pp r0.w, r0.x
mad r0.xyz, v4, r1.w, c4
texld r0.x, r0, s6
mad r1.xyz, v4, r1.w, c3
mov_pp r0.z, r0.x
texld r1.x, r1, s6
mov_pp r0.y, r1.x
mad r1.xyz, v4, r1.w, c2
mov r0.x, c0
add r1.w, c12.y, -r0.x
texld r0.x, r1, s6
mad r1, r0, r1.w, c0.x
dp4_pp r0.z, r1, c12.w
rcp r0.x, v3.w
mad r1.xy, v3, r0.x, c12.z
dp3 r0.x, v3, v3
texld r0.w, r1, s4
cmp r0.y, -v3.z, c12.x, c12
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s5
mul_pp r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r0.xyz, r0.x, r2
mul_pp oC0.xyz, r0, c13.x
mov_pp oC0.w, c12.x
"
}

SubProgram "ps3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
Vector 0 [_LightShadowData]
Vector 1 [_LightColor0]
Vector 2 [_ShadowOffsets0]
Vector 3 [_ShadowOffsets1]
Vector 4 [_ShadowOffsets2]
Vector 5 [_ShadowOffsets3]
Vector 6 [_Color]
Vector 7 [cSpecular]
Float 8 [roughnessV]
Float 9 [freBias]
Float 10 [frePow]
Float 11 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_LightTexture0] 2D
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_ShadowMapTexture] 2D
"sce_fp_rsx // 176 instructions using 5 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840005000000
[Offsets]
12
_LightShadowData 2 0
0000025000000230
_LightColor0 2 0
00000ac000000510
_ShadowOffsets[0] 1 0
00000110
_ShadowOffsets[1] 1 0
000000b0
_ShadowOffsets[2] 1 0
00000050
_ShadowOffsets[3] 1 0
00000130
_Color 1 0
00000280
cSpecular 1 0
00000a30
roughnessV 1 0
000003c0
freBias 2 0
00000870000007f0
frePow 1 0
00000760
orenNayar 1 0
00000910
[Microcode]
2816
940017005c011c9dc8000001c8003fe106860440ce001c9d00020000aa020000
000040000000bf8000000000000000001c003a0120011c9dfe010001c800bfe1
0e040300f2001c9dc8020001c800000100000000000000000000000000000000
0206170cc8081c9dc8000001c8000001088e0140000c1c9cc8000001c8000001
02800240ab0c1c9cab0c0000c8000001108a0440010c1c9e010c000001000002
0e040300f2001c9dc8020001c800000100000000000000000000000000000000
108c0340c9141c9d00020000c800000100003f80000000000000000000000000
0200170cc8081c9dc8000001c8000001048e014000001c9cc8000001c8000001
0e040300f2001c9dc8020001c800000100000000000000000000000000000000
0e000300f2001c9dc8020001c800000100000000000000000000000000000000
0200170cc8001c9dc8000001c8000001108e014000001c9cc8000001c8000001
0200170cc8081c9dc8000001c8000001028e0140c8001c9dc8000001c8000001
08863b40ff183c9dff180001c8000001ce843940c8011c9dc8000029c800bfe1
0e863940c90c1c9dc8000029c8000001108c0540c9081c9dc90c0001c8000001
ae8c3940c8011c9dc8000029c800bfe10e820440ff181c9dc90c0003c9080001
0e8c3940c9181c9dc8000029c800000110840540c90c1c9dc9180001c8000001
0e880440c90c1c9fff080001c918000110860540c9041c9dc9100001c8000001
1e000400c91c1c9d00020002c91c000100000000000000000000000000000000
1e000300c8001c9d00020000c800000100000000000000000000000000000000
8e041704c8011c9dc8000001c8003fe10e880240c8081c9dc8020001c8000001
0000000000000000000000000000000010880600c8001c9d00020000c8000001
00003e80000000000000000000000000fe000100c8011c9dc8000001c8003fe1
08040500c8001c9dc8000001c800000106003a00c8001c9dfe000001c8000001
06000300c8001c9d00020000c800000100003f00000000000000000000000000
e8000100c8011c9dc8000001c8003fe110001708c8001c9dc8000001c8000001
10900d0054001c9d00020000c800000100000000000000000000000000000000
0e000340c9081c9dc9180001c800000110820240c9201c9dc8000001c8000001
0e8e3940c8001c9dc8000029c800000110900440c9183c9d00020000aa020000
6000bc9920003d9800000000000000000200170a54081c9dc8000001c8000001
028a8540c90c1c9dc9180001c80000011080024000021c9c00020000c8000001
00000000000000000000000000000000088c8540c9081c9dc91c0001c8000001
108a024001141c9cc9000001c8000001028e0240c9141c9dff140001c8000001
1004010001141c9cc8001001c800000110060200c8081c9d01140000c8000001
048a8540c9081c9dc90c0001c800000102060200fe081c9dab140000c8000001
10041d00c9141c9dc8002001c800000102023a00c80c1c9d55180001c8000001
08023a00fe0c1c9d55180001c800000102020800c8041c9d54040001c8000001
08001c00fe081c9dc8000001c800000102081a00c91c1c9dc8000001c8000001
02920240c9141c9dc9140001c800000102080400c9241c9dc8100001c8100003
10820240c9041c9d00000000c800000110040200c9001c9d54002001c8000001
0400020000101c9c00020000c8000001aa3a3fb8000000000000000000000000
0e820240c9101c9dc8020001c800000100000000000000000000000000000000
04001c00aa001c9cc8000001c800000102043a00aa001c9cfe080001c8000001
108a024001141c9cab140000c800000102080900ff141c9d00020000c8000001
00000000000000000000000000000000108a0440c9183c9dc9200001aa020000
000000004000be59000000000000000092061706c8011c9dc8000001c8003fe1
08860a40ff181c9d00020000c800000100000000000000000000000000000000
048a030000101c9c00020000c800000151ec3db8000000000000000000000000
08840900ff181c9daa020000c800000100000000000000000000000000000000
02860440ff183c9dff1400010002000000003fc9000000000000000000000000
108a0340c9183c9faa020000c80000010000000000003f800000000000000000
04861b40ff141c9dc8000001c800000102040200c8081c9dfe0c0001c8000001
02020800c8041c9d00020000c800000100003f80000000000000000000000000
108c3a40010c1c9cab0c0000c8000001028e0440ff083c9d00020000aa020000
6000bc9920003d980000000000000000028e0440ff083c9dc91c000100020000
4000be59000000000000000000000000108e0240550c1c9dc9181001c8000001
04860340ff181c9dff1c0003c80000011090034055081c9f00020000c8000001
00003f8000000000000000000000000008841d00ff201c9dc8000001c8000001
02900340ff083c9f00020000c800000100003f80000000000000000000000000
088c1b40c9201c9dc8000001c80000010286020055081c9d00020000c8000001
0000000000000000000000000000000008841c40c90c1c9dc8000001c8000001
028e0440ff083c9dc91c00010002000000003fc9000000000000000000000000
02860a40ff081c9d00020000c800000100000000000000000000000000000000
10843a40011c1c9c55180001c800000110800240010c1c9cc9081001c8000001
1004040055081c9d000200025508000100000000000000000000000000000000
08880340ff081c9dff000003c800000110840440550c1c9d00020000ab0c0000
0000404900000000000000000000000002860440c90c1c9d0002000055100001
0000404900000000000000000000000010900940c9081c9d010c0000c8000001
02088300fe081c9d00020000c800000100000000000000000000000000000000
02080900c8101c9d00020000c800000100000000000000000000000000000000
08862340ff201c9dc8000001c800000102020200c8101c9dc8040001c8000001
10800840c9081c9d010c0000c800000108802340ff001c9dc8000001c8000001
02840200c8041c9dc8080001c800000102883a40c9081c9dab140000c8000001
108a024000021c9c00020000c800000100000000000000000000000000000000
10060300c9141c9d00020000c800000151ec3db8000000000000000000000000
048a024001101c9c000c0000c800000108023a00ff141c9dfe0c0001c8000001
02020300ff141c9d00020000c8000001eb853f11000000000000000000000000
10802240ff001c9dc8000001c800000104020900ff0c1c9d00020000c8000001
000000000000000000000000000000000204020054041c9daa040000c8000001
10803a4055001c9dff000001c800000108880240c90c1c9dff000001c8000001
02040200c8081c9d55100001c800000110023a00c9141c9dc8045001c8000001
1004040000081c9cc8020001c804000300000000000000000000000066663ee6
0e880240ab141c9cc8020001c800000100000000000000000000000000000000
1080090001141c9c00020000c800000100000000000000000000000000000000
0e820240c9041c9dff000001c800000110800300c8081c9d00020000c8000001
00003f800000000000000000000000000e800240c9041c9dff000001c8000001
10800240c9041c9dc9100001c80000010e800440c9101c9dc8020001c9000001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
1081014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
ConstBuffer "$Globals" 288 // 244 used size, 16 vars
Vector 16 [_LightColor0] 4
Vector 48 [_ShadowOffsets0] 4
Vector 64 [_ShadowOffsets1] 4
Vector 80 [_ShadowOffsets2] 4
Vector 96 [_ShadowOffsets3] 4
Vector 176 [_Color] 4
Vector 208 [cSpecular] 4
Float 224 [roughnessV]
Float 232 [freBias]
Float 236 [frePow]
Float 240 [orenNayar]
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityShadows" 1
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_LightTextureB0] 2D 2
SetTexture 5 [_ShadowMapTexture] 2D 0
// 125 instructions, 4 temp regs, 0 temp arrays:
// ALU 85 float, 0 int, 3 uint
// TEX 5 (0 load, 4 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedoaifejijccbieloindpdcegjiifhcalnabaaaaaahebbaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcfebaaaaa
eaaaaaaabfaeaaaafjaaaaaeegiocaaaaaaaaaaabaaaaaaafjaaaaaeegiocaaa
abaaaaaabjaaaaaafkaiaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaa
gcbaaaadpcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
efaaaaajpcaabaaaaaaaaaaaogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aeaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpdcaaaaakicaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaa
bkaabaaaaaaaaaaadkaabaaaaaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaa
acaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
dcaaaaakbcaabaaaacaaaaaaabeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaa
abeaaaaachbgjidndcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaia
ibaaaaaaabaaaaaaabeaaaaaiedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaa
acaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaa
acaaaaaadkaabaiambaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaa
acaaaaaabkaabaaaacaaaaaadiaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaa
akaabaaaacaaaaaadcaaaaajecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaa
aaaaaamaabeaaaaanlapejeadbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaadgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
abaaaaahecaabaaaacaaaaaadkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaaj
bcaabaaaacaaaaaaakaabaaaacaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaa
baaaaaahccaabaaaacaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
ccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaa
acaaaaaaagbjbaaaadaaaaaabaaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaa
jgahbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaa
agaabaaaadaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaaaaadcaaaaakccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaia
ibaaaaaaadaaaaaaabeaaaaachbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdp
aaaaaaaiecaabaaaaaaaaaaaakaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaa
akaabaaaadaaaaaaakaabaiaebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaa
akaabaaaadaaaaaaabeaaaaaaaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaabaaaaaadcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaa
acaaaaaabkaabaaaaaaaaaaadeaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaa
bkaabaaaaaaaaaaaenaaaaagccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaa
enaaaaahbcaabaaaabaaaaaabcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaa
aaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaa
akiacaaaaaaaaaaaapaaaaaaakiacaaaaaaaaaaaapaaaaaadcaaaaaodcaabaaa
abaaaaaaagiacaaaaaaaaaaaapaaaaaaagiacaaaaaaaaaaaapaaaaaaaceaaaaa
ifolbbdpomfblidnaaaaaaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaa
aaaaaaaaegaabaaaabaaaaaadcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaaadpabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaabeaaaaaggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaa
acaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaa
jgahbaaaaaaaaaaajgahbaaaaaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaa
bacaaaahccaabaaaaaaaaaaajgahbaaaacaaaaaajgahbaaaaaaaaaaaaaaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaackaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaa
abaaaaaaabeaaaaaaaaaiadpaaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaa
abaaaaaaabeaaaaaaaaaiadpcpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaa
diaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaadkiacaaaaaaaaaaaaoaaaaaa
bjaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaa
aaaaaaaabkaabaaaaaaaaaaaddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaajecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaa
aoaaaaaaabeaaaaaaaaaiadpdccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaabaaaaaackiacaaaaaaaaaaaaoaaaaaadiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaa
aaaaaaaaaoaaaaaaakiacaaaaaaaaaaaaoaaaaaadiaaaaahecaabaaaabaaaaaa
dkaabaaaaaaaaaaabkaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaa
abeaaaaaaaaaiaeadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaaaoaaaaakicaabaaaaaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpdkaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
ckaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaa
dlkklidpbjaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agijcaaaaaaaaaaaanaaaaaadiaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaa
fgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaa
aaaaaaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaalaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaaaaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaaaaaaaaajicaabaaaaaaaaaaaakiacaiaebaaaaaa
abaaaaaabiaaaaaaabeaaaaaaaaaiadpaoaaaaahhcaabaaaabaaaaaaegbcbaaa
afaaaaaapgbpbaaaafaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaehaaaaalbcaabaaaacaaaaaaegaabaaaacaaaaaa
aghabaaaafaaaaaaaagabaaaaaaaaaaackaabaaaacaaaaaaaaaaaaaihcaabaaa
adaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaaeaaaaaaehaaaaalccaabaaa
acaaaaaaegaabaaaadaaaaaaaghabaaaafaaaaaaaagabaaaaaaaaaaackaabaaa
adaaaaaaaaaaaaaihcaabaaaadaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaa
afaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaa
agaaaaaaehaaaaalicaabaaaacaaaaaaegaabaaaabaaaaaaaghabaaaafaaaaaa
aagabaaaaaaaaaaackaabaaaabaaaaaaehaaaaalecaabaaaacaaaaaaegaabaaa
adaaaaaaaghabaaaafaaaaaaaagabaaaaaaaaaaackaabaaaadaaaaaadcaaaaak
pcaabaaaabaaaaaaegaobaaaacaaaaaapgapbaaaaaaaaaaaagiacaaaabaaaaaa
biaaaaaabbaaaaakicaabaaaaaaaaaaaegaobaaaabaaaaaaaceaaaaaaaaaiado
aaaaiadoaaaaiadoaaaaiadoaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaa
pgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaadbaaaaahbcaabaaaabaaaaaa
abeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaadkaabaaaabaaaaaa
akaabaaaabaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaacaaaaaafgafbaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaacaaaaaadiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaakaabaaa
acaaaaaaapaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaaaaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTexture0] 2D
"ps_3_0
; 168 ALU, 8 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
def c9, 0.00781250, -0.00781250, 0.97000003, 0.25000000
def c10, 1.00000000, 0.00392157, 0.00001538, 0.00000001
def c11, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c12, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c13, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c14, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c15, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c11.x, c11.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
dp3_pp r0.w, v1, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, v1
dp3_pp r1.w, r1, r1
rsq_pp r1.w, r1.w
add_pp r0.z, r0, c10.x
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
mul_pp r2.xyz, r1.w, r1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r2.w, r1, r2
abs_pp r0.x, r2.w
mad_pp r0.y, r0.x, c13.x, c13
mad_pp r0.y, r0, r0.x, c12.w
add_pp r0.z, -r0.x, c10.x
mad_pp r0.y, r0, r0.x, c13.z
dp3_pp r0.x, v2, v2
rsq_pp r0.x, r0.x
mul_pp r4.xyz, r0.x, v2
dp3_pp r1.w, r1, r4
abs_pp r0.w, r1
add_pp r3.y, -r0.w, c10.x
mad_pp r3.x, r0.w, c13, c13.y
mad_pp r3.x, r3, r0.w, c12.w
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
rsq_pp r3.y, r3.y
mul_pp r0.y, r0, r0.z
cmp_pp r0.x, r2.w, c12.y, c12.z
mul_pp r0.z, r0.x, r0.y
mad_pp r0.z, -r0, c11.x, r0.y
mad_pp r0.z, r0.x, c13.w, r0
mad_pp r0.w, r3.x, r0, c13.z
rcp_pp r3.y, r3.y
mul_pp r3.x, r0.w, r3.y
cmp_pp r0.w, r1, c12.y, c12.z
mul_pp r3.y, r0.w, r3.x
mad_pp r0.y, -r3, c11.x, r3.x
mad_pp r0.x, r0.w, c13.w, r0.y
min_pp r0.y, r0.x, r0.z
max_pp r0.x, r0, r0.z
mad_pp r0.y, r0, c14.x, c14
frc_pp r0.y, r0
mad_pp r3.y, r0, c14.z, c14.w
mad_pp r3.x, r0, c14, c14.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c14, c14.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.w, c8.x, c8.x
mul_pp r0.x, r0.y, r0
mul_pp r3.w, r3.y, r0.x
mad_pp r3.xyz, -r1, r2.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.y, r0, r3
add r2.w, r0, c12.x
rcp r0.x, r2.w
dp3_pp_sat r2.w, r1, r2
max r0.y, r0, c11.z
mul r0.x, r0.w, r0
mul r0.x, r0, r0.y
mul r0.x, r0, r3.w
mul r3.x, r0, c15
add_pp r0.xyz, r2, r4
mul r2.y, r2.w, c11.x
dp3_pp r2.x, r0, r0
rsq_pp r2.x, r2.x
mul_pp r0.xyz, r2.x, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.x, r1, r4
mul r2.z, r2.w, r2.y
rcp r0.y, r0.y
mul r0.x, r2.y, r2
mul r0.z, r0.y, r2
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c11.z
min r2.y, r0, c10.x
add_pp r0.y, -r0.x, c10.x
pow_pp r1, r0.y, c7.x
mul_pp r0.x, c5, c5
mul_pp r1.y, r2.w, r0.x
mov r0.y, c6.x
mov_pp r0.z, r1.x
add r0.y, c10.x, -r0
mad_sat r0.y, r0, r0.z, c6.x
mul_pp r0.z, r2.w, r1.y
pow_pp r1, r2.w, c15.y
max r0.y, r0, c11.z
mul r0.y, r0, r2
rcp r2.y, r0.z
mul_pp r0.z, r2.w, r2.w
add r0.z, r0, c11.y
mul r2.y, r0.z, r2
mov_pp r0.z, r1.x
pow r1, c15.z, r2.y
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c15.y
rcp r0.x, r0.x
mul r0.x, r0, r0.z
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
mul r0.y, r0, r0.x
add r0.x, r0.w, c11.w
rcp r1.y, r0.x
mul r0.w, r0, r1.y
mad r0.w, -r0, c14.y, r3.x
add r1.w, r0, c10.x
mul_pp r0.z, r2.w, r2.x
max_pp r0.z, r0, c11
add r0.z, r0, c12.x
rcp_pp r0.z, r0.z
mul_pp r0.y, r0, r0.z
mul_pp r0.xyz, r0.y, c4
mul_pp r0.xyz, r0, r1.x
mul_pp r2.xyz, r0, c2
texld r0.xyz, v0, s2
mul_pp r1.xyz, r0, c3
max r0.w, r2, c11.z
mul_pp r1.xyz, r1, c2
mul_pp r1.xyz, r1, r0.w
mad_pp r2.xyz, r1, r1.w, r2
add r0.xyz, v4, c9.xyyw
texld r0, r0, s4
dp4 r3.w, r0, c10
add r0.xyz, v4, c9.yxyw
texld r0, r0, s4
dp4 r3.z, r0, c10
add r1.xyz, v4, c9.yyxw
texld r1, r1, s4
dp4 r3.y, r1, c10
add r0.xyz, v4, c9.x
texld r0, r0, s4
dp3 r1.x, v4, v4
rsq r1.x, r1.x
dp4 r3.x, r0, c10
rcp r0.x, r1.x
mul r0.x, r0, c0.w
mad r0, -r0.x, c9.z, r3
mov r1.x, c1
cmp r1, r0, c10.x, r1.x
dp3 r0.x, v3, v3
dp4_pp r0.y, r1, c9.w
texld r0.x, r0.x, s5
mul r0.x, r0, r0.y
mul_pp r0.xyz, r0.x, r2
mul_pp oC0.xyz, r0, c11.x
mov_pp oC0.w, c11.z
"
}

SubProgram "xbox360 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 3 [_Color]
Vector 2 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 4 [cSpecular]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
Float 5 [roughnessV]
SetTexture 0 [_ShadowMapTexture] CUBE
SetTexture 1 [_LightTexture0] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_BumpMap] 2D
SetTexture 4 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 117.33 (88 instructions), vertex: 0, texture: 32,
//   sequencer: 34, interpolator: 20;    12 GPRs, 15 threads,
// Performance (if enough threads): ~117 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.

"ps_360
backbbaaaaaaacliaaaaafhiaaaaaaaaaaaaaaceaaaaacfmaaaaacieaaaaaaaa
aaaaaaaaaaaaacdeaaaaaabmaaaaacchppppadaaaaaaaaaoaaaaaabmaaaaaaaa
aaaaaccaaaaaabdeaaadaaadaaabaaaaaaaaabeaaaaaaaaaaaaaabfaaaacaaad
aaabaaaaaaaaabfiaaaaaaaaaaaaabgiaaacaaacaaabaaaaaaaaabfiaaaaaaaa
aaaaabhfaaacaaaaaaabaaaaaaaaabfiaaaaaaaaaaaaabijaaacaaabaaabaaaa
aaaaabfiaaaaaaaaaaaaabjkaaadaaabaaabaaaaaaaaabeaaaaaaaaaaaaaabkj
aaadaaacaaabaaaaaaaaabeaaaaaaaaaaaaaablcaaadaaaaaaabaaaaaaaaabme
aaaaaaaaaaaaabneaaadaaaeaaabaaaaaaaaabeaaaaaaaaaaaaaabobaaacaaae
aaabaaaaaaaaabfiaaaaaaaaaaaaabolaaacaaagaaabaaaaaaaaabpeaaaaaaaa
aaaaacaeaaacaaahaaabaaaaaaaaabpeaaaaaaaaaaaaacalaaacaaaiaaabaaaa
aaaaabpeaaaaaaaaaaaaacbfaaacaaafaaabaaaaaaaaabpeaaaaaaaafpechfgn
haengbhaaaklklklaaaeaaamaaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaakl
aaabaaadaaabaaaeaaabaaaaaaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgj
ghgihefagphdgjhegjgpgofcgbgoghgfaafpemgjghgihefdgigbgegphheegbhe
gbaafpemgjghgihefegfhihehfhcgfdaaafpengbgjgofegfhiaafpfdgigbgegp
hhengbhafegfhihehfhcgfaaaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpfdhagf
gdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgbhdaaklaaaaaaad
aaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeogbhjgbhcaahcgphf
ghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfddcodaaaklaaaaaaaa
aaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaiaaaaaaepibaaaalaaaaaaaaaeaaaaaaaaaaaaeakfaabpaabp
aaaaaaabaaaapafaaaaahbfbaaaahcfcaaaahdfdaaaahefeaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadphifbomeamjapnlaaaaaaaaaaaaaaaamaaaaaaadpmjanke
doccpjiddplikkdllmjjgodalofjdeieeaejapnlmaejapnldnjibgchdpmaaaaa
aaaaaaaadoiaaaaalmaaaaaadmaaaaaadpaaaaaadooggggglpiaaaaadpbbolif
dnlifbomeaiaaaaadbnfpiimdhibabicdliaiaibdpiaaaaaaaaagaajgaapbcaa
bcaaaaaaafaagabfgablbcaabcaaafffaaaaaaaagacbmeaabcaaaaaaaaaagach
gacnbcaabcaaaaaaaaaagaddgadjbcaabcaaaaaaaaaagadpgaefbcaabcaaaaaa
aaaagaelgafbbcaabcaaaaaaaaaagafhgafnbcaabcaaaaaaaaaagagdaaaaccaa
aaaaaaaamiaiaaabaaloloaapaadadaabeahaaafaagclbgmkaaepnaeaebhahag
aalolmlbiaaepnpnbeahaaadaamnlmlbkaaepnaeaecpahadaahgmagmncadadpn
beapaaagaapmgcmgpcagagaeaeepahafaaimgfgmncafafpnmiapaaahaakgmnaa
pcahahaaemieacalaablblmgocahahifemieaeaiaablblmgocagagidembeaiaj
aablblmgocadadigemceaiakaablblmgocafafihmiadaaalaagnlblbmlahaipm
miadaaaiaagngmlbmlagaipmmiadaaajaagnbllbmladaepmmiadaaakaagnbllb
mlafacpmbaeidaabbpbppomhaaaaeaaabacihaabbpbppeehaaaaeaaapmbifacb
bpbppppiaaaaeaaadidifaabbpbppompaaaaeaaajaaigbgbbpbppgiiaaaamaaa
jaaiibabbpbppgiiaaaamaaajaaijbcbbpbppgiiaaaamaaajaaikbebbpbppgii
aaaamaaamiabaaaaaaloloaapaacacaamiacaaaaaaloloaapaaeaeaamiaeaaaa
aaloloaapaababaabeabaaaeabhhaagmipakppagaeicakaeaahhaablipajpppp
beaeaaaeaahhaablipaippaaamiiagaeaahhaagmipagpppjfielaaajaagcgcmg
oaafafiaaiehajagaamgmagmmbaaabaikaieaaaaaalololbpaagagiaficpaaab
aamapmgmkaajpoiamiabaaaaaegngnblnbababppfiejaaadaalalamgobababia
aachaaafaalbmaglobaaacadbeapaaaiaaaaaglbobagaaaaaeeoaaagaapmpmgm
oaaiafaakacpaaacaablaagmofaiaeiamiapaaacaaaagmblioacabppfiebaaaa
aamdmdmgpaagagiabeaiaaaaaakhblmgkpacpmaaamedakakaalamglbobabaaaa
mjaiaaacaaloloaapaakafaaenceaaaeaalolomgpaakaiabemebaaahaalolobl
paakafabmiahaaabaabgbfaaobajaaaamiahaaajaemagmmaolakahafaaccaeaa
aagmblmgcbafpoaefibbaaalaalbblgmobaeaciaaibhaeacaabfmagmibahadaf
kibhagacaamamaebibacacafbeboaaaaaaabgmgmobagaaahbfecaaaaaalomdmg
naafaapmbebpaaacaaaamgggobacaeaaemieaeaaaablmglbkaacpoaaliboaaal
aapmmgaambaeaeppeaccaaafaablblgmobalaliakibcaaahaaloloebnaakaiah
diehahaeaamabhgmobalaeaaembeaaafacblbllbkaalppaemjaiaaaaaablmggm
mlakahagkiccagaaaamgblaaidaepppkbebjafadaelalalbofahahaamiamaaag
aakmgmgmilihplpmmiahaaaiaemalbmaolakahaiemedaaaaaelablmgkaihppaa
kabiaaabaalologmpaajaiiamiamaaagaaagkmlbmlagihplmiagaaaeaabglmlb
mlagihpkkacdaaagaalamflbobagafiadiciafaeaablmglbkcabpmagemimabaf
aakmgmgmkbaapkagbeciafabaalbblgmobafabaebiibabaeaablmggbobabadaf
miaiaaabaagmblaaobaeabaakmbbafaeaablblmambabaapnkmchafaaaamnleab
mbaeaapnmiahaaaeaabcmjaaobafaeaamiadaaagaamemgaakaaeplaamiadaaag
aalabimeolagadaabebiadadaagmlbgbodagagagmiajaaadaagpmgmgiladpkpn
miajaaadaabiaaaaoiadaaaamiajaaadaabilbbliladpjplmebiaaabaegmblgm
kaafppadmaboaeaaaalbpmgmkbaaaeadembbaaaeaalbgmgmobaeaeaamabbadaa
aagmgmblobaeaaadmiapaaaaaaffhbaaobaaadaamiaiaaaaaablblaaoaabaaaa
miahaaaaaamamaaakbaaacaamiahaaaaaamablmaolacaaaamiahmaaaaamgmaaa
obabaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTexture0] 2D
"sce_fp_rsx // 181 instructions using 5 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840005000000
[Offsets]
9
_LightPositionRange 1 0
00000620
_LightShadowData 1 0
00000800
_LightColor0 2 0
00000b1000000990
_Color 1 0
00000540
cSpecular 1 0
00000a80
roughnessV 1 0
000002c0
freBias 2 0
000004b000000490
frePow 1 0
00000460
orenNayar 1 0
000006f0
[Microcode]
2896
0e020101c8011c9dc8000001c8003fe10e000300c8041c9d28020000c8000001
00003c000000bc000000000000000000940617005c011c9dc8000001c8003fe1
068c0440ce0c1c9d00020000aa020000000040000000bf800000000000000000
10880240ab181c9cab180000c80000011c06030020041c9d20020000c8000001
0000bc0000003c0000000000000000001e001708c8001c9dc8000001c8000001
10040600c8001c9dc8020001c800000100003f8080813b8001823781f88c31d5
1e001708f20c1c9dc8000001c800000108040600c8001c9dc8020001c8000001
00003f8080813b8001823781f88c31d5ae8e3940c8011c9dc8000029c800bfe1
02800440c9181c9fc9180001ff100003ce883940c8011c9dc8000029c800bfe1
02800340c9001c9d00020000c800000100003f80000000000000000000000000
0e903940c91c1c9dc8000029c80000010e920340c9101c9dc9200001c8000001
088c3b4001003c9cc9000001c80000010e803940c9241c9dc8000029c8000001
108c8540c9101c9dc9000001c80000010e923940c9181c9dc8000029c8000001
0e000300c8041c9da0020000c80000010000bc0000003c000000000000000000
10920540c9241c9dc9200001c800000108868540c9101c9dc9240001c8000001
10900540c9101c9dc9240001c80000010e8e0440ff201c9dc9240003c9100001
0e8c0440c9241c9fff240001c920000110868540c9241c9dc9200001c8000001
1e001708c8001c9dc8000001c800000104040600c8001c9dc8020001c8000001
00003f8080813b8001823781f88c31d5088c0540c91c1c9dc9180001c8000001
10000100c90c1c9dc8001001c800000102060200fe001c9dff0c0001c8000001
10060200c8001c9d550c0001c800000102003a00fe0c1c9dff180001c8000001
10003a00000c1c9cff180001c8000001028e024000021c9c00020000c8000001
00000000000000000000000000000000108c0240c90c1c9dc90c0001c8000001
02820240ff0c1c9dc91c0001c800000110020100c8041c9dc8000001c8000001
02820240ff0c1c9dc9040001c800000104001a00c9041c9dc8000001c8000001
08900340ff203c9f00020000c800000100003f80000000000000000000000000
02000800c8001c9dfe000001c800000108001d00ff0c1c9dc8002001c8000001
92061706c8011c9dc8000001c8003fe104000400ff181c9dc8000001c8000003
08001c0054001c9dc8000001c80000010e020101c8011c9dc8000001c8003fe1
10000200011c1c9c54002001c800000102820900ff201c9d00020000c8000001
0000000000000000000000000000000002040200aa001c9c00020000c8000001
aa3a3fb800000000000000000000000002820340c9041c9f00020000c8000001
00003f8000000000000000000000000004001c00c8081c9dc8000001c8000001
04003a00c8001c9dfe000001c800000102821d00c9041c9dc8000001c8000001
04000200c8001c9dfe0c0001c800000102820200c9041c9d00020000c8000001
0000000000000000000000000000000002821c40c9041c9dc8000001c8000001
1000040001041c9c000200020104000000000000000000000000000000000000
08008300fe001c9d00020000c800000100000000000000000000000000000000
0204090054001c9d00020000c800000100000000000000000000000000000000
1000080000001c9caa020000c80000010000000000003f800000000000000000
02000200c8081c9dfe000001c8000001108c020000001c9caa000000c8000001
8e001704c8011c9dc8000001c8003fe10e8e0240c8001c9dc8020001c8000001
000000000000000000000000000000000e000300c8041c9d00020000c8000001
00003c000000000000000000000000001e001708c8001c9dc8000001c8000001
02040600c8001c9dc8020001c800000100003f8080813b8001823781f88c31d5
ee000100c8011c9dc8000001c8003fe110000500c8041c9dc8040001c8000001
02000500c8001c9dc8000001c800000104001b00fe001c9dc8000001c8000001
02820240ff0c1c9d550c0001c800000102080900c9041c9d00020000c8000001
0000000000000000000000000000000008083a00fe021c9daa000000c8000001
00000000000000000000000000000000108e030000101c9c00020000c8000001
51ec3db80000000000000000000000001000020054101c9d00020000c8000001
51ec3f780000000000000000000000001f7e4a00c8081c9dfe000001c8000001
10840440c9203c9d00020000aa0200006000bc9920003d980000000000000000
028a0340ff243c9f54020001c8000001000000000000000000003f8000000000
108a0a40c9201c9daa020000c800000100000000000000000000000000000000
048a024000021c9c00020000c800000100000000000000000000000000000000
02900440ff203c9dff080001000200004000be59000000000000000000000000
04901b4055201c9dc8000001c800000102900440ff203c9dc920000100020000
00003fc900000000000000000000000010880440c9243c9daa02000054020001
000000006000bc9920003d980000000002860440ff243c9dff10000100020000
4000be5900000000000000000000000004881b40c9141c9dc8000001c8000001
028a0440ff243c9dc90c00010002000000003fc9000000000000000000000000
10880a40c9241c9daa020000c800000100000000000000000000000000000000
0202170a00001c9cc8000001c80000011e00010000021c9cc8000001c8000001
0000000000000000000000000000000002883a40c9201c9dab200000c8000001
1e00010000021c88c8000001c800000100003f80000000000000000000000000
10840240c9141c9d01101000c800000104863a4001141c9cab100000c8000001
02860340c9101c9dff080003c800000110840240c9101c9dab0c1000c8000001
10840340ab0c1c9cc9080003c800000102880440ff141c9d00020000c90c0001
0000404900000000000000000000000010880440c9101c9d00020000c9080001
0000404900000000000000000000000002860940c9101c9dff100001c8000001
10040300ab141c9c00020000c800000151ec3db8000000000000000000000000
08882340c90c1c9dc8000001c8000001028a0840c9101c9dff100001c8000001
02000600c8001c9d00020000c800000100003e80000000000000000000000000
0204090055181c9d00020000c800000100000000000000000000000000000000
08802240c9141c9dc8000001c800000110043a00ab141c9cfe080001c8000001
0e860240c91c1c9dc8020001c800000100000000000000000000000000000000
02040200fe081c9dc8080001c800000110882340c9141c9dc8000001c8000001
028a3a40ff101c9d55000001c800000110040300ab141c9c00020000c8000001
eb853f11000000000000000000000000028a024055101c9dc9140001c8000001
108c3a40c9181c9dff1c0001c800000108840240ff181c9d000c0000c8000001
1e7e7d00c8001c9dc8000001c800000102040200c8081c9dc9140001c8000001
10003a00ab141c9cfe085001c80000011004040000081c9cc8020001c8000003
00000000000000000000000066663ee60e82024055081c9dc8020001c8000001
0000000000000000000000000000000010880900c90c1c9d00020000c8000001
000000000000000000000000000000000e860240c90c1c9dff100001c8000001
10840300c8081c9d00020000c800000100003f80000000000000000000000000
0e860240c90c1c9dff080001c80000011080020000041c9c00000000c8000001
0e800440c9041c9dc8020001c90c000100000000000000000000000000000000
0e800240ff001c9dc9001001c80000011081014000021c9cc8000001c8000001
00000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
BindCB "UnityShadows" 2
SetTexture 0 [_BumpMap] 2D 3
SetTexture 1 [_MainTex] 2D 2
SetTexture 2 [_SpecularMap] 2D 4
SetTexture 3 [_LightTexture0] 2D 1
SetTexture 4 [_ShadowMapTexture] CUBE 0
// 126 instructions, 4 temp regs, 0 temp arrays:
// ALU 88 float, 0 int, 2 uint
// TEX 8 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedoicnieenkecnfhljbdfgnbpcolamonfbabaaaaaakabbaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefciabaaaaa
eaaaaaaacaaeaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaaacaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafidaaaaeaahabaaaaeaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaa
aaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaak
icaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaa
aaaaaaaaelaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaa
abeaaaaadagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaak
bcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaa
iedefjlodcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaa
abaaaaaaabeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaa
abaaaaaaabeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaaj
ecaabaaaacaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejea
dbaaaaaiicaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaa
dgcaaaaficaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaa
dkaabaaaacaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaa
acaaaaaabkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaa
egbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaa
acaaaaaadiaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaa
baaaaaahbcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaa
acaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
deaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaak
ccaabaaaaaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaa
chbgjidndcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaa
adaaaaaaabeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaiaibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaa
akaabaiambaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaama
abeaaaaanlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaia
ebaaaaaaadaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaa
aaaaaaaaabaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
dcaaaaajccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaaddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaa
deaaaaahccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaag
ccaabaaaaaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaa
bcaabaaaacaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaa
bkaabaaaaaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaa
akiacaaaaaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaa
alaaaaaaagiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaa
aaaaaaaaaoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaa
dcaaaaakecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadp
abeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaa
ggggogdodiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaa
fgaobaaaacaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaa
aaaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaa
jgahbaaaacaaaaaajgahbaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaadkaabaaa
abaaaaaaabeaaaaaaaaaaaeadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
ckaabaaaaaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
bkaabaaaabaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaa
bkaabaaaabaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
abaaaaaadcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaomfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaj
ecaabaaaaaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadp
dccaaaakecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaa
aaaaaaaaakaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaa
aaaaaaaadcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaa
aaaaaaaaakaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaa
abaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaa
aaaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaa
aoaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
dkaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaaaoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaa
diaaaaahocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaai
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaafaaaaaaegbcbaaaafaaaaaaelaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaa
aaaaaaaadkiacaaaabaaaaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaomfbhidpaaaaaaakhcaabaaaabaaaaaaegbcbaaaafaaaaaa
aceaaaaaaaaaaadmaaaaaadmaaaaaadmaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egacbaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaabbaaaaakbcaabaaa
abaaaaaaegaobaaaabaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhimpinfdb
aaaaaaakhcaabaaaacaaaaaaegbcbaaaafaaaaaaaceaaaaaaaaaaalmaaaaaalm
aaaaaadmaaaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaa
aeaaaaaaaagabaaaaaaaaaaabbaaaaakccaabaaaabaaaaaaegaobaaaacaaaaaa
aceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbaaaaaaakhcaabaaaacaaaaaa
egbcbaaaafaaaaaaaceaaaaaaaaaaalmaaaaaadmaaaaaalmaaaaaaaaefaaaaaj
pcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaa
bbaaaaakecaabaaaabaaaaaaegaobaaaacaaaaaaaceaaaaaaaaaiadpibiaiadl
icabibdhimpinfdbaaaaaaakhcaabaaaacaaaaaaegbcbaaaafaaaaaaaceaaaaa
aaaaaadmaaaaaalmaaaaaalmaaaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaa
acaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaabbaaaaakicaabaaaabaaaaaa
egaobaaaacaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbdbaaaaah
pcaabaaaabaaaaaaegaobaaaabaaaaaapgapbaaaaaaaaaaadhaaaaanpcaabaaa
abaaaaaaegaobaaaabaaaaaaagiacaaaacaaaaaabiaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpbbaaaaakicaabaaaaaaaaaaaegaobaaaabaaaaaa
aceaaaaaaaaaiadoaaaaiadoaaaaiadoaaaaiadobaaaaaahbcaabaaaabaaaaaa
egbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaaagaabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaaaeadiaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab
"
}

SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}

SubProgram "opengl " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLSL"
}

SubProgram "d3d9 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_LightTexture0] CUBE
"ps_3_0
; 169 ALU, 9 TEX
dcl_2d s0
dcl_2d s2
dcl_2d s3
dcl_cube s4
dcl_2d s5
dcl_cube s6
def c9, 0.00781250, -0.00781250, 0.97000003, 0.25000000
def c10, 1.00000000, 0.00392157, 0.00001538, 0.00000001
def c11, 2.00000000, -1.00000000, 0.00000000, 0.56999999
def c12, 0.09000000, 0.00000000, 1.00000000, -0.21215820
def c13, -0.01872253, 0.07427979, 1.57031250, 3.14062500
def c14, 0.15917969, 0.50000000, 6.28125000, -3.14062500
def c15, 0.44999999, 4.00000000, 2.71828198, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
texld r0.yw, v0.zwzw, s0
mad_pp r0.xy, r0.wyzw, c11.x, c11.y
mul_pp r0.z, r0.y, r0.y
mad_pp r0.z, -r0.x, r0.x, -r0
add_pp r0.z, r0, c10.x
rsq_pp r0.z, r0.z
rcp_pp r0.z, r0.z
dp3_pp r0.w, r0, r0
dp3_pp r1.x, v1, v1
rsq_pp r1.x, r1.x
mul_pp r2.xyz, r1.x, v1
rsq_pp r0.w, r0.w
mul_pp r1.xyz, r0.w, r0
dp3_pp r0.x, r2, r2
rsq_pp r0.x, r0.x
mul_pp r2.xyz, r0.x, r2
dp3_pp r0.w, r1, r2
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
mul_pp r4.xyz, r0.y, v2
dp3_pp r1.w, r1, r4
mad_pp r3.xyz, -r1, r0.w, r2
mad_pp r0.xyz, -r1, r1.w, r4
dp3_pp r0.x, r0, r3
abs_pp r0.y, r0.w
add_pp r2.w, -r0.y, c10.x
mad_pp r0.z, r0.y, c13.x, c13.y
mad_pp r0.z, r0, r0.y, c12.w
rsq_pp r2.w, r2.w
mad_pp r0.y, r0.z, r0, c13.z
rcp_pp r2.w, r2.w
mul_pp r0.z, r0.y, r2.w
cmp_pp r0.y, r0.w, c12, c12.z
abs_pp r0.w, r1
mul_pp r2.w, r0.y, r0.z
mad_pp r0.z, -r2.w, c11.x, r0
add_pp r3.x, -r0.w, c10
mad_pp r2.w, r0, c13.x, c13.y
mad_pp r2.w, r2, r0, c12
rsq_pp r3.x, r3.x
mad_pp r0.y, r0, c13.w, r0.z
mad_pp r0.w, r2, r0, c13.z
rcp_pp r3.x, r3.x
mul_pp r2.w, r0, r3.x
cmp_pp r0.w, r1, c12.y, c12.z
mul_pp r3.x, r0.w, r2.w
mad_pp r0.z, -r3.x, c11.x, r2.w
mad_pp r0.z, r0.w, c13.w, r0
mul_pp r2.w, c8.x, c8.x
add r0.w, r2, c12.x
min_pp r3.x, r0.z, r0.y
rcp r0.w, r0.w
mul r0.w, r2, r0
max r0.x, r0, c11.z
mul r4.w, r0, r0.x
mad_pp r3.x, r3, c14, c14.y
frc_pp r0.w, r3.x
max_pp r0.x, r0.z, r0.y
mad_pp r3.y, r0.w, c14.z, c14.w
mad_pp r3.x, r0, c14, c14.y
sincos_pp r0.xy, r3.y
frc_pp r0.z, r3.x
mad_pp r0.z, r0, c14, c14.w
sincos_pp r3.xy, r0.z
rcp_pp r0.x, r0.x
mul_pp r0.x, r0.y, r0
mul_pp r0.y, r3, r0.x
add r0.x, r2.w, c11.w
mul r0.y, r4.w, r0
rcp r0.x, r0.x
mul r0.x, r2.w, r0
dp3_pp_sat r2.w, r1, r2
pow_pp r3, r2.w, c15.y
mul r0.y, r0, c15.x
mad r0.w, -r0.x, c14.y, r0.y
add_pp r0.xyz, r2, r4
mul r2.y, r2.w, c11.x
dp3_pp r2.x, r0, r0
rsq_pp r2.x, r2.x
mul_pp r0.xyz, r2.x, r0
dp3_pp_sat r0.y, r4, r0
dp3_pp_sat r2.x, r1, r4
mul r2.z, r2.w, r2.y
rcp r0.y, r0.y
mul r0.x, r2.y, r2
mul r0.z, r0.y, r2
mul r0.x, r0, r0.y
min r0.y, r0.x, r0.z
max_pp r0.x, r1.w, c11.z
min r2.y, r0, c10.x
add_pp r0.y, -r0.x, c10.x
pow_pp r1, r0.y, c7.x
mul_pp r0.x, c5, c5
mul_pp r1.y, r2.w, r0.x
mov r0.y, c6.x
mov_pp r0.z, r1.x
add r0.y, c10.x, -r0
mad_sat r0.y, r0, r0.z, c6.x
mul_pp r0.z, r2.w, r1.y
rcp r1.x, r0.z
max r0.y, r0, c11.z
mul_pp r0.z, r2.w, r2.w
add r0.z, r0, c11.y
mul r0.z, r0, r1.x
pow r1, c15.z, r0.z
mov_pp r0.z, r3.x
mul r0.x, r0, r0.z
mov r0.z, r1.x
mul r0.x, r0, c15.y
rcp r0.x, r0.x
mul r0.y, r0, r2
mul_pp r1.x, r2.w, r2
mul r0.x, r0, r0.z
max_pp r0.z, r1.x, c11
texld r1.xw, v0, s3
mul r0.x, r0, r1.w
add r0.z, r0, c12.x
rcp_pp r0.z, r0.z
mul r0.x, r0.y, r0
mul_pp r0.x, r0, r0.z
mul_pp r2.xyz, r0.x, c4
mul_pp r1.xyz, r2, r1.x
mul_pp r2.xyz, r1, c2
add r1.xyz, v4, c9.yyxw
texld r1, r1, s4
dp4 r3.y, r1, c10
add r4.x, r0.w, c10
add r0.xyz, v4, c9.xyyw
texld r0, r0, s4
dp4 r3.w, r0, c10
add r0.xyz, v4, c9.yxyw
texld r0, r0, s4
dp4 r3.z, r0, c10
dp3 r0.w, v4, v4
rsq r1.x, r0.w
add r0.xyz, v4, c9.x
texld r0, r0, s4
rcp r1.x, r1.x
dp4 r3.x, r0, c10
mul r0.x, r1, c0.w
texld r1.xyz, v0, s2
mul_pp r1.xyz, r1, c3
mov r1.w, c1.x
mad r0, -r0.x, c9.z, r3
cmp r0, r0, c10.x, r1.w
dp4_pp r0.y, r0, c9.w
dp3 r0.x, v3, v3
max r1.w, r2, c11.z
mul_pp r1.xyz, r1, c2
mul_pp r1.xyz, r1, r1.w
mad_pp r1.xyz, r1, r4.x, r2
texld r0.w, v3, s6
texld r0.x, r0.x, s5
mul r0.x, r0, r0.w
mul r0.x, r0, r0.y
mul_pp r0.xyz, r0.x, r1
mul_pp oC0.xyz, r0, c11.x
mov_pp oC0.w, c11.z
"
}

SubProgram "xbox360 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 3 [_Color]
Vector 2 [_LightColor0]
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 4 [cSpecular]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
Float 5 [roughnessV]
SetTexture 0 [_ShadowMapTexture] CUBE
SetTexture 1 [_LightTexture0] CUBE
SetTexture 2 [_LightTextureB0] 2D
SetTexture 3 [_MainTex] 2D
SetTexture 4 [_BumpMap] 2D
SetTexture 5 [_SpecularMap] 2D
// Shader Timing Estimate, in Cycles/64 pixel vector:
// ALU: 120.00 (90 instructions), vertex: 0, texture: 36,
//   sequencer: 36, interpolator: 20;    18 GPRs, 9 threads,
// Performance (if enough threads): ~120 cycles per vector
// * Texture cycle estimates are assuming an 8bit/component texture with no
//     aniso or trilinear filtering.
// * Warning: high GPR count may result in poorer than estimated performance.

"ps_360
backbbaaaaaaacoaaaaaafjmaaaaaaaaaaaaaaceaaaaacieaaaaackmaaaaaaaa
aaaaaaaaaaaaacfmaaaaaabmaaaaacepppppadaaaaaaaaapaaaaaabmaaaaaaaa
aaaaaceiaaaaabeiaaadaaaeaaabaaaaaaaaabfeaaaaaaaaaaaaabgeaaacaaad
aaabaaaaaaaaabgmaaaaaaaaaaaaabhmaaacaaacaaabaaaaaaaaabgmaaaaaaaa
aaaaabijaaacaaaaaaabaaaaaaaaabgmaaaaaaaaaaaaabjnaaacaaabaaabaaaa
aaaaabgmaaaaaaaaaaaaabkoaaadaaabaaabaaaaaaaaabmaaaaaaaaaaaaaabna
aaadaaacaaabaaaaaaaaabfeaaaaaaaaaaaaaboaaaadaaadaaabaaaaaaaaabfe
aaaaaaaaaaaaabojaaadaaaaaaabaaaaaaaaabmaaaaaaaaaaaaaabplaaadaaaf
aaabaaaaaaaaabfeaaaaaaaaaaaaacaiaaacaaaeaaabaaaaaaaaabgmaaaaaaaa
aaaaacbcaaacaaagaaabaaaaaaaaacbmaaaaaaaaaaaaaccmaaacaaahaaabaaaa
aaaaacbmaaaaaaaaaaaaacddaaacaaaiaaabaaaaaaaaacbmaaaaaaaaaaaaacdn
aaacaaafaaabaaaaaaaaacbmaaaaaaaafpechfgnhaengbhaaaklklklaaaeaaam
aaabaaabaaabaaaaaaaaaaaafpedgpgmgphcaaklaaabaaadaaabaaaeaaabaaaa
aaaaaaaafpemgjghgiheedgpgmgphcdaaafpemgjghgihefagphdgjhegjgpgofc
gbgoghgfaafpemgjghgihefdgigbgegphheegbhegbaafpemgjghgihefegfhihe
hfhcgfdaaaklklklaaaeaaaoaaabaaabaaabaaaaaaaaaaaafpemgjghgihefegf
hihehfhcgfecdaaafpengbgjgofegfhiaafpfdgigbgegphhengbhafegfhihehf
hcgfaafpfdhagfgdhfgmgbhcengbhaaagdfdhagfgdhfgmgbhcaagghcgfecgjgb
hdaaklklaaaaaaadaaabaaabaaabaaaaaaaaaaaagghcgffagphhaagphcgfgoeo
gbhjgbhcaahcgphfghgigogfhdhdfgaahahdfpddfpdaaadccodacodcdadddfdd
codaaaklaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaabeabpiaacaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiaaaaaafbmbaaabbaaaaaaaaaeaaaaaaaa
aaaaeakfaabpaabpaaaaaaabaaaapafaaaaahbfbaaaahcfcaaaahdfdaaaahefe
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadphifbommaejapnleaaaaaaaaaaaaaaa
maaaaaaaeaejapnllofjdeiedpmjankednjibgcheamjapnlaaaaaaaadoiaaaaa
lmjjgodalpiaaaaaeaiaaaaadpmaaaaadpbbolifdnlifbomdpaaaaaadooggggg
lmaaaaaadmaaaaaadplikkdldoccpjiddbnfpiimdhibabicdliaiaibdpiaaaaa
aaaagaajgaapbcaabcaaaaaaaaaagabfgablbcaabcaaafffaabfdacbaaaabcaa
meaaaaaaaaaagacegackbcaabcaaaaaaaaaagadagadgbcaabcaaaaaaaaaagadm
gaecbcaabcaaaaaaaaaagaeigaeobcaabcaaaaaaaaaagafegafkbcaabcaaaaaa
aaaagagagaggbcaaccaaaaaamiaiaaabaaloloaapaadadaabeahaaafaamagnmg
kaaepoaeaebhaiagaalolmlbiaaepopobeahaaahaamnlmlbkaaepoaeaecpaiad
aakgmnlbncadadpobeapaaahaahgmagmpcahahaeaeepaiagaapmgclbncagagpo
beepamaiaaimgfblpcaiaiademipacafaakgmnmgpcafafidmiadaaamaagnblbl
mladacpmemieacalaablblmgocafafiiembeadakaablblmgocagagihemceadaj
aablblmgocahahigemieadadaablblmgocaiaiifmiadaaalaagnblblmlafadpm
miadaaakaagnlbblmlagadpmmiadaaajaagngmblmlahadpmmiadaaadaagnblbl
mlaiacpmbafifaabbpbpppniaaaaeaaapmcihacbbpbppodpaaaaeaaajabigbib
bpbppoppaaaamaaabadigaabbpbppfmiaaaaeaaajaaiobgbbpbppgiiaaaamaaa
jaaipbebbpbppgiiaaaamaaajaajabcbbpbppgiiaaaamaaajaajbagbbpbppgii
aaaamaaadieidaabbpbpppnjaaaaeaaamiacaaaaaaloloaapaaeaeaamiabaaaa
aaloloaapaababaaaiieaaaaaalologmnaacacaimiadaaaeaagnmglbiladpjpm
fiegaaadaabllmmgkaaapniafiboaaaiaamgpmgmobaaaciamiabaaaiaegngnbl
nbaeaeppaiihababaagmmagmobaaabaeaiebaaaaaalololbpaababaefibbaaan
aablmggmoaabaaiamiaoaaanaapmgmaaobabaaaakaipaeabaaanangmoaanaiii
fiebaeaaaampmplbpaababibmiaoaaamaapmagaaobaeaeaamjaiaaacaamdmdaa
paamaiaamjaeaaakaamdmdaapaamanaamiabaaajaamdmdaapaamaiaamiahaaal
aebfgmbfolamajaikaecajakaamgmglboaakakiafibcaaabaalbblgmobakacia
miabaaaeaahhaaaakpbbppaamiacaaaeaahhaaaakpbappaamiaeaaaeaahhaaaa
kpapppaamiaiaaaeaahhaaaakpaoppaamiahaaacaabamaaakbagadaamiahaaac
aamamaaakbacacaaaibhakaaaabegmgmmbabaaafbfabaaababmdlogmnaaiaaag
aeicahajaamdmdblnaamanppbeaeaaaiaagmmgblicajplaaambfamaaaelablgm
iaijpppjbeapaaacaaaamggmmbacakafamcpaaamaaaalcmgmbamajpmemijakad
aelalagmofajajabmiafaaabaalagmgmilijpmplmiadaaaiaamelamgmlabijpk
kiinaiabaakomgebmbakakafkabpahaeaagmaagmofamaeiamiapaaaeaaaagmbl
ioaeabpplmelafagadbfbfaamaanamppmiamaaajaakmkmblmlaiijpkkaccahaa
aalolpmgpaalagiaembfajaaaalagmlbkbahpkademccajadaalbmgmgkcaaplad
aiepadaaaaolaagmobaaajabbebnaaabaadcbkgmobabakaakibdaiagaabklbma
iaaapkpnkicdaiagaalabiabmbagadpnemijaaadaemeblgmkaaippabmiagaaaa
aabglmlmolajahagbebgaaadaabbmblgobaiadaaeaceaaaaaalbmgblodaaaaid
kiilaaagaampbkebibaapoahembeagaaaagmmgmgobagafaddiidagaaaabjmgbl
kaagpnaadibdahaaaagnaamgoiaaaaaamiagaaaaaalmlblbilaaplpjmeibaaaa
aabllblbkaacpnaamacbababaakhbllbkpaeplaaemccagahaalblbblobadabaa
macpabaeaaaaaamgobahagaabeceaaaaaablblblkdabppaebeaeaaaaaamgmggm
odaaabaeamigaaadaalglmlbobaeabaflcceaaaaaablmgebmbaaaaagembcaaaa
aamglbgmobaaaaaabeabaaaaaalbgmgmobaaaaadaebhabaaaagmmamgkbaaaead
beahaaaaaamagmlbobaaafadaeboaaaaaapmpmlbkbaaacadmiaoaaaaaapmgmab
olacabaamiahmaaaaabfgmaaobaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
}

SubProgram "ps3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
Vector 0 [_LightPositionRange]
Vector 1 [_LightShadowData]
Vector 2 [_LightColor0]
Vector 3 [_Color]
Vector 4 [cSpecular]
Float 5 [roughnessV]
Float 6 [freBias]
Float 7 [frePow]
Float 8 [orenNayar]
SetTexture 0 [_BumpMap] 2D
SetTexture 2 [_MainTex] 2D
SetTexture 3 [_SpecularMap] 2D
SetTexture 4 [_ShadowMapTexture] CUBE
SetTexture 5 [_LightTextureB0] 2D
SetTexture 6 [_LightTexture0] CUBE
"sce_fp_rsx // 182 instructions using 5 registers
[Configuration]
24
ffffffff0007c020001fffe0000000000000840005000000
[Offsets]
9
_LightPositionRange 1 0
000005e0
_LightShadowData 1 0
00000860
_LightColor0 2 0
00000b2000000980
_Color 1 0
00000540
cSpecular 1 0
00000aa0
roughnessV 1 0
000002c0
freBias 2 0
0000049000000470
frePow 1 0
00000420
orenNayar 1 0
000008b0
[Microcode]
2912
0e020101c8011c9dc8000001c8003fe10e000300c8041c9d28020000c8000001
00003c000000bc000000000000000000940617005c011c9dc8000001c8003fe1
068c0440ce0c1c9d00020000aa020000000040000000bf800000000000000000
10880240ab181c9cab180000c80000011c06030020041c9d20020000c8000001
0000bc0000003c0000000000000000001e001708c8001c9dc8000001c8000001
10040600c8001c9dc8020001c800000100003f8080813b8001823781f88c31d5
1e001708f20c1c9dc8000001c800000108040600c8001c9dc8020001c8000001
00003f8080813b8001823781f88c31d5ae8e3940c8011c9dc8000029c800bfe1
02800440c9181c9fc9180001ff100003ce883940c8011c9dc8000029c800bfe1
02800340c9001c9d00020000c800000100003f80000000000000000000000000
0e903940c91c1c9dc8000029c80000010e920340c9101c9dc9200001c8000001
088c3b4001003c9cc9000001c80000010e803940c9241c9dc8000029c8000001
10868540c9101c9dc9000001c80000010e923940c9181c9dc8000029c8000001
0e000300c8041c9da0020000c80000010000bc0000003c000000000000000000
10900540c9241c9dc9200001c800000108868540c9101c9dc9240001c8000001
10920540c9101c9dc9240001c80000010e8e0440ff241c9dc9240003c9100001
0e8c0440c9241c9fff200001c9200001108c8540c9241c9dc9200001c8000001
1e001708c8001c9dc8000001c800000104040600c8001c9dc8020001c8000001
00003f8080813b8001823781f88c31d5088c0540c91c1c9dc9180001c8000001
10000100c9181c9dc8001001c800000102060200fe001c9dff180001c8000001
10060200c8001c9d550c0001c800000102003a00fe0c1c9dff0c0001c8000001
10003a00000c1c9cff0c0001c8000001028e024000021c9c00020000c8000001
0000000000000000000000000000000002820240ff181c9dc91c0001c8000001
10860240c9181c9dc9180001c800000102820240ff181c9dc9040001c8000001
04001a00c9041c9dc8000001c800000102000800c8001c9dfe000001c8000001
04000400ff0c1c9dc8000001c800000308001d00ff181c9dc8002001c8000001
92061706c8011c9dc8000001c8003fe108001c0054001c9dc8000001c8000001
10000200011c1c9c54002001c800000102040200aa001c9c00020000c8000001
aa3a3fb800000000000000000000000002820900ff241c9d00020000c8000001
0000000000000000000000000000000004001c00c8081c9dc8000001c8000001
02820340c9041c9f00020000c800000100003f80000000000000000000000000
08900340ff203c9f00020000c800000100003f80000000000000000000000000
02821d00c9041c9dc8000001c800000102820200c9041c9d00020000c8000001
0000000000000000000000000000000004901b4055201c9dc8000001c8000001
02821c40c9041c9dc8000001c800000104003a00c8001c9dfe000001c8000001
1000040001041c9c000200020104000000000000000000000000000000000000
08008300fe001c9d00020000c800000100000000000000000000000000000000
04000200c8001c9dfe0c0001c80000010204090054001c9d00020000c8000001
000000000000000000000000000000001000080000001c9caa020000c8000001
0000000000003f80000000000000000002000200c8081c9dfe000001c8000001
0e020101c8011c9dc8000001c8003fe11086020000001c9caa000000c8000001
8e001704c8011c9dc8000001c8003fe10e8e0240c8001c9dc8020001c8000001
000000000000000000000000000000000e000300c8041c9d00020000c8000001
00003c000000000000000000000000001e001708c8001c9dc8000001c8000001
02040600c8001c9dc8020001c800000100003f8080813b8001823781f88c31d5
f000170cc8011c9dc8000001c8003fe102000500c8041c9dc8040001c8000001
02001b00c8001c9dc8000001c800000102003a00fe021c9dc8000001c8000001
0000000000000000000000000000000002000200c8001c9d00020000c8000001
51ec3f780000000000000000000000001f7e4a00c8081c9d00000000c8000001
10880440c9243c9d00020000aa0200006000bc9920003d980000000000000000
08880a40ff241c9dc8020001c800000100000000000000000000000000000000
ee000100c8011c9dc8000001c8003fe102020500c8001c9dc8000001c8000001
10800240c9181c9d550c0001c80000010200170a00041c9cc8000001c8000001
02020900ff001c9d00020000c800000100000000000000000000000000000000
10800440c9203c9daa02000054020001000000006000bc9920003d9800000000
02900440ff203c9dff000001000200004000be59000000000000000000000000
10900100c9201c9dc8000001c80000010880030000041c9c00020000c8000001
51ec3db800000000000000000000000002900440ff203c9dc9200001aa020000
0000000000003fc9000000000000000008803a40ff0c1c9d55000001c8000001
0282024055001c9dc80c0001c8000001108a0a40c9201c9d00020000c8000001
0000000000000000000000000000000002883a40c9201c9dab200000c8000001
02900340ff243c9f00020000c800000100003f80000000000000000000000000
04881b40c9201c9dc8000001c8000001028a0440ff243c9dff10000100020000
4000be59000000000000000000000000028a0440ff243c9dc914000100020000
00003fc900000000000000000000000010800240c9141c9d01101000c8000001
028a3a40c9141c9dab100000c80000011088024055101c9d01141000c8000001
02880340c9101c9dff000003c80000011e02010000021c9cc8000001c8000001
000000000000000000000000000000001e02010000021c88c8000001c8000001
00003f80000000000000000000000000028a0340c9141c9dff100003c8000001
1088024000021c9c00020000c800000100000000000000000000000000000000
028a044055101c9d00020000c914000100004049000000000000000000000000
08880440ff141c9d000200000110000000004049000000000000000000000000
02880940c9141c9d55100001c800000110040300c9101c9d00020000c8000001
51ec3db8000000000000000000000000028a0840c9141c9d55100001c8000001
08882340c9101c9dc8000001c800000104000600c8041c9d00020000c8000001
00003e800000000000000000000000000e840240c91c1c9dc8020001c8000001
0000000000000000000000000000000004822240c9141c9dc8000001c8000001
02043a00ff101c9dfe080001c80000011004090055181c9d00020000c8000001
0000000000000000000000000000000002040200c8081c9dfe080001c8000001
048a2340c9141c9dc8000001c8000001028a3a40ab141c9cab040000c8000001
10040300c9101c9d00020000c8000001eb853f11000000000000000000000000
028a024055101c9dc9140001c800000108880900ff181c9d00020000c8000001
0000000000000000000000000000000002040200c8081c9dc9140001c8000001
10023a00c9101c9dfe085001c80000011004040000081c9cc8020001c8040003
00000000000000000000000066663ee60e86024001041c9cc8020001c8000001
0000000000000000000000000000000010840300c8081c9d00020000c8000001
00003f8000000000000000000000000002000200c8001c9daa000000c8000001
0e840240c9081c9d55100001c80000010e840240c9081c9dff080001c8000001
1080020000001c9cc8000001c80000010e800440c90c1c9dc8020001c9080001
000000000000000000000000000000000e800240ff001c9dc9001001c8000001
1081014000021c9cc8000001c800000100000000000000000000000000000000
"
}

SubProgram "d3d11 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
ConstBuffer "$Globals" 224 // 180 used size, 15 vars
Vector 16 [_LightColor0] 4
Vector 112 [_Color] 4
Vector 144 [cSpecular] 4
Float 160 [roughnessV]
Float 168 [freBias]
Float 172 [frePow]
Float 176 [orenNayar]
ConstBuffer "UnityLighting" 400 // 32 used size, 16 vars
Vector 16 [_LightPositionRange] 4
ConstBuffer "UnityShadows" 416 // 400 used size, 8 vars
Vector 384 [_LightShadowData] 4
BindCB "$Globals" 0
BindCB "UnityLighting" 1
BindCB "UnityShadows" 2
SetTexture 0 [_BumpMap] 2D 4
SetTexture 1 [_MainTex] 2D 3
SetTexture 2 [_SpecularMap] 2D 5
SetTexture 3 [_LightTextureB0] 2D 2
SetTexture 4 [_LightTexture0] CUBE 1
SetTexture 5 [_ShadowMapTexture] CUBE 0
// 128 instructions, 4 temp regs, 0 temp arrays:
// ALU 89 float, 0 int, 2 uint
// TEX 9 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"ps_4_0
eefiecedlllahendfnhipbjijlhegbdofoelkomcabaaaaaapmbbaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcnmbaaaaa
eaaaaaaadhaeaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaa
abaaaaaaacaaaaaafjaaaaaeegiocaaaacaaaaaabjaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fidaaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaogbkbaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaeaaaaaadcaaaaapdcaabaaaaaaaaaaa
hgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpdcaaaaakicaabaaa
aaaaaaaabkaabaiaebaaaaaaaaaaaaaabkaabaaaaaaaaaaadkaabaaaaaaaaaaa
elaaaaafecaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaa
aaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaakbcaabaaaacaaaaaaabeaaaaa
dagojjlmdkaabaiaibaaaaaaabaaaaaaabeaaaaachbgjidndcaaaaakbcaabaaa
acaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaaabeaaaaaiedefjlo
dcaaaaakbcaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaibaaaaaaabaaaaaa
abeaaaaakeanmjdpaaaaaaaiccaabaaaacaaaaaadkaabaiambaaaaaaabaaaaaa
abeaaaaaaaaaiadpelaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaadiaaaaah
ecaabaaaacaaaaaabkaabaaaacaaaaaaakaabaaaacaaaaaadcaaaaajecaabaaa
acaaaaaackaabaaaacaaaaaaabeaaaaaaaaaaamaabeaaaaanlapejeadbaaaaai
icaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaadgcaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaaabaaaaahecaabaaaacaaaaaadkaabaaa
acaaaaaackaabaaaacaaaaaadcaaaaajbcaabaaaacaaaaaaakaabaaaacaaaaaa
bkaabaaaacaaaaaackaabaaaacaaaaaabaaaaaahccaabaaaacaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafccaabaaaacaaaaaabkaabaaaacaaaaaa
diaaaaahocaabaaaacaaaaaafgafbaaaacaaaaaaagbjbaaaadaaaaaabaaaaaah
bcaabaaaadaaaaaaegacbaaaaaaaaaaajgahbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaiaebaaaaaaaaaaaaaaagaabaaaadaaaaaajgahbaaaacaaaaaa
baaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaadcaaaaakccaabaaa
aaaaaaaaabeaaaaadagojjlmakaabaiaibaaaaaaadaaaaaaabeaaaaachbgjidn
dcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaiaibaaaaaaadaaaaaa
abeaaaaaiedefjlodcaaaaakccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaia
ibaaaaaaadaaaaaaabeaaaaakeanmjdpaaaaaaaiecaabaaaaaaaaaaaakaabaia
mbaaaaaaadaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaackaabaaa
aaaaaaaadiaaaaahbcaabaaaabaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaamaabeaaaaa
nlapejeadbaaaaaiccaabaaaabaaaaaaakaabaaaadaaaaaaakaabaiaebaaaaaa
adaaaaaadeaaaaahecaabaaaabaaaaaaakaabaaaadaaaaaaabeaaaaaaaaaaaaa
abaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaaj
ccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
ddaaaaahecaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaadeaaaaah
ccaabaaaaaaaaaaaakaabaaaacaaaaaabkaabaaaaaaaaaaaenaaaaagccaabaaa
aaaaaaaaaanaaaaabkaabaaaaaaaaaaaenaaaaahbcaabaaaabaaaaaabcaabaaa
acaaaaaackaabaaaaaaaaaaaaoaaaaahecaabaaaaaaaaaaaakaabaaaabaaaaaa
akaabaaaacaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaajecaabaaaaaaaaaaaakiacaaaaaaaaaaaalaaaaaaakiacaaa
aaaaaaaaalaaaaaadcaaaaaodcaabaaaabaaaaaaagiacaaaaaaaaaaaalaaaaaa
agiacaaaaaaaaaaaalaaaaaaaceaaaaaifolbbdpomfblidnaaaaaaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaadcaaaaak
ecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaaadpabeaaaaa
aaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaggggogdo
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaabaaaaaadcaaaaaj
bcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajocaabaaaaaaaaaaaagbjbaaaacaaaaaapgapbaaaaaaaaaaafgaobaaa
acaaaaaabaaaaaahbcaabaaaabaaaaaajgahbaaaaaaaaaaajgahbaaaaaaaaaaa
eeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagaabaaaabaaaaaabacaaaahccaabaaaaaaaaaaajgahbaaa
acaaaaaajgahbaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaaaeadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaackaabaaa
aaaaaaaaaoaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaai
ccaabaaaabaaaaaackaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
ccaabaaaabaaaaaabkaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaa
abaaaaaadkiacaaaaaaaaaaaakaaaaaabjaaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
dcaaaaajbcaabaaaabaaaaaaakaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
omfblidnaoaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
ddaaaaahccaabaaaaaaaaaaadkaabaaaaaaaaaaabkaabaaaaaaaaaaaddaaaaah
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaajecaabaaa
aaaaaaaackiacaiaebaaaaaaaaaaaaaaakaaaaaaabeaaaaaaaaaiadpdccaaaak
ecaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaabaaaaaackiacaaaaaaaaaaa
akaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
dcaaaaajecaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaialpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaajccaabaaaabaaaaaaakiacaaaaaaaaaaaakaaaaaaakiacaaaaaaaaaaa
akaaaaaadiaaaaahecaabaaaabaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaah
ccaabaaaabaaaaaabkaabaaaabaaaaaaabeaaaaaaaaaiaeadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkaabaaaabaaaaaaaoaaaaakicaabaaaaaaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpdkaabaaaaaaaaaaaaoaaaaah
ecaabaaaaaaaaaaackaabaaaaaaaaaaackaabaaaabaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaabeaaaaadlkklidpbjaaaaafecaabaaaaaaaaaaa
ckaabaaaaaaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
aaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaafaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaadkaabaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
aoaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ocaabaaaaaaaaaaafgafbaaaaaaaaaaaagijcaaaaaaaaaaaajaaaaaadiaaaaah
ocaabaaaaaaaaaaaagaabaaaacaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaa
aaaaaaaafgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaacaaaaaaegiccaaaaaaaaaaaahaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegbcbaaaafaaaaaaegbcbaaaafaaaaaaelaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaabaaaaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaomfbhidpaaaaaaakhcaabaaaabaaaaaaegbcbaaaafaaaaaaaceaaaaa
aaaaaadmaaaaaadmaaaaaadmaaaaaaaaefaaaaajpcaabaaaabaaaaaaegacbaaa
abaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaabbaaaaakbcaabaaaabaaaaaa
egaobaaaabaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbaaaaaaak
hcaabaaaacaaaaaaegbcbaaaafaaaaaaaceaaaaaaaaaaalmaaaaaalmaaaaaadm
aaaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaa
aagabaaaaaaaaaaabbaaaaakccaabaaaabaaaaaaegaobaaaacaaaaaaaceaaaaa
aaaaiadpibiaiadlicabibdhimpinfdbaaaaaaakhcaabaaaacaaaaaaegbcbaaa
afaaaaaaaceaaaaaaaaaaalmaaaaaadmaaaaaalmaaaaaaaaefaaaaajpcaabaaa
acaaaaaaegacbaaaacaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaabbaaaaak
ecaabaaaabaaaaaaegaobaaaacaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdh
impinfdbaaaaaaakhcaabaaaacaaaaaaegbcbaaaafaaaaaaaceaaaaaaaaaaadm
aaaaaalmaaaaaalmaaaaaaaaefaaaaajpcaabaaaacaaaaaaegacbaaaacaaaaaa
eghobaaaafaaaaaaaagabaaaaaaaaaaabbaaaaakicaabaaaabaaaaaaegaobaaa
acaaaaaaaceaaaaaaaaaiadpibiaiadlicabibdhimpinfdbdbaaaaahpcaabaaa
abaaaaaaegaobaaaabaaaaaapgapbaaaaaaaaaaadhaaaaanpcaabaaaabaaaaaa
egaobaaaabaaaaaaagiacaaaacaaaaaabiaaaaaaaceaaaaaaaaaiadpaaaaiadp
aaaaiadpaaaaiadpbbaaaaakicaabaaaaaaaaaaaegaobaaaabaaaaaaaceaaaaa
aaaaiadoaaaaiadoaaaaiadoaaaaiadobaaaaaahbcaabaaaabaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaaagaabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbcbaaa
aeaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaadiaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaadkaabaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaaaeadiaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES"
}

}
	}

#LINE 185

	}
	FallBack "Diffuse"
}